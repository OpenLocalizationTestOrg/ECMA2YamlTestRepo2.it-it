### YamlMime:ManagedReference
items:
- uid: System.Drawing.CharacterRange
  id: CharacterRange
  children:
  - System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)
  - System.Drawing.CharacterRange.Equals(System.Object)
  - System.Drawing.CharacterRange.First
  - System.Drawing.CharacterRange.GetHashCode
  - System.Drawing.CharacterRange.Length
  - System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)
  - System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)
  langs:
  - csharp
  name: CharacterRange
  nameWithType: CharacterRange
  fullName: System.Drawing.CharacterRange
  type: Struct
  summary: "Specifica un intervallo di posizioni dei caratteri all&quot;interno di una stringa."
  remarks: ''
  example:
  - "The following code example demonstrates how to create a CharacterRange and use it to highlight part of a string. This example is designed to be used with Windows Forms. Paste the example into a form and call the `HighlightACharacterRange` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.CharacterRangeExample#1](~/add/codesnippet/csharp/t-system.drawing.charact_1.cs)]\n [!code-cpp[System.Drawing.CharacterRangeExample#1](~/add/codesnippet/cpp/t-system.drawing.charact_1.cpp)]\n [!code-vb[System.Drawing.CharacterRangeExample#1](~/add/codesnippet/visualbasic/t-system.drawing.charact_1.vb)]"
  syntax:
    content: public struct CharacterRange
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Drawing.CharacterRange
  langs:
  - csharp
  name: CharacterRange(Int32,Int32)
  nameWithType: CharacterRange.CharacterRange(Int32,Int32)
  fullName: System.Drawing.CharacterRange.CharacterRange(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref> struttura, specificando un intervallo di posizioni dei caratteri all&quot;interno di una stringa."
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Drawing.CharacterRange> and use it to highlight part of a string. This example is designed to be used with Windows Forms. Paste the example into a form and call the `HighlightACharacterRange` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.CharacterRangeExample#1](~/add/codesnippet/csharp/m-system.drawing.charact_0_1.cs)]\n [!code-cpp[System.Drawing.CharacterRangeExample#1](~/add/codesnippet/cpp/m-system.drawing.charact_0_1.cpp)]\n [!code-vb[System.Drawing.CharacterRangeExample#1](~/add/codesnippet/visualbasic/m-system.drawing.charact_0_1.vb)]"
  syntax:
    content: public CharacterRange (int First, int Length);
    parameters:
    - id: First
      type: System.Int32
      description: "La posizione del primo carattere nell&quot;intervallo. Ad esempio, se `First` è impostato su 0, la prima posizione dell&quot;intervallo è posizione 0 nella stringa."
    - id: Length
      type: System.Int32
      description: "Il numero di posizioni nell&quot;intervallo."
  overload: System.Drawing.CharacterRange.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.CharacterRange.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.CharacterRange
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CharacterRange.Equals(Object)
  fullName: System.Drawing.CharacterRange.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene un valore che indica se questo oggetto è equivalente all&quot;oggetto specificato."
  remarks: "È inoltre possibile utilizzare <xref:System.Drawing.CharacterRange.op_Equality%2A>per verificare l&quot;uguaglianza.</xref:System.Drawing.CharacterRange.op_Equality%2A>"
  example:
  - "The following example demonstrates how to use the Equals method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CharacterRangeEquality2` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#2](~/add/codesnippet/visualbasic/m-system.drawing.charact_1_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#2](~/add/codesnippet/csharp/m-system.drawing.charact_1_1.cs)]"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da confrontare per verificarne l&quot;uguaglianza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare l&quot;oggetto specificato è un&quot;istanza con lo stesso <> </> *> e <> </> *> valore di questa istanza; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.CharacterRange.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.CharacterRange.First
  id: First
  parent: System.Drawing.CharacterRange
  langs:
  - csharp
  name: First
  nameWithType: CharacterRange.First
  fullName: System.Drawing.CharacterRange.First
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta la posizione nella stringa del primo carattere dell&quot;oggetto <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref>."
  syntax:
    content: public int First { get; set; }
    return:
      type: System.Int32
      description: "La prima posizione di questo <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref>."
  overload: System.Drawing.CharacterRange.First*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.CharacterRange.GetHashCode
  id: GetHashCode
  parent: System.Drawing.CharacterRange
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CharacterRange.GetHashCode()
  fullName: System.Drawing.CharacterRange.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Restituisce il codice hash per questa istanza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Intero con segno a 32 bit che rappresenta il codice hash per questa istanza."
  overload: System.Drawing.CharacterRange.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.CharacterRange.Length
  id: Length
  parent: System.Drawing.CharacterRange
  langs:
  - csharp
  name: Length
  nameWithType: CharacterRange.Length
  fullName: System.Drawing.CharacterRange.Length
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene o imposta il numero di posizioni in <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref>."
  syntax:
    content: public int Length { get; set; }
    return:
      type: System.Int32
      description: "Il numero di posizioni in <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref>."
  overload: System.Drawing.CharacterRange.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)
  id: op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)
  parent: System.Drawing.CharacterRange
  langs:
  - csharp
  name: op_Equality(CharacterRange,CharacterRange)
  nameWithType: CharacterRange.op_Equality(CharacterRange,CharacterRange)
  fullName: System.Drawing.CharacterRange.op_Equality(CharacterRange,CharacterRange)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Confronta due <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref> oggetti. Ottiene un valore che indica se il <> </> *> e <> </> *> i valori dei due <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref> oggetti sono uguali."
  remarks: "È inoltre possibile verificare l&quot;uguaglianza utilizzando il <xref:System.Drawing.CharacterRange.Equals%2A>metodo.</xref:System.Drawing.CharacterRange.Equals%2A>"
  example:
  - "The following example demonstrates how to use the Equality operator. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CharacterRangeEquality1` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#1](~/add/codesnippet/visualbasic/77d6f8e6-d038-41e3-99f0-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#1](~/add/codesnippet/csharp/77d6f8e6-d038-41e3-99f0-_1.cs)]"
  syntax:
    content: public static bool op_Equality (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);
    parameters:
    - id: cr1
      type: System.Drawing.CharacterRange
      description: "Oggetto <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref> da confrontare per verificarne l&quot;uguaglianza."
    - id: cr2
      type: System.Drawing.CharacterRange
      description: "Oggetto <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref> da confrontare per verificarne l&quot;uguaglianza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare che i due <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref> oggetti hanno lo stesso <> </> *> e <> </> *> valori; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.CharacterRange.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)
  id: op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)
  parent: System.Drawing.CharacterRange
  langs:
  - csharp
  name: op_Inequality(CharacterRange,CharacterRange)
  nameWithType: CharacterRange.op_Inequality(CharacterRange,CharacterRange)
  fullName: System.Drawing.CharacterRange.op_Inequality(CharacterRange,CharacterRange)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Confronta due <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref> oggetti. Ottiene un valore che indica se il <> </> *> o <> </> *> i valori dei due <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref> oggetti non sono uguali."
  remarks: "Il metodo di disuguaglianza restituisce l&quot;opposto del <xref:System.Drawing.CharacterRange.op_Equality%2A>metodo.</xref:System.Drawing.CharacterRange.op_Equality%2A>"
  example:
  - "The following example demonstrates how to use the Inequality method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CharacterRangeInequality` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#3](~/add/codesnippet/visualbasic/b5fb9968-06fd-40a0-abf3-_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#3](~/add/codesnippet/csharp/b5fb9968-06fd-40a0-abf3-_1.cs)]"
  syntax:
    content: public static bool op_Inequality (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);
    parameters:
    - id: cr1
      type: System.Drawing.CharacterRange
      description: "Oggetto <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref> da confrontare per verificarne la disuguaglianza."
    - id: cr2
      type: System.Drawing.CharacterRange
      description: "Oggetto <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref> da confrontare per verificarne la disuguaglianza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare che il <> </> *> o <> </> *> i valori dei due <xref href=&quot;System.Drawing.CharacterRange&quot;> </xref> gli oggetti sono diversi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.CharacterRange.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: CharacterRange(Int32,Int32)
  nameWithType: CharacterRange.CharacterRange(Int32,Int32)
  fullName: System.Drawing.CharacterRange.CharacterRange(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.CharacterRange.Equals(System.Object)
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: Equals(Object)
  nameWithType: CharacterRange.Equals(Object)
  fullName: System.Drawing.CharacterRange.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.CharacterRange.First
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: First
  nameWithType: CharacterRange.First
  fullName: System.Drawing.CharacterRange.First
- uid: System.Drawing.CharacterRange.GetHashCode
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: GetHashCode()
  nameWithType: CharacterRange.GetHashCode()
  fullName: System.Drawing.CharacterRange.GetHashCode()
- uid: System.Drawing.CharacterRange.Length
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: Length
  nameWithType: CharacterRange.Length
  fullName: System.Drawing.CharacterRange.Length
- uid: System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: op_Equality(CharacterRange,CharacterRange)
  nameWithType: CharacterRange.op_Equality(CharacterRange,CharacterRange)
  fullName: System.Drawing.CharacterRange.op_Equality(CharacterRange,CharacterRange)
- uid: System.Drawing.CharacterRange
  parent: System.Drawing
  isExternal: false
  name: CharacterRange
  nameWithType: CharacterRange
  fullName: System.Drawing.CharacterRange
- uid: System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: op_Inequality(CharacterRange,CharacterRange)
  nameWithType: CharacterRange.op_Inequality(CharacterRange,CharacterRange)
  fullName: System.Drawing.CharacterRange.op_Inequality(CharacterRange,CharacterRange)
- uid: System.Drawing.CharacterRange.#ctor*
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: CharacterRange
  nameWithType: CharacterRange.CharacterRange
- uid: System.Drawing.CharacterRange.Equals*
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: Equals
  nameWithType: CharacterRange.Equals
- uid: System.Drawing.CharacterRange.First*
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: First
  nameWithType: CharacterRange.First
- uid: System.Drawing.CharacterRange.GetHashCode*
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: GetHashCode
  nameWithType: CharacterRange.GetHashCode
- uid: System.Drawing.CharacterRange.Length*
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: Length
  nameWithType: CharacterRange.Length
- uid: System.Drawing.CharacterRange.op_Equality*
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: op_Equality
  nameWithType: CharacterRange.op_Equality
- uid: System.Drawing.CharacterRange.op_Inequality*
  parent: System.Drawing.CharacterRange
  isExternal: false
  name: op_Inequality
  nameWithType: CharacterRange.op_Inequality
