### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil
  id: ComManagedImportUtil
  children:
  - System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor
  - System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)
  - System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)
  langs:
  - csharp
  name: ComManagedImportUtil
  nameWithType: ComManagedImportUtil
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil
  type: Class
  summary: "Identifica e installa i componenti nel catalogo COM+."
  remarks: "ComManagedImportUtil viene utilizzata internamente da .NET Framework. Non è necessario utilizzare la classe direttamente nel codice."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("3b0398c9-7812-4007-85cb-18c771f2206f")]

      public class ComManagedImportUtil : System.EnterpriseServices.Internal.IComManagedImportUtil
  inheritance:
  - System.Object
  implements:
  - System.EnterpriseServices.Internal.IComManagedImportUtil
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  langs:
  - csharp
  name: ComManagedImportUtil()
  nameWithType: ComManagedImportUtil.ComManagedImportUtil()
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.ComManagedImportUtil()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.EnterpriseServices.Internal.ComManagedImportUtil&quot;> </xref> classe."
  syntax:
    content: public ComManagedImportUtil ();
    parameters: []
  overload: System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)
  id: GetComponentInfo(System.String,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  langs:
  - csharp
  name: GetComponentInfo(String,String,String)
  nameWithType: ComManagedImportUtil.GetComponentInfo(String,String,String)
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Ottiene le informazioni sul componente dall&quot;assembly."
  remarks: "Questo metodo viene chiamato dal catalogo COM+ per identificare gli identificatori di classe (CLSID) e i ProgID dei componenti in una DLL prima che sia registrato."
  syntax:
    content: public void GetComponentInfo (string assemblyPath, out string numComponents, out string componentInfo);
    parameters:
    - id: assemblyPath
      type: System.String
      description: "Il percorso dell&quot;assembly."
    - id: numComponents
      type: System.String
      description: "Quando questo metodo termina, questo parametro contiene il numero di componenti dell&quot;assembly."
    - id: componentInfo
      type: System.String
      description: "Quando questo metodo termina, questo parametro contiene le informazioni sui componenti."
  overload: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>assemblyPath</code>è una stringa vuota, contiene solo spazi vuoti o contiene uno o più caratteri non validi definiti da <xref:System.IO.Path.InvalidPathChars>.       oppure il sistema non è stato possibile recuperare il percorso assoluto."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone delle autorizzazioni necessarie."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>assemblyPath</code>contiene i due punti (&quot;:&quot;)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Il percorso specificato, nome del file o entrambi superano la lunghezza massima definita dal sistema. Ad esempio, nelle piattaforme basate su Windows, i percorsi devono contenere meno di 248 caratteri e i nomi di file devono essere meno di 260 caratteri."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)
  id: InstallAssembly(System.String,System.String,System.String)
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  langs:
  - csharp
  name: InstallAssembly(String,String,String)
  nameWithType: ComManagedImportUtil.InstallAssembly(String,String,String)
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Installa un assembly in un&quot;applicazione COM+."
  remarks: "InstallAssembly chiamate <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=fullName>, che consente di eseguire i passaggi seguenti: 1.</xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=fullName>  Registrazione dell&quot;assembly.      2.  Generazione di una libreria dei tipi.      3.  Registrazione della libreria dei tipi.      4.  Installazione della libreria dei tipi nell&quot;applicazione specificata.      5.  Configurazione dei componenti contenuti nella libreria dei tipi.       Questo metodo, il chiamante deve disporre di privilegi amministrativi nel computer locale."
  syntax:
    content: public void InstallAssembly (string asmpath, string parname, string appname);
    parameters:
    - id: asmpath
      type: System.String
      description: "Il percorso dell&quot;assembly."
    - id: parname
      type: System.String
      description: "Il nome della partizione COM+."
    - id: appname
      type: System.String
      description: "Il nome dell&quot;applicazione COM+."
  overload: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Un chiamante nella catena di chiamate non dispone dell&quot;autorizzazione di accesso di codice non gestito."
  - type: System.EnterpriseServices.RegistrationException
    commentId: T:System.EnterpriseServices.RegistrationException
    description: "Assembly di input non ha un nome sicuro."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.EnterpriseServices.RegistrationException
  parent: System.EnterpriseServices
  isExternal: false
  name: RegistrationException
  nameWithType: RegistrationException
  fullName: System.EnterpriseServices.RegistrationException
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  isExternal: false
  name: ComManagedImportUtil()
  nameWithType: ComManagedImportUtil.ComManagedImportUtil()
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.ComManagedImportUtil()
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  isExternal: false
  name: GetComponentInfo(String,String,String)
  nameWithType: ComManagedImportUtil.GetComponentInfo(String,String,String)
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  isExternal: false
  name: InstallAssembly(String,String,String)
  nameWithType: ComManagedImportUtil.InstallAssembly(String,String,String)
  fullName: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(String,String,String)
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor*
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  isExternal: false
  name: ComManagedImportUtil
  nameWithType: ComManagedImportUtil.ComManagedImportUtil
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo*
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  isExternal: false
  name: GetComponentInfo
  nameWithType: ComManagedImportUtil.GetComponentInfo
- uid: System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly*
  parent: System.EnterpriseServices.Internal.ComManagedImportUtil
  isExternal: false
  name: InstallAssembly
  nameWithType: ComManagedImportUtil.InstallAssembly
