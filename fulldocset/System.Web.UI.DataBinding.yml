### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataBinding
  id: DataBinding
  children:
  - System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)
  - System.Web.UI.DataBinding.Equals(System.Object)
  - System.Web.UI.DataBinding.Expression
  - System.Web.UI.DataBinding.GetHashCode
  - System.Web.UI.DataBinding.PropertyName
  - System.Web.UI.DataBinding.PropertyType
  langs:
  - csharp
  name: DataBinding
  nameWithType: DataBinding
  fullName: System.Web.UI.DataBinding
  type: Class
  summary: "Contiene informazioni su una singola espressione di associazione di dati in un controllo server ASP.NET, che consente lo sviluppo di applicazioni di rapida finestre di progettazione (RAD), ad esempio Microsoft Visual Studio, per creare espressioni di associazione dati in fase di progettazione. Questa classe non può essere ereditata."
  remarks: "Ogni espressione di associazione dati in un controllo server viene rappresentata in fase di progettazione da un&quot;istanza della classe di associazione dati. Qualsiasi controllo server che contiene uno o più espressioni di associazione dati ha un <xref:System.Web.UI.DataBindingCollection>oggetto che contiene gli oggetti di Data Binding.</xref:System.Web.UI.DataBindingCollection> Questa raccolta è accessibile tramite la <xref:System.Web.UI.Control>classe che implementa il <xref:System.Web.UI.IDataBindingsAccessor>interfaccia.</xref:System.Web.UI.IDataBindingsAccessor> </xref:System.Web.UI.Control> Quando si crea una finestra di progettazione RAD personalizzata, utilizzare tale implementazione per l&quot;accesso alla raccolta. Qualsiasi associazione di dati o <xref:System.Web.UI.DataBindingCollection>oggetti associati a un controllo server esistono solo in fase di progettazione.</xref:System.Web.UI.DataBindingCollection> Non esistono in fase di esecuzione e, pertanto, non sono accessibili in fase di esecuzione."
  example:
  - "The following code example creates a DataBinding object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`. If the collection contains a DataBinding object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property. If there is no such object, it returns an empty string (\"\").  \n  \n [!code-cs[DataBinding_Sample1#2](~/add/codesnippet/csharp/t-system.web.ui.databind_1_1.cs)]\n [!code-vb[DataBinding_Sample1#2](~/add/codesnippet/visualbasic/t-system.web.ui.databind_1_1.vb)]"
  syntax:
    content: public sealed class DataBinding
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)
  id: '#ctor(System.String,System.Type,System.String)'
  parent: System.Web.UI.DataBinding
  langs:
  - csharp
  name: DataBinding(String,Type,String)
  nameWithType: DataBinding.DataBinding(String,Type,String)
  fullName: System.Web.UI.DataBinding.DataBinding(String,Type,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.DataBinding&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`. If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property. If there is no such object, it returns an empty string (\"\").  \n  \n [!code-cs[DataBinding_Sample1#3](~/add/codesnippet/csharp/m-system.web.ui.databind_1_1.cs)]\n [!code-vb[DataBinding_Sample1#3](~/add/codesnippet/visualbasic/m-system.web.ui.databind_1_1.vb)]"
  syntax:
    content: public DataBinding (string propertyName, Type propertyType, string expression);
    parameters:
    - id: propertyName
      type: System.String
      description: "La proprietà per l&quot;associazione dati."
    - id: propertyType
      type: System.Type
      description: "Il tipo di .NET Framework della proprietà per l&quot;associazione dati."
    - id: expression
      type: System.String
      description: "L&quot;espressione di associazione di dati da valutare."
  overload: System.Web.UI.DataBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinding.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.UI.DataBinding
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DataBinding.Equals(Object)
  fullName: System.Web.UI.DataBinding.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se l&quot;oggetto specificato è la stessa istanza di <xref href=&quot;System.Web.UI.DataBinding&quot;> </xref> classe dell&quot;oggetto corrente."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "L&quot;oggetto da confrontare con l&quot;oggetto corrente <xref href=&quot;System.Web.UI.DataBinding&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i nomi delle proprietà di associazione a dati in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.DataBinding.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinding.Expression
  id: Expression
  parent: System.Web.UI.DataBinding
  langs:
  - csharp
  name: Expression
  nameWithType: DataBinding.Expression
  fullName: System.Web.UI.DataBinding.Expression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta l&quot;espressione di associazione di dati da valutare."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`. If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's Expression property. If there is no such object, it returns an empty string (\"\").  \n  \n [!code-cs[DataBinding_Sample1#3](~/add/codesnippet/csharp/p-system.web.ui.databind_3_1.cs)]\n [!code-vb[DataBinding_Sample1#3](~/add/codesnippet/visualbasic/p-system.web.ui.databind_3_1.vb)]"
  syntax:
    content: public string Expression { get; set; }
    return:
      type: System.String
      description: "L&quot;espressione di associazione di dati da valutare."
  overload: System.Web.UI.DataBinding.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinding.GetHashCode
  id: GetHashCode
  parent: System.Web.UI.DataBinding
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DataBinding.GetHashCode()
  fullName: System.Web.UI.DataBinding.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Recupera il codice hash per un&quot;istanza di <xref href=&quot;System.Web.UI.DataBinding&quot;> </xref> oggetto."
  remarks: "<xref:System.Web.UI.DataBinding>gli oggetti vengono inseriti un <xref:System.Web.UI.DataBindingCollection>oggetto, accessibile solo in fase di progettazione.</xref:System.Web.UI.DataBindingCollection></xref:System.Web.UI.DataBinding> La raccolta è una tabella hash che rappresenta le associazioni su un controllo. Può esistere solo un binding per ogni proprietà, in modo corrisponda il calcolo del codice hash di <xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=fullName>implementazione e accetta solo il nome della proprietà in considerazione.</xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=fullName>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash di un intero con segno a 32 bit."
  overload: System.Web.UI.DataBinding.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinding.PropertyName
  id: PropertyName
  parent: System.Web.UI.DataBinding
  langs:
  - csharp
  name: PropertyName
  nameWithType: DataBinding.PropertyName
  fullName: System.Web.UI.DataBinding.PropertyName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene il nome della proprietà del controllo server ASP.NET per l&quot;associazione dati."
  remarks: ''
  example:
  - "The following code example declares three variables, `dataBindingOutput1`, `dataBindingOutput2`, and `dataBindingOutput3`, which access the different properties of a <xref:System.Web.UI.DataBinding> object, `myDataBinding2`. It then assigns the value of the PropertyName property to `dataBindingOutput1`, concatenates it with the string \"The property name is \", and writes the value to a file.  \n  \n [!code-cs[DataBinding_Sample1#6](~/add/codesnippet/csharp/p-system.web.ui.databind_2_1.cs)]\n [!code-vb[DataBinding_Sample1#6](~/add/codesnippet/visualbasic/p-system.web.ui.databind_2_1.vb)]"
  syntax:
    content: public string PropertyName { get; }
    return:
      type: System.String
      description: "La proprietà per l&quot;associazione dati."
  overload: System.Web.UI.DataBinding.PropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinding.PropertyType
  id: PropertyType
  parent: System.Web.UI.DataBinding
  langs:
  - csharp
  name: PropertyType
  nameWithType: DataBinding.PropertyType
  fullName: System.Web.UI.DataBinding.PropertyType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene il tipo di .NET Framework della proprietà del controllo server ASP.NET con associazione a dati."
  remarks: ''
  example:
  - "The following code example declares three variables, `dataBindingOutput1`, `dataBindingOutput2`, and `dataBindingOutput3`, which access the different properties of a <xref:System.Web.UI.DataBinding> object, `myDataBinding2`. The PropertyType property value is assigned to `dataBindingOutput2` and concatenated with the string \"The property type is \", and writes the value to a file.  \n  \n [!code-cs[DataBinding_Sample1#6](~/add/codesnippet/csharp/p-system.web.ui.databind_0_1.cs)]\n [!code-vb[DataBinding_Sample1#6](~/add/codesnippet/visualbasic/p-system.web.ui.databind_0_1.vb)]"
  syntax:
    content: public Type PropertyType { get; }
    return:
      type: System.Type
      description: "Il tipo di .NET Framework della proprietà con associazione a dati."
  overload: System.Web.UI.DataBinding.PropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: DataBinding(String,Type,String)
  nameWithType: DataBinding.DataBinding(String,Type,String)
  fullName: System.Web.UI.DataBinding.DataBinding(String,Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.DataBinding.Equals(System.Object)
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: Equals(Object)
  nameWithType: DataBinding.Equals(Object)
  fullName: System.Web.UI.DataBinding.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataBinding.Expression
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: Expression
  nameWithType: DataBinding.Expression
  fullName: System.Web.UI.DataBinding.Expression
- uid: System.Web.UI.DataBinding.GetHashCode
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: GetHashCode()
  nameWithType: DataBinding.GetHashCode()
  fullName: System.Web.UI.DataBinding.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.DataBinding.PropertyName
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: PropertyName
  nameWithType: DataBinding.PropertyName
  fullName: System.Web.UI.DataBinding.PropertyName
- uid: System.Web.UI.DataBinding.PropertyType
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: PropertyType
  nameWithType: DataBinding.PropertyType
  fullName: System.Web.UI.DataBinding.PropertyType
- uid: System.Web.UI.DataBinding.#ctor*
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: DataBinding
  nameWithType: DataBinding.DataBinding
- uid: System.Web.UI.DataBinding.Equals*
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: Equals
  nameWithType: DataBinding.Equals
- uid: System.Web.UI.DataBinding.Expression*
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: Expression
  nameWithType: DataBinding.Expression
- uid: System.Web.UI.DataBinding.GetHashCode*
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: GetHashCode
  nameWithType: DataBinding.GetHashCode
- uid: System.Web.UI.DataBinding.PropertyName*
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: PropertyName
  nameWithType: DataBinding.PropertyName
- uid: System.Web.UI.DataBinding.PropertyType*
  parent: System.Web.UI.DataBinding
  isExternal: false
  name: PropertyType
  nameWithType: DataBinding.PropertyType
