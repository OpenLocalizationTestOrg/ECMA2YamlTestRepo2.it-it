### YamlMime:ManagedReference
items:
- uid: System.Web.DefaultHttpHandler
  id: DefaultHttpHandler
  children:
  - System.Web.DefaultHttpHandler.#ctor
  - System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.DefaultHttpHandler.Context
  - System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  - System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  - System.Web.DefaultHttpHandler.IsReusable
  - System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  - System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  - System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: DefaultHttpHandler
  nameWithType: DefaultHttpHandler
  fullName: System.Web.DefaultHttpHandler
  type: Class
  summary: "Rappresenta i metodi e proprietà di un gestore HTTP predefinito."
  remarks: "Un oggetto DefaultHttpHandler intercetta le richieste in arrivo nella pipeline HTTP quando sia l&quot;intercettazione delle richieste è stato configurato tramite Internet Information Services (IIS) 6.0 e nessuna associazione esplicita si applicano all&quot;estensione richiesta.       L&quot;intercettazione delle richieste può essere impostata tramite la funzionalità di mapping applicazioni jolly introdotta in IIS 6.0. Per ulteriori informazioni, cercare il [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118) per informazioni sull&quot;utilizzo di mapping applicazioni jolly per modificare il mapping di un URL.       La classe implementa DefaultHttpHandler il <xref:System.Web.IHttpAsyncHandler>interfaccia per fornire l&quot;elaborazione asincrona della richiesta.</xref:System.Web.IHttpAsyncHandler> Per informazioni generali sui gestori HTTP, vedere [gestori HTTP e moduli HTTP Overview](~/add/includes/ajax-current-ext-md.md). Inoltre, per ulteriori informazioni, vedere gli argomenti seguenti: - informazioni sulla creazione di gestori HTTP asincroni, vedere [procedura dettagliata: creazione di un gestore HTTP asincrono](~/add/includes/ajax-current-ext-md.md).      -Informazioni sulla registrazione di gestori HTTP, vedere [procedura: registrare gestori HTTP](~/add/includes/ajax-current-ext-md.md).       Le classi possono derivare dalla classe DefaultHttpHandler per fornire la gestione personalizzata delle richieste. Impossibile eseguire l&quot;override di un gestore HTTP asincrono derivato dal DefaultHttpHandler il <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>metodo per modificare la modalità di elaborazione delle richieste.</xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>       Un DefaultHttpHandler non utilizza gli errori di ASP.NET. Il contenuto esistente che utilizza gli errori di IIS o un meccanismo di errore personalizzato ISAPI proprietà funzionerà subisce modifiche."
  example:
  - "The following code example demonstrates how to implement a customized HTTP handler by deriving from the DefaultHttpHandler class.  \n  \n [!code-vb[System.Web.DefaultHttpHandler#1](~/add/codesnippet/visualbasic/t-system.web.defaulthttp_1.vb)]\n [!code-cs[System.Web.DefaultHttpHandler#1](~/add/codesnippet/csharp/t-system.web.defaulthttp_1.cs)]"
  syntax:
    content: 'public class DefaultHttpHandler : System.Web.IHttpAsyncHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpAsyncHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.#ctor
  id: '#ctor'
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: DefaultHttpHandler()
  nameWithType: DefaultHttpHandler.DefaultHttpHandler()
  fullName: System.Web.DefaultHttpHandler.DefaultHttpHandler()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> classe."
  syntax:
    content: public DefaultHttpHandler ();
    parameters: []
  overload: System.Web.DefaultHttpHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Avvia una chiamata asincrona all&quot;handler HTTP."
  remarks: "Quando si crea un gestore HTTP per l&quot;utilizzo asincrono, sarà necessario implementare il metodo asincrono BeginProcessRequest e <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>metodi che vengono chiamati in modo asincrono da ASP.NET.</xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>"
  syntax:
    content: public virtual IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Oggetto che fornisce riferimenti agli intrinseci del server, gli oggetti utilizzati per rispondere alle richieste HTTP."
    - id: callback
      type: System.AsyncCallback
      description: "Metodo da chiamare quando la chiamata al metodo asincrono è completa. Se `callback` è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, non viene chiamato il delegato."
    - id: state
      type: System.Object
      description: "I dati di stato che sono necessario per elaborare la richiesta."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>che contiene informazioni sullo stato del processo.</xref:System.IAsyncResult>"
  overload: System.Web.DefaultHttpHandler.BeginProcessRequest*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Le condizioni preliminari per l&quot;elaborazione di una richiesta hanno esito negativo e il file richiesto è il suffisso ASP o la richiesta è stata inviata tramite POST."
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.Context
  id: Context
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: Context
  nameWithType: DefaultHttpHandler.Context
  fullName: System.Web.DefaultHttpHandler.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il contesto associato all&quot;oggetto corrente <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> oggetto."
  remarks: "La proprietà di contesto fornisce l&quot;accesso all&quot;oggetto corrente <xref:System.Web.HttpContext>oggetto per le classi derivate.</xref:System.Web.HttpContext> Un <xref:System.Web.HttpContext>oggetto consente di accedere alle proprietà intrinseche <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, e <xref:System.Web.HttpApplication.Server%2A>proprietà per la richiesta.</xref:System.Web.HttpApplication.Server%2A> </xref:System.Web.HttpApplication.Response%2A> </xref:System.Web.HttpApplication.Request%2A> </xref:System.Web.HttpContext> Per ulteriori informazioni sull&quot;accesso alle informazioni contestuali, vedere <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>"
  syntax:
    content: protected System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "Un <xref href=&quot;System.Web.HttpContext&quot;> </xref> oggetto che contiene il contesto corrente."
  overload: System.Web.DefaultHttpHandler.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  id: EndProcessRequest(System.IAsyncResult)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: EndProcessRequest(IAsyncResult)
  nameWithType: DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Fornisce un metodo di fine per un processo asincrono."
  remarks: "È possibile utilizzare il metodo EndProcessRequest per generare le eccezioni vengono intercettate durante il processo asincrono."
  syntax:
    content: public virtual void EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Oggetto che contiene informazioni sullo stato del processo."
  overload: System.Web.DefaultHttpHandler.EndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  id: ExecuteUrlHeaders
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
  fullName: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene una raccolta di intestazioni di richiesta e i valori di richiesta da trasferire insieme alla richiesta."
  remarks: "La proprietà ExecuteUrlHeaders restituisce una raccolta vuota, a meno che non venga inserita in una classe derivata dalla <xref:System.Web.DefaultHttpHandler>classe.</xref:System.Web.DefaultHttpHandler> Le intestazioni che vengono aggiunti vengono aggiunti alla raccolta di intestazioni della richiesta prima di passare la richiesta nuovamente per Internet Information Services (IIS)."
  syntax:
    content: protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Oggetto <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> contenente le intestazioni di richiesta e valori."
  overload: System.Web.DefaultHttpHandler.ExecuteUrlHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.IsReusable
  id: IsReusable
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
  fullName: System.Web.DefaultHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore booleano che indica che un&quot;altra richiesta può usare l&quot;istanza corrente del <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> classe."
  remarks: "Per impostare in modo esplicito la proprietà IsReusable `true` o `false`, eseguire l&quot;override della proprietà IsReusable."
  syntax:
    content: public virtual bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> è riutilizzabile; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DefaultHttpHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  id: OnExecuteUrlPreconditionFailure
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: OnExecuteUrlPreconditionFailure()
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  fullName: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Chiamato quando le condizioni preliminari impediscono il <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> oggetto dall&quot;elaborazione di una richiesta."
  remarks: "Le precondizioni sono specificate dal client in campi di intestazione di richiesta e vengono valutate nel server Web. Ad esempio, utilizzando precondizioni, client possono impedire a un metodo richiesto (ad esempio, GET) venga applicato a una risorsa diversa da quella desiderata. Per ulteriori informazioni, vedere la sezione &quot;Definizioni di campo di intestazione&quot;, 14 nel [Hypertext Transfer Protocol - HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specifica sul sito Web del World Wide Web Consortium (W3C).       Viene chiamato il metodo OnExecuteUrlPreconditionFailure quando le precondizioni impediscono il <xref:System.Web.DefaultHttpHandler>oggetto dall&quot;elaborazione di una richiesta.</xref:System.Web.DefaultHttpHandler> Una classe di derivazione potrebbe eseguire l&quot;override del metodo OnExecuteUrlPreconditionFailure per generare un&quot;eccezione quando le condizioni preliminari hanno esito negativo. Il <xref:System.Web.DefaultHttpHandler>non genera un&quot;eccezione nel metodo OnExecuteUrlPreconditionFailure.</xref:System.Web.DefaultHttpHandler>       Uno dei seguenti causerà l&quot;esito negativo delle precondizioni:-chiamata <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>      -Chiamata <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>      -Chiamata <xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>      -Modifica dei criteri di cache per la risposta.      -Aggiungere un <xref:System.IO.Stream>oggetto come filtro per il <xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName>proprietà.</xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName> </xref:System.IO.Stream>"
  syntax:
    content: public virtual void OnExecuteUrlPreconditionFailure ();
    parameters: []
  overload: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  id: OverrideExecuteUrlPath
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: OverrideExecuteUrlPath()
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath()
  fullName: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Sostituisce l&quot;URL di destinazione per la richiesta corrente."
  remarks: "Restituisce il metodo OverrideExecuteUrlPath `null` a meno che non viene sottoposto a override in una classe derivata dalla <xref:System.Web.DefaultHttpHandler>classe.</xref:System.Web.DefaultHttpHandler>       Viene chiamato il metodo OverrideExecuteUrlPath solo se ASP.NET è in esecuzione in modalità di isolamento di processo di lavoro in IIS 6.0 e se la risposta non è stato modificato prima di <xref:System.Web.DefaultHttpHandler>oggetto è stato chiamato.</xref:System.Web.DefaultHttpHandler> La risposta viene modificata da una delle operazioni seguenti:-chiamata <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>      -Chiamata <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>      -Chiamata <xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>      -Modifica dei criteri di cache per la risposta.      -Aggiungere un <xref:System.IO.Stream>oggetto come filtro per il <xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName>proprietà.</xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName> </xref:System.IO.Stream>"
  syntax:
    content: public virtual string OverrideExecuteUrlPath ();
    parameters: []
    return:
      type: System.String
      description: "L&quot;URL sottoposto a override da utilizzare nella richiesta; o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non viene fornito un URL sottoposto a override."
  overload: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: DefaultHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.DefaultHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Consente un <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> dell&quot;oggetto di elaborare le richieste HTTP Web."
  remarks: "Il metodo ProcessRequest non deve essere chiamato in modo sincrono. Le classi che derivano dalla <xref:System.Web.DefaultHttpHandler>classe può eseguire l&quot;override del metodo ProcessRequest per fornire l&quot;elaborazione di richieste personalizzato.</xref:System.Web.DefaultHttpHandler>"
  syntax:
    content: public virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Oggetto che fornisce riferimenti agli oggetti intrinseci del server utilizzati per gestire le richieste HTTP."
  overload: System.Web.DefaultHttpHandler.ProcessRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il ProcessRequest viene chiamato in modo sincrono."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DefaultHttpHandler.#ctor
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: DefaultHttpHandler()
  nameWithType: DefaultHttpHandler.DefaultHttpHandler()
  fullName: System.Web.DefaultHttpHandler.DefaultHttpHandler()
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.DefaultHttpHandler.Context
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: Context
  nameWithType: DefaultHttpHandler.Context
  fullName: System.Web.DefaultHttpHandler.Context
- uid: System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: EndProcessRequest(IAsyncResult)
  nameWithType: DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.DefaultHttpHandler.EndProcessRequest(IAsyncResult)
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
  fullName: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.DefaultHttpHandler.IsReusable
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
  fullName: System.Web.DefaultHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OnExecuteUrlPreconditionFailure()
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  fullName: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OverrideExecuteUrlPath()
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath()
  fullName: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: DefaultHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.DefaultHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.DefaultHttpHandler.#ctor*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: DefaultHttpHandler
  nameWithType: DefaultHttpHandler.DefaultHttpHandler
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: BeginProcessRequest
  nameWithType: DefaultHttpHandler.BeginProcessRequest
- uid: System.Web.DefaultHttpHandler.Context*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: Context
  nameWithType: DefaultHttpHandler.Context
- uid: System.Web.DefaultHttpHandler.EndProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: EndProcessRequest
  nameWithType: DefaultHttpHandler.EndProcessRequest
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
- uid: System.Web.DefaultHttpHandler.IsReusable*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OnExecuteUrlPreconditionFailure
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OverrideExecuteUrlPath
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath
- uid: System.Web.DefaultHttpHandler.ProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: DefaultHttpHandler.ProcessRequest
