### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.WebBrowserPermission
  id: WebBrowserPermission
  children:
  - System.Security.Permissions.WebBrowserPermission.#ctor
  - System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)
  - System.Security.Permissions.WebBrowserPermission.Copy
  - System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.WebBrowserPermission.IsUnrestricted
  - System.Security.Permissions.WebBrowserPermission.Level
  - System.Security.Permissions.WebBrowserPermission.ToXml
  - System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: WebBrowserPermission
  nameWithType: WebBrowserPermission
  fullName: System.Security.Permissions.WebBrowserPermission
  type: Class
  summary: "L&quot;oggetto WebBrowserPermission controlla la possibilità di creare il controllo WebBrowser."
  remarks: "In Windows Presentation Foundation (WPF), il controllo Web browser consente di frame di esplorare HTML. Questa autorizzazione utilizza i valori delle enumerazioni WebBrowserPermission.      ## Classe di questo utilizzo di attributo XAML non è in genere utilizzata in XAML."
  syntax:
    content: 'public sealed class WebBrowserPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.#ctor
  id: '#ctor'
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: WebBrowserPermission()
  nameWithType: WebBrowserPermission.WebBrowserPermission()
  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.WebBrowserPermission&quot;> </xref> classe."
  remarks: "Per impostazione predefinita, il valore della <xref:System.Security.Permissions.WebBrowserPermission.Level%2A>proprietà è impostata su <xref:System.Security.Permissions.WebBrowserPermissionLevel>.</xref:System.Security.Permissions.WebBrowserPermissionLevel> </xref:System.Security.Permissions.WebBrowserPermission.Level%2A>"
  syntax:
    content: public WebBrowserPermission ();
    parameters: []
  overload: System.Security.Permissions.WebBrowserPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: WebBrowserPermission(PermissionState)
  nameWithType: WebBrowserPermission.WebBrowserPermission(PermissionState)
  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission(PermissionState)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.WebBrowserPermission&quot;> </xref> classe specificando uno stato di autorizzazione."
  remarks: "Se `state` è impostata su <xref:System.Security.Permissions.PermissionState>, il valore della <xref:System.Security.Permissions.WebBrowserPermission.Level%2A>proprietà è impostata su <xref:System.Security.Permissions.WebBrowserPermissionLevel>.</xref:System.Security.Permissions.WebBrowserPermissionLevel> </xref:System.Security.Permissions.WebBrowserPermission.Level%2A> </xref:System.Security.Permissions.PermissionState> Se `state` è impostata su <xref:System.Security.Permissions.PermissionState>, il valore della <xref:System.Security.Permissions.WebBrowserPermission.Level%2A>proprietà è impostata su <xref:System.Security.Permissions.WebBrowserPermissionLevel>.</xref:System.Security.Permissions.WebBrowserPermissionLevel> </xref:System.Security.Permissions.WebBrowserPermission.Level%2A> </xref:System.Security.Permissions.PermissionState>"
  example:
  - "The following code example shows how to create a <xref:System.Security.Permissions.WebBrowserPermission> with a <xref:System.Security.Permissions.PermissionState> value.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermission1](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermission1)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission1](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermission1)]"
  syntax:
    content: public WebBrowserPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Valore enumerato di <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  overload: System.Security.Permissions.WebBrowserPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)
  id: '#ctor(System.Security.Permissions.WebBrowserPermissionLevel)'
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: WebBrowserPermission(WebBrowserPermissionLevel)
  nameWithType: WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)
  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.WebBrowserPermission&quot;> </xref> classe specificando il livello di autorizzazione del browser Web."
  remarks: ''
  example:
  - "The following code example shows how to create a <xref:System.Security.Permissions.WebBrowserPermission> with a <xref:System.Security.Permissions.WebBrowserPermissionLevel> value.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermission2](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermission2)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission2](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermission2)]"
  syntax:
    content: public WebBrowserPermission (System.Security.Permissions.WebBrowserPermissionLevel webBrowserPermissionLevel);
    parameters:
    - id: webBrowserPermissionLevel
      type: System.Security.Permissions.WebBrowserPermissionLevel
      description: "Valore enumerato di <xref href=&quot;System.Security.Permissions.WebBrowserPermissionLevel&quot;> </xref>."
  overload: System.Security.Permissions.WebBrowserPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.Copy
  id: Copy
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: WebBrowserPermission.Copy()
  fullName: System.Security.Permissions.WebBrowserPermission.Copy()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Crea e restituisce una copia identica dell&quot;autorizzazione corrente."
  remarks: "Una copia di un&quot;autorizzazione rappresenta lo stesso accesso alle risorse dell&quot;autorizzazione originale.      ## Membri di questa classe di utilizzo dell&quot;attributo XAML non è in genere vengono utilizzati in XAML o non può essere utilizzati in XAML."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Una copia dell&quot;autorizzazione corrente."
  overload: System.Security.Permissions.WebBrowserPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: WebBrowserPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.WebBrowserPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Ricostruisce un&quot;autorizzazione con uno stato specificato da una codifica XML."
  remarks: "## Membri di questa classe di utilizzo dell&quot;attributo XAML non è in genere vengono utilizzati in XAML o non può essere utilizzati in XAML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "La codifica XML da usare per ricostruire l&quot;autorizzazione."
  overload: System.Security.Permissions.WebBrowserPermission.FromXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: WebBrowserPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.WebBrowserPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Crea e restituisce un&quot;autorizzazione che rappresenta l&quot;intersezione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  remarks: "## Membri di questa classe di utilizzo dell&quot;attributo XAML non è in genere vengono utilizzati in XAML o non può essere utilizzati in XAML."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da intersecare con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "L&quot;intersezione delle due autorizzazioni è un&quot;autorizzazione che descrive lo stato che esse descrivono in comune. Solo una richiesta che supera entrambe le autorizzazioni originali sarà valida per l&quot;autorizzazione intersecata."
  overload: System.Security.Permissions.WebBrowserPermission.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: WebBrowserPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Determina se l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata."
  remarks: "The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\.  \n  \n If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.  \n  \n## XAML Attribute Usage  \n Members of this class are either not typically used in XAML, or cannot be used in XAML."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da testare per la relazione del subset. Questa autorizzazione deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.WebBrowserPermission.IsSubsetOf*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: WebBrowserPermission.IsUnrestricted()
  fullName: System.Security.Permissions.WebBrowserPermission.IsUnrestricted()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Restituisce un valore che indica se l&quot;autorizzazione corrente è senza restrizioni."
  remarks: "Un&quot;autorizzazione senza restrizioni rappresenta l&quot;accesso a tutte le risorse protette dall&quot;autorizzazione.      ## Membri di questa classe di utilizzo dell&quot;attributo XAML non è in genere vengono utilizzati in XAML o non può essere utilizzati in XAML."
  example:
  - "The following code example shows how to use the IsUnrestricted method.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermission5](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermission5)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission5](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermission5)]"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.Security.Permissions.WebBrowserPermission.Level*>è impostata su <xref href=&quot;System.Security.Permissions.WebBrowserPermissionLevel&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Permissions.WebBrowserPermission.Level*>"
  overload: System.Security.Permissions.WebBrowserPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.Level
  id: Level
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: Level
  nameWithType: WebBrowserPermission.Level
  fullName: System.Security.Permissions.WebBrowserPermission.Level
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta il valore corrente del livello di autorizzazione del Web browser."
  remarks: "##Membri di questa classe di utilizzo dell&quot;attributo XAML vengono in genere non viene utilizzati [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], o non può essere usato in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following code example shows how to retrieve the <xref:System.Security.Permissions.WebBrowserPermissionLevel> value for the <xref:System.Security.Permissions.WebBrowserPermission>.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermission6](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermission6)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission6](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermission6)]"
  syntax:
    content: public System.Security.Permissions.WebBrowserPermissionLevel Level { get; set; }
    return:
      type: System.Security.Permissions.WebBrowserPermissionLevel
      description: "Il valore corrente del livello di autorizzazione del Web browser."
  overload: System.Security.Permissions.WebBrowserPermission.Level*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: WebBrowserPermission.ToXml()
  fullName: System.Security.Permissions.WebBrowserPermission.ToXml()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Crea una codifica XML dell&quot;autorizzazione e del relativo stato corrente."
  remarks: "## Membri di questa classe di utilizzo dell&quot;attributo XAML non è in genere vengono utilizzati in XAML o non può essere utilizzati in XAML."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Codifica XML dell&quot;autorizzazione, che include le informazioni sullo stato."
  overload: System.Security.Permissions.WebBrowserPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.WebBrowserPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: WebBrowserPermission.Union(IPermission)
  fullName: System.Security.Permissions.WebBrowserPermission.Union(IPermission)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Crea un&quot;autorizzazione che rappresenta l&quot;unione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  remarks: "## Membri di questa classe di utilizzo dell&quot;attributo XAML non è in genere vengono utilizzati in XAML o non può essere utilizzati in XAML."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da combinare con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;unione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  overload: System.Security.Permissions.WebBrowserPermission.Union*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.Security.Permissions.WebBrowserPermission.#ctor
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: WebBrowserPermission()
  nameWithType: WebBrowserPermission.WebBrowserPermission()
  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission()
- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: WebBrowserPermission(PermissionState)
  nameWithType: WebBrowserPermission.WebBrowserPermission(PermissionState)
  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: WebBrowserPermission(WebBrowserPermissionLevel)
  nameWithType: WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)
  fullName: System.Security.Permissions.WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)
- uid: System.Security.Permissions.WebBrowserPermissionLevel
  parent: System.Security.Permissions
  isExternal: false
  name: WebBrowserPermissionLevel
  nameWithType: WebBrowserPermissionLevel
  fullName: System.Security.Permissions.WebBrowserPermissionLevel
- uid: System.Security.Permissions.WebBrowserPermission.Copy
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Copy()
  nameWithType: WebBrowserPermission.Copy()
  fullName: System.Security.Permissions.WebBrowserPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: WebBrowserPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.WebBrowserPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: WebBrowserPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.WebBrowserPermission.Intersect(IPermission)
- uid: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: WebBrowserPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.WebBrowserPermission.IsUnrestricted
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: WebBrowserPermission.IsUnrestricted()
  fullName: System.Security.Permissions.WebBrowserPermission.IsUnrestricted()
- uid: System.Security.Permissions.WebBrowserPermission.Level
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Level
  nameWithType: WebBrowserPermission.Level
  fullName: System.Security.Permissions.WebBrowserPermission.Level
- uid: System.Security.Permissions.WebBrowserPermission.ToXml
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: ToXml()
  nameWithType: WebBrowserPermission.ToXml()
  fullName: System.Security.Permissions.WebBrowserPermission.ToXml()
- uid: System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: WebBrowserPermission.Union(IPermission)
  fullName: System.Security.Permissions.WebBrowserPermission.Union(IPermission)
- uid: System.Security.Permissions.WebBrowserPermission.#ctor*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: WebBrowserPermission
  nameWithType: WebBrowserPermission.WebBrowserPermission
- uid: System.Security.Permissions.WebBrowserPermission.Copy*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Copy
  nameWithType: WebBrowserPermission.Copy
- uid: System.Security.Permissions.WebBrowserPermission.FromXml*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: FromXml
  nameWithType: WebBrowserPermission.FromXml
- uid: System.Security.Permissions.WebBrowserPermission.Intersect*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Intersect
  nameWithType: WebBrowserPermission.Intersect
- uid: System.Security.Permissions.WebBrowserPermission.IsSubsetOf*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: WebBrowserPermission.IsSubsetOf
- uid: System.Security.Permissions.WebBrowserPermission.IsUnrestricted*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: WebBrowserPermission.IsUnrestricted
- uid: System.Security.Permissions.WebBrowserPermission.Level*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Level
  nameWithType: WebBrowserPermission.Level
- uid: System.Security.Permissions.WebBrowserPermission.ToXml*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: ToXml
  nameWithType: WebBrowserPermission.ToXml
- uid: System.Security.Permissions.WebBrowserPermission.Union*
  parent: System.Security.Permissions.WebBrowserPermission
  isExternal: false
  name: Union
  nameWithType: WebBrowserPermission.Union
