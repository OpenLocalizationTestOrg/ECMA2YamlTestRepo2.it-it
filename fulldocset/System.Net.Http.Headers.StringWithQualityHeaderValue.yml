### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue
  id: StringWithQualityHeaderValue
  children:
  - System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  - System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  - System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  - System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)
  - System.Net.Http.Headers.StringWithQualityHeaderValue.Value
  langs:
  - csharp
  name: StringWithQualityHeaderValue
  nameWithType: StringWithQualityHeaderValue
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue
  type: Class
  summary: "Rappresenta un valore di intestazione stringa con una qualità facoltativa."
  remarks: "La classe StringWithQualityHeaderValue fornisce il supporto per le stringhe con un fattore di qualità utilizzato in alcune intestazioni, come definito in [RFC 2616](http://go.microsoft.com/fwlink/?LinkID=241642) da IETF.       Fattori di qualità consentono all&quot;agente utente indicare il grado relativo di preferenza per varie opzioni di intestazioni incluse la Accept, Accept-Charset, Accept-Encoding vari e intestazioni Accept-Language. Qualità utilizza una scala da 0 a 1. Il valore predefinito è q =&1;."
  syntax:
    content: 'public class StringWithQualityHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: StringWithQualityHeaderValue(String)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> classe."
  syntax:
    content: public StringWithQualityHeaderValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "La stringa utilizzata per inizializzare la nuova istanza."
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: StringWithQualityHeaderValue(String,Double)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String,Double)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(String,Double)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> classe."
  syntax:
    content: public StringWithQualityHeaderValue (string value, double quality);
    parameters:
    - id: value
      type: System.String
      description: "Una stringa utilizzata per inizializzare la nuova istanza."
    - id: quality
      type: System.Double
      description: "Un fattore di qualità utilizzato per inizializzare la nuova istanza."
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: StringWithQualityHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se l&quot;oggetto specificato è uguale all&quot;oggetto corrente <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> oggetto."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da confrontare con l&quot;oggetto corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato <xref:System.Object>è uguale all&quot;oggetto corrente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: StringWithQualityHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Funge da funzione hash per un <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> oggetto."
  remarks: "Un codice hash è un valore numerico che viene utilizzato per identificare un oggetto durante il test di uguaglianza. Può inoltre costituire un indice per un oggetto in una raccolta.       Il metodo GetHashCode è adatto per l&quot;uso in algoritmi hash e strutture di dati, ad esempio una tabella hash."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash per l&quot;oggetto corrente."
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: StringWithQualityHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Converte una stringa in un <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> istanza."
  syntax:
    content: public static System.Net.Http.Headers.StringWithQualityHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "Stringa che rappresenta informazioni sui valori di intestazione di qualità."
    return:
      type: System.Net.Http.Headers.StringWithQualityHeaderValue
      description: "Oggetto <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> istanza."
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>è un <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> riferimento."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>non è valido stringa con informazioni sui valori di intestazione di qualità."
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  id: Quality
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: Quality
  nameWithType: StringWithQualityHeaderValue.Quality
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Ottiene il fattore di qualità dal <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> oggetto."
  syntax:
    content: public Nullable<double> Quality { get; }
    return:
      type: System.Nullable{System.Double}
      description: "Il fattore di qualità dal <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> oggetto."
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: StringWithQualityHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Crea un nuovo oggetto che è una copia dell&quot;oggetto corrente <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> istanza."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Una copia dell&quot;istanza corrente."
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: StringWithQualityHeaderValue.ToString()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Restituisce una stringa che rappresenta l&quot;oggetto corrente <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> oggetto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Stringa che rappresenta l&quot;oggetto corrente."
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: TryParse(String,StringWithQualityHeaderValue)
  nameWithType: StringWithQualityHeaderValue.TryParse(String,StringWithQualityHeaderValue)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(String,StringWithQualityHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se una stringa è valida <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> informazioni."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.StringWithQualityHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "Stringa da convalidare."
    - id: parsedValue
      type: System.Net.Http.Headers.StringWithQualityHeaderValue
      description: "Il <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> versione della stringa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Value
  id: Value
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  langs:
  - csharp
  name: Value
  nameWithType: StringWithQualityHeaderValue.Value
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Value
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Ottiene il valore di stringa dal <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> oggetto."
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "Il valore di stringa dal <xref href=&quot;System.Net.Http.Headers.StringWithQualityHeaderValue&quot;> </xref> oggetto."
  overload: System.Net.Http.Headers.StringWithQualityHeaderValue.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: StringWithQualityHeaderValue(String)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: StringWithQualityHeaderValue(String,Double)
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue(String,Double)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.StringWithQualityHeaderValue(String,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: StringWithQualityHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: StringWithQualityHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: StringWithQualityHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: StringWithQualityHeaderValue
  nameWithType: StringWithQualityHeaderValue
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Quality
  nameWithType: StringWithQualityHeaderValue.Quality
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: StringWithQualityHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: StringWithQualityHeaderValue.ToString()
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString()
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: TryParse(String,StringWithQualityHeaderValue)
  nameWithType: StringWithQualityHeaderValue.TryParse(String,StringWithQualityHeaderValue)
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(String,StringWithQualityHeaderValue)
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Value
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Value
  nameWithType: StringWithQualityHeaderValue.Value
  fullName: System.Net.Http.Headers.StringWithQualityHeaderValue.Value
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: StringWithQualityHeaderValue
  nameWithType: StringWithQualityHeaderValue.StringWithQualityHeaderValue
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Equals*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Equals
  nameWithType: StringWithQualityHeaderValue.Equals
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: StringWithQualityHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Parse*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Parse
  nameWithType: StringWithQualityHeaderValue.Parse
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Quality*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Quality
  nameWithType: StringWithQualityHeaderValue.Quality
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: StringWithQualityHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.ToString*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: ToString
  nameWithType: StringWithQualityHeaderValue.ToString
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: StringWithQualityHeaderValue.TryParse
- uid: System.Net.Http.Headers.StringWithQualityHeaderValue.Value*
  parent: System.Net.Http.Headers.StringWithQualityHeaderValue
  isExternal: false
  name: Value
  nameWithType: StringWithQualityHeaderValue.Value
