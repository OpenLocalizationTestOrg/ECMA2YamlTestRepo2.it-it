### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.RemotingServices
  id: RemotingServices
  children:
  - System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)
  - System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)
  - System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)
  - System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  - System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)
  - System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)
  - System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  - System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)
  - System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)
  - System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)
  - System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)
  - System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)
  - System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)
  - System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)
  - System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)
  - System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)
  - System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)
  - System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)
  - System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)
  langs:
  - csharp
  name: RemotingServices
  nameWithType: RemotingServices
  fullName: System.Runtime.Remoting.RemotingServices
  type: Class
  summary: "Fornisce diversi metodi per l&quot;utilizzo e la pubblicazione di proxy e oggetti remoti. Questa classe non può essere ereditata."
  remarks: "A meno che non si è un provider di servizi, i problemi, ad esempio l&quot;attivazione, la gestione della durata o le transazioni, non è necessario distinguere tra i riferimenti al proxy e i riferimenti agli oggetti. L&quot;infrastruttura remota utilizza i proxy trasparente che dare l&quot;impressione che gli oggetti remoti si trovano nello spazio del client. A tale scopo, proxy inoltrando le chiamate effettuate su di essi per gli oggetti reali in posizioni remote."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class RemotingServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)
  id: Connect(System.Type,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Connect(Type,String)
  nameWithType: RemotingServices.Connect(Type,String)
  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Crea un proxy per un oggetto noto, dato il <xref:System.Type>e URL.</xref:System.Type>"
  remarks: "L&quot;oggetto proxy restituito punta a un endpoint messo a disposizione dall&quot;oggetto noto specificato. Non vengono inviati messaggi attraverso la rete fino a quando non viene chiamato un metodo sul proxy."
  example:
  - "The following code example demonstrates how to use the Connect method to create a proxy to a well-known object.  \n  \n [!code-cpp[RemotingServices.BasicSample#1](~/add/codesnippet/cpp/m-system.runtime.remotin_104_1.cpp)]\n [!code-cs[RemotingServices.BasicSample#1](~/add/codesnippet/csharp/m-system.runtime.remotin_104_1.cs)]\n [!code-vb[RemotingServices.BasicSample#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_104_1.vb)]"
  syntax:
    content: public static object Connect (Type classToProxy, string url);
    parameters:
    - id: classToProxy
      type: System.Type
      description: "Il <xref:System.Type>di un oggetto noto sul lato server a cui si desidera connettersi.</xref:System.Type>"
    - id: url
      type: System.String
      description: "L&quot;URL della classe del server."
    return:
      type: System.Object
      description: "Un proxy per l&quot;oggetto remoto che punta a un endpoint messo a disposizione dall&quot;oggetto noto specificato."
  overload: System.Runtime.Remoting.RemotingServices.Connect*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione per configurare i canali e tipi in remoto."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)
  id: Connect(System.Type,System.String,System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Connect(Type,String,Object)
  nameWithType: RemotingServices.Connect(Type,String,Object)
  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Crea un proxy per un oggetto noto, dato il <xref:System.Type>, URL e dai dati specifici del canale.</xref:System.Type>"
  remarks: "L&quot;oggetto proxy restituito punta a un endpoint messo a disposizione dall&quot;oggetto noto specificato. Non vengono inviati messaggi attraverso la rete fino a quando non viene chiamato un metodo sul proxy.       Il `data` oggetto viene utilizzato per comunicare informazioni al canale e viene passato per il <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName>metodo.</xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=fullName>"
  syntax:
    content: public static object Connect (Type classToProxy, string url, object data);
    parameters:
    - id: classToProxy
      type: System.Type
      description: "Il <xref:System.Type>dell&quot;oggetto noto a cui si desidera connettersi.</xref:System.Type>"
    - id: url
      type: System.String
      description: "L&quot;URL di un oggetto noto."
    - id: data
      type: System.Object
      description: "Dati specifici del canale. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "Un proxy che punta a un endpoint che viene servito dall&quot;oggetto noto richiesto."
  overload: System.Runtime.Remoting.RemotingServices.Connect*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione per configurare i canali e tipi in remoto."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)
  id: Disconnect(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Disconnect(MarshalByRefObject)
  nameWithType: RemotingServices.Disconnect(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.Disconnect(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Arresta un oggetto da ricevere ulteriori messaggi attraverso i canali remoti registrati."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Disconnect method to disconnect an object from the remoting channels.  \n  \n [!code-cpp[RemotingServices.BasicSample#2](~/add/codesnippet/cpp/m-system.runtime.remotin_81_1.cpp)]\n [!code-cs[RemotingServices.BasicSample#2](~/add/codesnippet/csharp/m-system.runtime.remotin_81_1.cs)]\n [!code-vb[RemotingServices.BasicSample#2](~/add/codesnippet/visualbasic/m-system.runtime.remotin_81_1.vb)]"
  syntax:
    content: public static bool Disconnect (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Oggetto per disconnettersi dal proprio canale."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto è stato disconnesso dai canali remoti registrati correttamente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.Disconnect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> obj </code> parametro è un proxy."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione per configurare i canali e tipi in remoto."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)
  id: ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  nameWithType: RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  fullName: System.Runtime.Remoting.RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Si connette all&quot;oggetto remoto specificato ed esegue l&quot;oggetto fornito <xref href=&quot;System.Runtime.Remoting.Messaging.IMethodCallMessage&quot;> </xref> su di esso."
  remarks: "Il metodo corrente viene utilizzato dal server per inoltrare la chiamata al metodo specificato all&quot;oggetto di un altro, possibilmente remoto, in casi particolari. Questo metodo può essere chiamato solo quando il chiamante è nel contesto appropriato."
  example:
  - "The following code example demonstrates how to use the ExecuteMessage method to forward method calls to remote objects.  \n  \n [!code-cs[RemotingServices.ExecuteMessage#1](~/add/codesnippet/csharp/491f5c62-582d-42d8-b526-_1.cs)]\n [!code-cpp[RemotingServices.ExecuteMessage#1](~/add/codesnippet/cpp/491f5c62-582d-42d8-b526-_1.cpp)]\n [!code-vb[RemotingServices.ExecuteMessage#1](~/add/codesnippet/visualbasic/491f5c62-582d-42d8-b526-_1.vb)]"
  syntax:
    content: public static System.Runtime.Remoting.Messaging.IMethodReturnMessage ExecuteMessage (MarshalByRefObject target, System.Runtime.Remoting.Messaging.IMethodCallMessage reqMsg);
    parameters:
    - id: target
      type: System.MarshalByRefObject
      description: "L&quot;oggetto remoto il cui metodo da chiamare."
    - id: reqMsg
      type: System.Runtime.Remoting.Messaging.IMethodCallMessage
      description: "Un messaggio di chiamata al metodo dell&quot;oggetto remoto specificato."
    return:
      type: System.Runtime.Remoting.Messaging.IMethodReturnMessage
      description: "La risposta del metodo remoto."
  overload: System.Runtime.Remoting.RemotingServices.ExecuteMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "Il metodo è stato chiamato da un contesto diverso dal contesto nativo dell&quot;oggetto."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)
  id: GetEnvoyChainForProxy(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetEnvoyChainForProxy(MarshalByRefObject)
  nameWithType: RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Restituisce una catena di sink di invio che deve essere utilizzato quando si inviano messaggi all&quot;oggetto remoto rappresentato dal proxy specificato."
  remarks: "I sink di invio vengono inviati con il <xref:System.Runtime.Remoting.ObjRef>di un oggetto che viene utilizzato per la restituzione di messaggi a tale oggetto.</xref:System.Runtime.Remoting.ObjRef> Il metodo corrente terminerà il sink di invio vengono utilizzati durante la comunicazione tra il proxy dell&quot;oggetto e l&quot;oggetto stesso."
  syntax:
    content: public static System.Runtime.Remoting.Messaging.IMessageSink GetEnvoyChainForProxy (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Il proxy dell&quot;oggetto remoto che ha richiesto i sink sono associati."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "Una catena di sink di invio associata al proxy specificato."
  overload: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)
  id: GetLifetimeService(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetLifetimeService(MarshalByRefObject)
  nameWithType: RemotingServices.GetLifetimeService(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetLifetimeService(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Restituisce un oggetto servizio di durata che controlla i criteri di durata dell&quot;oggetto specificato."
  remarks: "Per impostazione predefinita il servizio di durata dell&quot;oggetto restituito sarà un oggetto di tipo <xref:System.Runtime.Remoting.Lifetime.ILease>.</xref:System.Runtime.Remoting.Lifetime.ILease> Se il `obj` parametro `null`, il metodo restituisce `null`."
  example:
  - "The following code example demonstrates how to use the GetLifetimeService method to get a lifetime lease for the specified object.  \n  \n [!code-cpp[RemotingServices.TimerSample#1](~/add/codesnippet/cpp/a7d2891c-3dad-448c-949c-_1.cpp)]\n [!code-cs[RemotingServices.TimerSample#1](~/add/codesnippet/csharp/a7d2891c-3dad-448c-949c-_1.cs)]\n [!code-vb[RemotingServices.TimerSample#1](~/add/codesnippet/visualbasic/a7d2891c-3dad-448c-949c-_1.vb)]  \n  \n To compile and run this example, you will need to compile and run a server, timerserver.exe, and compile a shared library, timerservice.dll.  \n  \n The source for timerserver.exe follows:  \n  \n [!code-vb[RemotingServices.TimerSample#2](~/add/codesnippet/visualbasic/a7d2891c-3dad-448c-949c-_2.vb)]\n [!code-cs[RemotingServices.TimerSample#2](~/add/codesnippet/csharp/a7d2891c-3dad-448c-949c-_2.cs)]  \n  \n The source for timerservice.dll follows:  \n  \n [!code-vb[RemotingServices.TimerSample#3](~/add/codesnippet/visualbasic/a7d2891c-3dad-448c-949c-_3.vb)]\n [!code-cs[RemotingServices.TimerSample#3](~/add/codesnippet/csharp/a7d2891c-3dad-448c-949c-_3.cs)]"
  syntax:
    content: public static object GetLifetimeService (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Oggetto da ottenere il servizio di durata."
    return:
      type: System.Object
      description: "L&quot;oggetto che controlla la durata del <code> obj </code>."
  overload: System.Runtime.Remoting.RemotingServices.GetLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  id: GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetMethodBaseFromMethodMessage(IMethodMessage)
  nameWithType: RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Restituisce il metodo di base dal determinato <xref href=&quot;System.Runtime.Remoting.Messaging.IMethodMessage&quot;> </xref>."
  remarks: "Determina la base del metodo di <xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A>, <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A>, e <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A>le proprietà di <xref:System.Runtime.Remoting.Messaging.IMethodMessage>ed è utilizzato da classi che implementano il <xref:System.Runtime.Remoting.Messaging.IMethodMessage>interfaccia.</xref:System.Runtime.Remoting.Messaging.IMethodMessage> </xref:System.Runtime.Remoting.Messaging.IMethodMessage> </xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature%2A> </xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName%2A> </xref:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName%2A> I consumer di <xref:System.Runtime.Remoting.Messaging.IMethodMessage>devono fare riferimento a classi di <xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName>proprietà.</xref:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase%2A?displayProperty=fullName> </xref:System.Runtime.Remoting.Messaging.IMethodMessage>"
  syntax:
    content: public static System.Reflection.MethodBase GetMethodBaseFromMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMethodMessage
      description: "Messaggio del metodo per estrarre la base del metodo."
    return:
      type: System.Reflection.MethodBase
      description: "Estratto del metodo di base di <code> msg </code> parametro."
  overload: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone dell&quot;autorizzazione di infrastruttura o almeno uno dei chiamanti nello stack di chiamate non dispone dell&quot;autorizzazione per recuperare le informazioni sul tipo di membri non pubblici."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetObjectData(Object,SerializationInfo,StreamingContext)
  nameWithType: RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Serializza il marshalling specificato dall&quot;oggetto di riferimento in forniti <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  syntax:
    content: public static void GetObjectData (object obj, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da serializzare."
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Il <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> in cui viene serializzato l&quot;oggetto."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "L&quot;origine e destinazione della serializzazione."
  overload: System.Runtime.Remoting.RemotingServices.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> or <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)
  id: GetObjectUri(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetObjectUri(MarshalByRefObject)
  nameWithType: RemotingServices.GetObjectUri(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjectUri(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Recupera l&quot;URI per l&quot;oggetto specificato."
  remarks: ''
  example:
  - >-
    [!code-vb[System.Runtime.Remoting.RemotingServices#18](~/add/codesnippet/visualbasic/318892c3-7b62-40bd-9e3b-_1.vb)]
     [!code-cs[System.Runtime.Remoting.RemotingServices#18](~/add/codesnippet/csharp/318892c3-7b62-40bd-9e3b-_1.cs)]
     [!code-cpp[System.Runtime.Remoting.RemotingServices#18](~/add/codesnippet/cpp/318892c3-7b62-40bd-9e3b-_1.cpp)]
  syntax:
    content: public static string GetObjectUri (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "La <xref href=&quot;System.MarshalByRefObject&quot;> </xref> per cui è richiesto un URI."
    return:
      type: System.String
      description: "L&quot;URI dell&quot;oggetto specificato, se presente, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;oggetto non ancora il marshalling."
  overload: System.Runtime.Remoting.RemotingServices.GetObjectUri*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)
  id: GetObjRefForProxy(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetObjRefForProxy(MarshalByRefObject)
  nameWithType: RemotingServices.GetObjRefForProxy(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Restituisce il <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> che rappresenta l&quot;oggetto remoto del proxy specificato."
  remarks: "Oggetto <xref:System.Runtime.Remoting.ObjRef>è una rappresentazione serializzabile di un oggetto utilizzato per trasferire un riferimento all&quot;oggetto attraverso il limite di un dominio applicazione.</xref:System.Runtime.Remoting.ObjRef> Creazione di un <xref:System.Runtime.Remoting.ObjRef>per un oggetto è noto come effettuare il marshalling.</xref:System.Runtime.Remoting.ObjRef> Il <xref:System.Runtime.Remoting.ObjRef>può essere trasferita tramite un canale in un altro dominio applicazione (probabilmente su un altro processo o computer).</xref:System.Runtime.Remoting.ObjRef> Una volta in altro dominio applicazione, il <xref:System.Runtime.Remoting.ObjRef>deve essere analizzata per creare un proxy per l&quot;oggetto, in genere connesso all&quot;oggetto reale.</xref:System.Runtime.Remoting.ObjRef> Questa operazione è nota come l&quot;unmarshalling. Durante l&quot;unmarshalling, il <xref:System.Runtime.Remoting.ObjRef>analizzata per estrarre le informazioni sul metodo dell&quot;oggetto remoto e sia il proxy trasparente e <xref:System.Runtime.Remoting.Proxies.RealProxy>gli oggetti vengono creati.</xref:System.Runtime.Remoting.Proxies.RealProxy> </xref:System.Runtime.Remoting.ObjRef>       Oggetto <xref:System.Runtime.Remoting.ObjRef>contiene informazioni che descrivono la <xref:System.Type>e classe dell&quot;oggetto di cui effettuare il marshalling, informazioni su come raggiungere l&quot;applicazione remota in cui si trova l&quot;oggetto correlato di un URI che identifica in modo univoco l&quot;istanza di oggetto specifico e la comunicazione.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>"
  example:
  - "The following code example demonstrates how to get a <xref:System.Runtime.Remoting.ObjRef> instance for the specified object.  \n  \n [!code-cpp[RemotingServices.GetObjRefForProxy#1](~/add/codesnippet/cpp/d6ce9a9a-8ec9-4559-9b2d-_1.cpp)]\n [!code-vb[RemotingServices.GetObjRefForProxy#1](~/add/codesnippet/visualbasic/d6ce9a9a-8ec9-4559-9b2d-_1.vb)]\n [!code-cs[RemotingServices.GetObjRefForProxy#1](~/add/codesnippet/csharp/d6ce9a9a-8ec9-4559-9b2d-_1.cs)]"
  syntax:
    content: public static System.Runtime.Remoting.ObjRef GetObjRefForProxy (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Proxy connesso all&quot;oggetto a cui si desidera creare un <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> per."
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Oggetto <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> che rappresenta l&quot;oggetto remoto è connesso il proxy specificato o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non è stato eseguito il marshalling dell&quot;oggetto o del proxy."
  overload: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)
  id: GetRealProxy(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetRealProxy(Object)
  nameWithType: RemotingServices.GetRealProxy(Object)
  fullName: System.Runtime.Remoting.RemotingServices.GetRealProxy(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Restituisce il proxy reale a supporto del proxy trasparente specificato."
  remarks: "Un client che utilizza un oggetto in qualsiasi tipo di limite remoto è effettivamente usando un proxy trasparente per l&quot;oggetto. Il proxy trasparente fornisce l&quot;impressione che l&quot;oggetto effettivo si trova nello spazio del client. A questo scopo, le chiamate eseguite su di esso all&quot;oggetto reale usando l&quot;infrastruttura di comunicazione remota di inoltro.       Il proxy trasparente è supportato da un&quot;istanza di una classe di runtime gestito di tipo <xref:System.Runtime.Remoting.Proxies.RealProxy>.</xref:System.Runtime.Remoting.Proxies.RealProxy> Il <xref:System.Runtime.Remoting.Proxies.RealProxy>implementa una parte delle funzionalità necessarie per inoltrare le operazioni dal proxy trasparente.</xref:System.Runtime.Remoting.Proxies.RealProxy>       Un oggetto proxy eredita la semantica associata degli oggetti gestiti, ad esempio l&quot;operazione di garbage collection, il supporto per membri e i metodi e può essere esteso per formare nuove classi. Il proxy funge da oggetto della stessa classe dell&quot;oggetto remoto (proxy trasparente) e viene anche un oggetto gestito."
  syntax:
    content: public static System.Runtime.Remoting.Proxies.RealProxy GetRealProxy (object proxy);
    parameters:
    - id: proxy
      type: System.Object
      description: "Un proxy trasparente."
    return:
      type: System.Runtime.Remoting.Proxies.RealProxy
      description: "L&quot;istanza del proxy reale supporto del proxy trasparente."
  overload: System.Runtime.Remoting.RemotingServices.GetRealProxy*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)
  id: GetServerTypeForUri(System.String)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetServerTypeForUri(String)
  nameWithType: RemotingServices.GetServerTypeForUri(String)
  fullName: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Restituisce il <xref:System.Type>dell&quot;oggetto con l&quot;URI specificato.</xref:System.Type>"
  remarks: "Poiché gli endpoint tramite gli URI vengono identificati servizi remoti, il metodo GetServerTypeForUri risulta particolarmente utile nelle parti collegabili dell&quot;infrastruttura di comunicazione remota (ad esempio, i sink di canale, dinamici e sink di contesto) che utilizzano <xref:System.Runtime.Remoting.Messaging.IMessage>oggetti, in quanto il metodo corrente restituirà l&quot;oggetto del tipo associato dall&quot;URI.</xref:System.Runtime.Remoting.Messaging.IMessage>"
  example:
  - >-
    [!code-vb[System.Runtime.Remoting.RemotingServices#7](~/add/codesnippet/visualbasic/m-system.runtime.remotin_84_1.vb)]
     [!code-cs[System.Runtime.Remoting.RemotingServices#7](~/add/codesnippet/csharp/m-system.runtime.remotin_84_1.cs)]
     [!code-cpp[System.Runtime.Remoting.RemotingServices#7](~/add/codesnippet/cpp/m-system.runtime.remotin_84_1.cpp)]
  syntax:
    content: public static Type GetServerTypeForUri (string URI);
    parameters:
    - id: URI
      type: System.String
      description: "L&quot;URI dell&quot;oggetto il cui <xref:System.Type>è richiesto.</xref:System.Type>"
    return:
      type: System.Type
      description: "Il <xref:System.Type>dell&quot;oggetto con l&quot;URI specificato.</xref:System.Type>"
  overload: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone dell&quot;autorizzazione di infrastruttura o almeno uno dei chiamanti nello stack di chiamate non dispone dell&quot;autorizzazione per recuperare le informazioni sul tipo di membri non pubblici."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  id: GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: GetSessionIdForMethodMessage(IMethodMessage)
  nameWithType: RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Recupera un ID di sessione per un messaggio."
  remarks: "Lo stesso ID di sessione potrebbe essere restituito per gli oggetti nella stessa applicazione, ma questo metodo non restituisce mai lo stesso ID di sessione per due oggetti in diverse applicazioni remote.       Per ulteriori informazioni sull&quot;identificazione di sessioni e gli ID di sessione, vedere ASP.Net [panoramica dello stato della sessione di ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to get the session ID string for the current session.  \n  \n [!code-cs[RemotingServices.ExecuteMessage#1](~/add/codesnippet/csharp/b83444fc-48c3-47e9-b264-_1.cs)]\n [!code-cpp[RemotingServices.ExecuteMessage#1](~/add/codesnippet/cpp/b83444fc-48c3-47e9-b264-_1.cpp)]\n [!code-vb[RemotingServices.ExecuteMessage#1](~/add/codesnippet/visualbasic/b83444fc-48c3-47e9-b264-_1.vb)]"
  syntax:
    content: public static string GetSessionIdForMethodMessage (System.Runtime.Remoting.Messaging.IMethodMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMethodMessage
      description: "Il <xref href=&quot;System.Runtime.Remoting.Messaging.IMethodMessage&quot;> </xref> per cui è richiesto un ID di sessione."
    return:
      type: System.String
      description: "Una stringa di ID di sessione che identifica in modo univoco la sessione corrente."
  overload: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)
  id: IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsMethodOverloaded(IMethodMessage)
  nameWithType: RemotingServices.IsMethodOverloaded(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(IMethodMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Restituisce un valore booleano che indica se il metodo del messaggio specificato è in overload."
  syntax:
    content: public static bool IsMethodOverloaded (System.Runtime.Remoting.Messaging.IMethodMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMethodMessage
      description: "Il messaggio che contiene una chiamata al metodo in questione."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il metodo viene chiamato in <code> msg </code> overload; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)
  id: IsObjectOutOfAppDomain(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsObjectOutOfAppDomain(Object)
  nameWithType: RemotingServices.IsObjectOutOfAppDomain(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Restituisce un valore booleano che indica se l&quot;oggetto specificato dal proxy trasparente specificato è contenuto in un dominio applicazione diverso da quello dell&quot;oggetto che ha chiamato il metodo corrente."
  remarks: "Per informazioni sui domini dell&quot;applicazione, vedere [domini applicazione](http://msdn.microsoft.com/en-us/39e57d07-a740-4cd4-ae82-e119ea3856c1)."
  example:
  - >-
    [!code-cpp[RemotingServices IsObject Snippets#1](~/add/codesnippet/cpp/m-system.runtime.remotin_103_1.cpp)]
     [!code-vb[RemotingServices IsObject Snippets#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_103_1.vb)]
     [!code-cs[RemotingServices IsObject Snippets#1](~/add/codesnippet/csharp/m-system.runtime.remotin_103_1.cs)]
  syntax:
    content: public static bool IsObjectOutOfAppDomain (object tp);
    parameters:
    - id: tp
      type: System.Object
      description: "Oggetto da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto è esterno al dominio applicazione corrente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)
  id: IsObjectOutOfContext(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsObjectOutOfContext(Object)
  nameWithType: RemotingServices.IsObjectOutOfContext(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Restituisce un valore booleano che indica se l&quot;oggetto rappresentato dal proxy specificato è contenuto in un contesto diverso da quello dell&quot;oggetto che ha chiamato il metodo corrente."
  remarks: "Un contesto è una sequenza ordinata di proprietà che definiscono un ambiente per gli oggetti in esso contenuti. Contesti vengono creati durante il processo di attivazione per gli oggetti che sono configurati per richiedere che determinati servizi automatici tale sincronizzazione, transazioni, attivazione just-in-time, sicurezza e così via. Possono coesistere più oggetti all&quot;interno di un contesto."
  example:
  - >-
    [!code-cpp[RemotingServices IsObject Snippets#1](~/add/codesnippet/cpp/m-system.runtime.remotin_37_1.cpp)]
     [!code-vb[RemotingServices IsObject Snippets#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_37_1.vb)]
     [!code-cs[RemotingServices IsObject Snippets#1](~/add/codesnippet/csharp/m-system.runtime.remotin_37_1.cs)]
  syntax:
    content: public static bool IsObjectOutOfContext (object tp);
    parameters:
    - id: tp
      type: System.Object
      description: "Oggetto da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto è fuori contesto corrente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)
  id: IsOneWay(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsOneWay(MethodBase)
  nameWithType: RemotingServices.IsOneWay(MethodBase)
  fullName: System.Runtime.Remoting.RemotingServices.IsOneWay(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Restituisce un valore booleano che indica che se il client che ha chiamato il metodo specificato nel messaggio specificato è in attesa per il server per completare l&quot;elaborazione del metodo prima di continuare l&quot;esecuzione."
  remarks: "Quando viene chiamato un metodo unidirezionale, il client non attende che il server completare l&quot;elaborazione del messaggio. Il metodo client restituisce all&quot;applicazione senza alcuna conoscenza di o meno il server elaborerà correttamente il messaggio. I metodi sono contrassegnati come unidirezionale utilizzando <xref:System.Runtime.Remoting.Messaging.OneWayAttribute>.</xref:System.Runtime.Remoting.Messaging.OneWayAttribute>       I metodi unidirezionali non possono avere un valore restituito o parametri out."
  example:
  - >-
    [!code-vb[System.Runtime.Remoting.RemotingServices#2](~/add/codesnippet/visualbasic/e9c4a9fc-d92a-4e43-97a5-_1.vb)]
     [!code-cs[System.Runtime.Remoting.RemotingServices#2](~/add/codesnippet/csharp/e9c4a9fc-d92a-4e43-97a5-_1.cs)]
     [!code-cpp[System.Runtime.Remoting.RemotingServices#2](~/add/codesnippet/cpp/e9c4a9fc-d92a-4e43-97a5-_1.cpp)]
  syntax:
    content: public static bool IsOneWay (System.Reflection.MethodBase method);
    parameters:
    - id: method
      type: System.Reflection.MethodBase
      description: "Il metodo in questione."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il metodo è un determinato modo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.RemotingServices.IsOneWay*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante immediato non dispone dell&quot;autorizzazione di infrastruttura."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)
  id: IsTransparentProxy(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: IsTransparentProxy(Object)
  nameWithType: RemotingServices.IsTransparentProxy(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Restituisce un valore booleano che indica se l&quot;oggetto specificato è un proxy trasparente o un oggetto reale."
  remarks: "Un client che utilizza un oggetto in qualsiasi tipo di limite remoto è effettivamente usando un proxy trasparente per l&quot;oggetto. Il proxy trasparente fornisce l&quot;impressione che l&quot;oggetto effettivo si trova nello spazio del client. A questo scopo, le chiamate eseguite su di esso all&quot;oggetto reale usando l&quot;infrastruttura di comunicazione remota di inoltro.       Il proxy trasparente è ospitato da un&quot;istanza di una classe di runtime gestito di tipo <xref:System.Runtime.Remoting.Proxies.RealProxy>.</xref:System.Runtime.Remoting.Proxies.RealProxy> Il <xref:System.Runtime.Remoting.Proxies.RealProxy>implementa una parte delle funzionalità necessarie per inoltrare le operazioni dal proxy trasparente.</xref:System.Runtime.Remoting.Proxies.RealProxy> Un oggetto proxy eredita la semantica associata degli oggetti gestiti, ad esempio l&quot;operazione di garbage collection, il supporto per membri e i metodi e può essere esteso per formare nuove classi. In questo modo il proxy ha una duplice natura; da un lato deve agire come un oggetto della stessa classe dell&quot;oggetto remoto (proxy trasparente) e l&quot;altro è un oggetto gestito.       Un oggetto proxy può essere utilizzato indipendentemente da eventuali suddivisioni all&quot;interno di un <xref:System.AppDomain>.</xref:System.AppDomain> Applicazioni non è necessario distinguere tra riferimenti al proxy e i riferimenti agli oggetti. Tuttavia, i problemi, ad esempio l&quot;attivazione di provider di servizi, gestione della durata e le transazioni necessario effettuare queste distinzioni."
  example:
  - "The following code example demonstrates the use of the IsTransparentProxy method to determine whether an object is a proxy or a real object. For the complete example code, see the example for the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class.  \n  \n [!code-cpp[AsyncResult.NewExamples#6](~/add/codesnippet/cpp/m-system.runtime.remotin_47_1.cpp)]\n [!code-vb[AsyncResult.NewExamples#6](~/add/codesnippet/visualbasic/m-system.runtime.remotin_47_1.vb)]\n [!code-cs[AsyncResult.NewExamples#6](~/add/codesnippet/csharp/m-system.runtime.remotin_47_1.cs)]"
  syntax:
    content: public static bool IsTransparentProxy (object proxy);
    parameters:
    - id: proxy
      type: System.Object
      description: "Il riferimento all&quot;oggetto da controllare."
    return:
      type: System.Boolean
      description: "Un valore booleano che indica se l&quot;oggetto specificato nel <code> proxy </code> parametro è un proxy trasparente o un oggetto reale."
  overload: System.Runtime.Remoting.RemotingServices.IsTransparentProxy*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)
  id: LogRemotingStage(System.Int32)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: LogRemotingStage(Int32)
  nameWithType: RemotingServices.LogRemotingStage(Int32)
  fullName: System.Runtime.Remoting.RemotingServices.LogRemotingStage(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Registra la fase in uno scambio remoto a un debugger esterno."
  remarks: "Oggetto `&quot;REMOTING_PERF&quot;` simbolo di pre-elaborazione viene applicato al metodo tramite il <xref:System.Diagnostics.ConditionalAttribute>attributo.</xref:System.Diagnostics.ConditionalAttribute>"
  syntax:
    content: public static void LogRemotingStage (int stage);
    parameters:
    - id: stage
      type: System.Int32
      description: "Una costante definita internamente che identifica la fase in uno scambio remoto."
  overload: System.Runtime.Remoting.RemotingServices.LogRemotingStage*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)
  id: Marshal(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Marshal(MarshalByRefObject)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Accetta un <xref href=&quot;System.MarshalByRefObject&quot;> </xref>, viene registrato con l&quot;infrastruttura di comunicazione remota e lo converte in un&quot;istanza di <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> classe."
  remarks: "Oggetto <xref:System.Runtime.Remoting.ObjRef>è una rappresentazione serializzabile di un oggetto utilizzato per trasferire un riferimento all&quot;oggetto attraverso il limite di un dominio applicazione.</xref:System.Runtime.Remoting.ObjRef> Creazione di un <xref:System.Runtime.Remoting.ObjRef>per un oggetto è noto come effettuare il marshalling.</xref:System.Runtime.Remoting.ObjRef> Il <xref:System.Runtime.Remoting.ObjRef>può essere trasferita tramite un canale in un altro dominio applicazione (probabilmente su un altro processo o computer).</xref:System.Runtime.Remoting.ObjRef> Una volta in altro dominio applicazione, il <xref:System.Runtime.Remoting.ObjRef>deve essere analizzata per creare un proxy per l&quot;oggetto, in genere connesso all&quot;oggetto reale.</xref:System.Runtime.Remoting.ObjRef> Questa operazione è nota come l&quot;unmarshalling.       Oggetto <xref:System.Runtime.Remoting.ObjRef>contiene informazioni che descrivono il <xref:System.Type>e classe dell&quot;oggetto di cui effettuare il marshalling, informazioni su come raggiungere la suddivisione remota in cui si trova l&quot;oggetto correlato di un URI che identifica in modo univoco l&quot;istanza di oggetto specifico e la comunicazione.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>       Durante il marshalling, viene utilizzato il contesto del thread corrente, non il contesto che era attivo quando l&quot;oggetto è stato creato. Se un URI non è stato impostato in modo esplicito tramite il <xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A>(metodo), viene generato automaticamente dall&quot;infrastruttura di identità remota.</xref:System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal%2A>       Non è possibile associare un URI con un proxy per uno dei due motivi: oppure l&quot;URI generato sul lato server per l&quot;oggetto che rappresenta l&quot;oggetto è noto, nel qual caso l&quot;URI è noto. Per questo motivo, se la `Obj` parametro è un proxy, verrà generata un&quot;eccezione. Per i proxy personalizzati questa limitazione è ridotta perché il proxy trasparente viene considerato come l&quot;oggetto server."
  syntax:
    content: public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj);
    parameters:
    - id: Obj
      type: System.MarshalByRefObject
      description: "Oggetto da convertire."
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Un&quot;istanza di <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> classe che rappresenta l&quot;oggetto specificato nel <code> Obj </code> parametro."
  overload: System.Runtime.Remoting.RemotingServices.Marshal*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "Il <code> Obj </code> parametro è un oggetto proxy."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Almeno uno dei chiamanti nello stack di chiamate non dispone dell&quot;autorizzazione per configurare i canali e tipi in remoto."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)
  id: Marshal(System.MarshalByRefObject,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Marshal(MarshalByRefObject,String)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Converte il determinato <xref href=&quot;System.MarshalByRefObject&quot;> </xref> in un&quot;istanza di <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> classe con l&quot;URI specificato."
  remarks: "Oggetto <xref:System.Runtime.Remoting.ObjRef>è una rappresentazione serializzabile di un oggetto utilizzato per trasferire un riferimento all&quot;oggetto attraverso il limite di un dominio applicazione.</xref:System.Runtime.Remoting.ObjRef> Creazione di un <xref:System.Runtime.Remoting.ObjRef>per un oggetto è noto come effettuare il marshalling.</xref:System.Runtime.Remoting.ObjRef> Il <xref:System.Runtime.Remoting.ObjRef>può essere trasferita tramite un canale in un altro dominio applicazione (probabilmente su un altro processo o computer).</xref:System.Runtime.Remoting.ObjRef> Una volta in altro dominio applicazione, il <xref:System.Runtime.Remoting.ObjRef>deve essere analizzata per creare un proxy per l&quot;oggetto, in genere connesso all&quot;oggetto reale.</xref:System.Runtime.Remoting.ObjRef> Questa operazione è nota come l&quot;unmarshalling.       Oggetto <xref:System.Runtime.Remoting.ObjRef>contiene informazioni che descrivono il <xref:System.Type>e classe dell&quot;oggetto di cui effettuare il marshalling, informazioni su come raggiungere la suddivisione remota in cui si trova l&quot;oggetto correlato di un URI che identifica in modo univoco l&quot;istanza di oggetto specifico e la comunicazione.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>       Durante il marshalling, viene utilizzato il contesto del thread corrente, non il contesto che era attivo quando l&quot;oggetto è stato creato.       Non è possibile associare un URI con un proxy per uno dei due motivi: oppure l&quot;URI generato sul lato server per l&quot;oggetto che rappresenta l&quot;oggetto è noto, nel qual caso l&quot;URI è noto. Per questo motivo, se la `Obj` parametro è un proxy, verrà generata un&quot;eccezione. Per i proxy personalizzati questa limitazione è ridotta perché il proxy trasparente viene considerato come l&quot;oggetto server."
  example:
  - "The following code example demonstrates how to use the current <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> method to marshal a specified object.  \n  \n [!code-cpp[RemotingServices.BasicSample#2](~/add/codesnippet/cpp/01236a8e-f8c3-4b7b-875d-_1.cpp)]\n [!code-cs[RemotingServices.BasicSample#2](~/add/codesnippet/csharp/01236a8e-f8c3-4b7b-875d-_1.cs)]\n [!code-vb[RemotingServices.BasicSample#2](~/add/codesnippet/visualbasic/01236a8e-f8c3-4b7b-875d-_1.vb)]"
  syntax:
    content: public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj, string URI);
    parameters:
    - id: Obj
      type: System.MarshalByRefObject
      description: "Oggetto da convertire."
    - id: URI
      type: System.String
      description: "L&quot;URI specificato con il quale inizializzare la nuova <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Un&quot;istanza di <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> classe che rappresenta l&quot;oggetto specificato nel <code> Obj </code> parametro."
  overload: System.Runtime.Remoting.RemotingServices.Marshal*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "<code>Obj</code>è un oggetto proxy e <code>URI</code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Almeno uno dei chiamanti nello stack di chiamate non dispone dell&quot;autorizzazione per configurare i canali e tipi in remoto."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)
  id: Marshal(System.MarshalByRefObject,System.String,System.Type)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Marshal(MarshalByRefObject,String,Type)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String,Type)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Accetta un <xref href=&quot;System.MarshalByRefObject&quot;> </xref> e lo converte in un&quot;istanza di <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> classe con l&quot;oggetto URI e fornito <xref:System.Type>.</xref:System.Type>"
  remarks: "Oggetto <xref:System.Runtime.Remoting.ObjRef>è una rappresentazione serializzabile di un oggetto utilizzato per trasferire un riferimento all&quot;oggetto attraverso il limite di un dominio applicazione.</xref:System.Runtime.Remoting.ObjRef> Creazione di un <xref:System.Runtime.Remoting.ObjRef>per un oggetto è noto come effettuare il marshalling.</xref:System.Runtime.Remoting.ObjRef> Il <xref:System.Runtime.Remoting.ObjRef>può essere trasferita tramite un canale in un altro dominio applicazione (probabilmente su un altro processo o computer).</xref:System.Runtime.Remoting.ObjRef> Una volta in altro dominio applicazione, il <xref:System.Runtime.Remoting.ObjRef>deve essere analizzata per creare un proxy per l&quot;oggetto, in genere connesso all&quot;oggetto reale.</xref:System.Runtime.Remoting.ObjRef> Questa operazione è nota come l&quot;unmarshalling.       Oggetto <xref:System.Runtime.Remoting.ObjRef>contiene informazioni che descrivono il <xref:System.Type>e classe dell&quot;oggetto di cui effettuare il marshalling, informazioni su come raggiungere la suddivisione remota in cui si trova l&quot;oggetto correlato di un URI che identifica in modo univoco l&quot;istanza di oggetto specifico e la comunicazione.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>       Specificato <xref:System.Type>viene utilizzata dall&quot;infrastruttura di comunicazione remota per limitare l&quot;ambito della gerarchia dei tipi esposti.</xref:System.Type> Ad esempio, se l&quot;oggetto deriva dall&quot;oggetto B, che deriva dall&quot;oggetto C, e viene chiamato <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A>, quindi il client può eseguire il cast del proxy tra C e B, ma non in A.       Durante il marshalling, viene utilizzato il contesto del thread corrente, non il contesto che era attivo quando l&quot;oggetto è stato creato.</xref:System.Runtime.Remoting.RemotingServices.Marshal%2A>       Non è possibile associare un URI con un proxy per uno dei due motivi: oppure l&quot;URI generato sul lato server per l&quot;oggetto che rappresenta l&quot;oggetto è noto, nel qual caso l&quot;URI è noto. Per questo motivo, se la `Obj` parametro è un proxy, verrà generata un&quot;eccezione. Per i proxy personalizzati questa limitazione è ridotta perché il proxy trasparente viene considerato come l&quot;oggetto server."
  syntax:
    content: public static System.Runtime.Remoting.ObjRef Marshal (MarshalByRefObject Obj, string ObjURI, Type RequestedType);
    parameters:
    - id: Obj
      type: System.MarshalByRefObject
      description: "Oggetto da convertire in un <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref>."
    - id: ObjURI
      type: System.String
      description: "L&quot;oggetto specificato nell&quot;URI di `Obj` viene effettuato il marshalling di parametri con. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: RequestedType
      type: System.Type
      description: "Il <xref:System.Type> `Obj` viene sottoposto a marshalling come.</xref:System.Type> Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Un&quot;istanza di <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> classe che rappresenta l&quot;oggetto specificato nel <code> Obj </code> parametro."
  overload: System.Runtime.Remoting.RemotingServices.Marshal*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "<code>Obj</code>rappresenta un proxy di un oggetto remoto e <code>ObjUri</code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Almeno uno dei chiamanti nello stack di chiamate non dispone dell&quot;autorizzazione per configurare i canali e tipi in remoto."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)
  id: SetObjectUriForMarshal(System.MarshalByRefObject,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: SetObjectUriForMarshal(MarshalByRefObject,String)
  nameWithType: RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)
  fullName: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Imposta l&quot;URI per la successiva chiamata al <xref:System.Runtime.Remoting.RemotingServices.Marshal*>metodo.</xref:System.Runtime.Remoting.RemotingServices.Marshal*>"
  remarks: "The URI set by the current method is used when marshaling the given object.  \n  \n After marshaling, the URI of the specified object is set to the string in the `uri` parameter appended onto the <xref:System.Guid> of the current <xref:System.AppDomain>.  \n  \n If the current application is listening on an HTTP port, then both the string specified in the `uri` parameter and the `uri` string appended onto the <xref:System.Guid> of the current <xref:System.AppDomain> route to the specified object. For example, if the application is listening on HTTP port 9000, then both http://localhost:9000/objectUri, and http://localhost:9000/\\<appdomainguid>/objectUri route to the object specified in the `obj` parameter."
  example:
  - "The following code example demonstrates how to set the URI that will be used by the <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> method when marshaling the specified object.  \n  \n [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/cpp/2ed6d271-806d-4778-95aa-_1.cpp)]\n [!code-cs[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/csharp/2ed6d271-806d-4778-95aa-_1.cs)]\n [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/visualbasic/2ed6d271-806d-4778-95aa-_1.vb)]"
  syntax:
    content: public static void SetObjectUriForMarshal (MarshalByRefObject obj, string uri);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Oggetto da impostare un URI."
    - id: uri
      type: System.String
      description: "L&quot;URI da assegnare all&quot;oggetto specificato."
  overload: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "<code>obj</code>è stato già effettuato il marshalling di un oggetto non locale, o il metodo corrente è già stato chiamato su."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Almeno uno dei chiamanti nello stack di chiamate non dispone dell&quot;autorizzazione per configurare i canali e tipi in remoto."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)
  id: Unmarshal(System.Runtime.Remoting.ObjRef)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Unmarshal(ObjRef)
  nameWithType: RemotingServices.Unmarshal(ObjRef)
  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Accetta un <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> e crea un oggetto proxy esterno."
  remarks: "Oggetto <xref:System.Runtime.Remoting.ObjRef>è una rappresentazione serializzabile di un oggetto utilizzato per trasferire un riferimento all&quot;oggetto attraverso il limite di un dominio applicazione.</xref:System.Runtime.Remoting.ObjRef> Creazione di un <xref:System.Runtime.Remoting.ObjRef>per un oggetto è noto come effettuare il marshalling.</xref:System.Runtime.Remoting.ObjRef> Il <xref:System.Runtime.Remoting.ObjRef>può essere trasferita tramite un canale in un altro dominio applicazione (probabilmente su un altro processo o computer).</xref:System.Runtime.Remoting.ObjRef> Una volta in altro dominio applicazione, il <xref:System.Runtime.Remoting.ObjRef>deve essere analizzata per creare un proxy per l&quot;oggetto, in genere connesso all&quot;oggetto reale.</xref:System.Runtime.Remoting.ObjRef> Questa operazione è nota come l&quot;unmarshalling. Durante l&quot;unmarshalling, il <xref:System.Runtime.Remoting.ObjRef>analizzata per estrarre le informazioni sul metodo dell&quot;oggetto remoto e sia il proxy trasparente e <xref:System.Runtime.Remoting.Proxies.RealProxy>gli oggetti vengono creati.</xref:System.Runtime.Remoting.Proxies.RealProxy> </xref:System.Runtime.Remoting.ObjRef> Il contenuto dell&quot;oggetto analizzato <xref:System.Runtime.Remoting.ObjRef>viene aggiunto al proxy trasparente prima che il proxy trasparente è registrato con common language runtime.</xref:System.Runtime.Remoting.ObjRef>       Oggetto <xref:System.Runtime.Remoting.ObjRef>contiene informazioni che descrivono il <xref:System.Type>e classe dell&quot;oggetto di cui effettuare il marshalling, informazioni su come raggiungere la suddivisione remota in cui si trova l&quot;oggetto correlato di un URI che identifica in modo univoco l&quot;istanza di oggetto specifico e la comunicazione.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>"
  example:
  - "The following code example demonstrates how to unmarshal an object.  \n  \n [!code-vb[RemotingServices.Unmarshal#2](~/add/codesnippet/visualbasic/b4be8871-533a-4641-8763-_1.vb)]\n [!code-cpp[RemotingServices.Unmarshal#2](~/add/codesnippet/cpp/b4be8871-533a-4641-8763-_1.cpp)]\n [!code-cs[RemotingServices.Unmarshal#2](~/add/codesnippet/csharp/b4be8871-533a-4641-8763-_1.cs)]"
  syntax:
    content: public static object Unmarshal (System.Runtime.Remoting.ObjRef objectRef);
    parameters:
    - id: objectRef
      type: System.Runtime.Remoting.ObjRef
      description: "Il <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> che rappresenta l&quot;oggetto remoto per cui viene creato il proxy."
    return:
      type: System.Object
      description: "Un proxy per l&quot;oggetto che il dato <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> rappresenta."
  overload: System.Runtime.Remoting.RemotingServices.Unmarshal*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> specificato nell&quot;istanza di <code> objectRef </code> parametro non è corretto."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Almeno uno dei chiamanti nello stack di chiamate non dispone dell&quot;autorizzazione per configurare i canali e tipi in remoto."
  platform:
  - net462
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)
  id: Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)
  parent: System.Runtime.Remoting.RemotingServices
  langs:
  - csharp
  name: Unmarshal(ObjRef,Boolean)
  nameWithType: RemotingServices.Unmarshal(ObjRef,Boolean)
  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Accetta un <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> e crea un oggetto proxy esterno, adattandolo al tipo sul server."
  remarks: "Oggetto <xref:System.Runtime.Remoting.ObjRef>è una rappresentazione serializzabile di un oggetto utilizzato per trasferire un riferimento all&quot;oggetto attraverso il limite di un dominio applicazione.</xref:System.Runtime.Remoting.ObjRef> Creazione di un <xref:System.Runtime.Remoting.ObjRef>per un oggetto è noto come effettuare il marshalling.</xref:System.Runtime.Remoting.ObjRef> Il <xref:System.Runtime.Remoting.ObjRef>può essere trasferita tramite un canale in un altro dominio applicazione (probabilmente su un altro processo o computer).</xref:System.Runtime.Remoting.ObjRef> Una volta in altro dominio applicazione, il <xref:System.Runtime.Remoting.ObjRef>deve essere analizzata per creare un proxy per l&quot;oggetto, in genere connesso all&quot;oggetto reale.</xref:System.Runtime.Remoting.ObjRef> Questa operazione è nota come l&quot;unmarshalling. Durante l&quot;unmarshalling, il <xref:System.Runtime.Remoting.ObjRef>analizzata per estrarre le informazioni sul metodo dell&quot;oggetto remoto e sia il proxy trasparente e <xref:System.Runtime.Remoting.Proxies.RealProxy>gli oggetti vengono creati.</xref:System.Runtime.Remoting.Proxies.RealProxy> </xref:System.Runtime.Remoting.ObjRef> Il contenuto dell&quot;oggetto analizzato <xref:System.Runtime.Remoting.ObjRef>viene aggiunto al proxy trasparente prima che il proxy trasparente è registrato con common language runtime.</xref:System.Runtime.Remoting.ObjRef>       Oggetto <xref:System.Runtime.Remoting.ObjRef>contiene informazioni che descrivono il <xref:System.Type>e classe dell&quot;oggetto di cui effettuare il marshalling, informazioni su come raggiungere la suddivisione remota in cui si trova l&quot;oggetto correlato di un URI che identifica in modo univoco l&quot;istanza di oggetto specifico e la comunicazione.</xref:System.Type> </xref:System.Runtime.Remoting.ObjRef>       Fase di creazione, il proxy è di tipo <xref:System.MarshalByRefObject>.</xref:System.MarshalByRefObject> Come è eseguirne il cast in tipi diversi, l&quot;infrastruttura remota tiene traccia del tipo per evitare il caricamento del tipo inutilmente più utilizzato."
  syntax:
    content: public static object Unmarshal (System.Runtime.Remoting.ObjRef objectRef, bool fRefine);
    parameters:
    - id: objectRef
      type: System.Runtime.Remoting.ObjRef
      description: "Il <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> che rappresenta l&quot;oggetto remoto per cui viene creato il proxy."
    - id: fRefine
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per adattare il proxy per il tipo del server. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Un proxy per l&quot;oggetto che il dato <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> rappresenta."
  overload: System.Runtime.Remoting.RemotingServices.Unmarshal*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> specificato nell&quot;istanza di <code> objectRef </code> parametro non è corretto."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Almeno uno dei chiamanti nello stack di chiamate non dispone dell&quot;autorizzazione per configurare i canali e tipi in remoto."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Connect(Type,String)
  nameWithType: RemotingServices.Connect(Type,String)
  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.RemotingServices.Connect(System.Type,System.String,System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Connect(Type,String,Object)
  nameWithType: RemotingServices.Connect(Type,String,Object)
  fullName: System.Runtime.Remoting.RemotingServices.Connect(Type,String,Object)
- uid: System.Runtime.Remoting.RemotingServices.Disconnect(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Disconnect(MarshalByRefObject)
  nameWithType: RemotingServices.Disconnect(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.Disconnect(MarshalByRefObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Runtime.Remoting.RemotingServices.ExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  nameWithType: RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
  fullName: System.Runtime.Remoting.RemotingServices.ExecuteMessage(MarshalByRefObject,IMethodCallMessage)
- uid: System.Runtime.Remoting.Messaging.IMethodReturnMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMethodReturnMessage
  nameWithType: IMethodReturnMessage
  fullName: System.Runtime.Remoting.Messaging.IMethodReturnMessage
- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMethodCallMessage
  nameWithType: IMethodCallMessage
  fullName: System.Runtime.Remoting.Messaging.IMethodCallMessage
- uid: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetEnvoyChainForProxy(MarshalByRefObject)
  nameWithType: RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy(MarshalByRefObject)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.RemotingServices.GetLifetimeService(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetLifetimeService(MarshalByRefObject)
  nameWithType: RemotingServices.GetLifetimeService(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetLifetimeService(MarshalByRefObject)
- uid: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetMethodBaseFromMethodMessage(IMethodMessage)
  nameWithType: RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage(IMethodMessage)
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: true
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Runtime.Remoting.Messaging.IMethodMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMethodMessage
  nameWithType: IMethodMessage
  fullName: System.Runtime.Remoting.Messaging.IMethodMessage
- uid: System.Runtime.Remoting.RemotingServices.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjectData(Object,SerializationInfo,StreamingContext)
  nameWithType: RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjectData(Object,SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjectUri(MarshalByRefObject)
  nameWithType: RemotingServices.GetObjectUri(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjectUri(MarshalByRefObject)
- uid: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjRefForProxy(MarshalByRefObject)
  nameWithType: RemotingServices.GetObjRefForProxy(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy(MarshalByRefObject)
- uid: System.Runtime.Remoting.ObjRef
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
- uid: System.Runtime.Remoting.RemotingServices.GetRealProxy(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetRealProxy(Object)
  nameWithType: RemotingServices.GetRealProxy(Object)
  fullName: System.Runtime.Remoting.RemotingServices.GetRealProxy(Object)
- uid: System.Runtime.Remoting.Proxies.RealProxy
  parent: System.Runtime.Remoting.Proxies
  isExternal: false
  name: RealProxy
  nameWithType: RealProxy
  fullName: System.Runtime.Remoting.Proxies.RealProxy
- uid: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(System.String)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetServerTypeForUri(String)
  nameWithType: RemotingServices.GetServerTypeForUri(String)
  fullName: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri(String)
- uid: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetSessionIdForMethodMessage(IMethodMessage)
  nameWithType: RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage(IMethodMessage)
- uid: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsMethodOverloaded(IMethodMessage)
  nameWithType: RemotingServices.IsMethodOverloaded(IMethodMessage)
  fullName: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded(IMethodMessage)
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsObjectOutOfAppDomain(Object)
  nameWithType: RemotingServices.IsObjectOutOfAppDomain(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(Object)
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsObjectOutOfContext(Object)
  nameWithType: RemotingServices.IsObjectOutOfContext(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext(Object)
- uid: System.Runtime.Remoting.RemotingServices.IsOneWay(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsOneWay(MethodBase)
  nameWithType: RemotingServices.IsOneWay(MethodBase)
  fullName: System.Runtime.Remoting.RemotingServices.IsOneWay(MethodBase)
- uid: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(System.Object)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsTransparentProxy(Object)
  nameWithType: RemotingServices.IsTransparentProxy(Object)
  fullName: System.Runtime.Remoting.RemotingServices.IsTransparentProxy(Object)
- uid: System.Runtime.Remoting.RemotingServices.LogRemotingStage(System.Int32)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: LogRemotingStage(Int32)
  nameWithType: RemotingServices.LogRemotingStage(Int32)
  fullName: System.Runtime.Remoting.RemotingServices.LogRemotingStage(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Marshal(MarshalByRefObject)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject)
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Marshal(MarshalByRefObject,String)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String)
- uid: System.Runtime.Remoting.RemotingServices.Marshal(System.MarshalByRefObject,System.String,System.Type)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Marshal(MarshalByRefObject,String,Type)
  nameWithType: RemotingServices.Marshal(MarshalByRefObject,String,Type)
  fullName: System.Runtime.Remoting.RemotingServices.Marshal(MarshalByRefObject,String,Type)
- uid: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(System.MarshalByRefObject,System.String)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: SetObjectUriForMarshal(MarshalByRefObject,String)
  nameWithType: RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)
  fullName: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal(MarshalByRefObject,String)
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Unmarshal(ObjRef)
  nameWithType: RemotingServices.Unmarshal(ObjRef)
  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef)
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Unmarshal(ObjRef,Boolean)
  nameWithType: RemotingServices.Unmarshal(ObjRef,Boolean)
  fullName: System.Runtime.Remoting.RemotingServices.Unmarshal(ObjRef,Boolean)
- uid: System.Runtime.Remoting.RemotingServices.Connect*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Connect
  nameWithType: RemotingServices.Connect
- uid: System.Runtime.Remoting.RemotingServices.Disconnect*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Disconnect
  nameWithType: RemotingServices.Disconnect
- uid: System.Runtime.Remoting.RemotingServices.ExecuteMessage*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: ExecuteMessage
  nameWithType: RemotingServices.ExecuteMessage
- uid: System.Runtime.Remoting.RemotingServices.GetEnvoyChainForProxy*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetEnvoyChainForProxy
  nameWithType: RemotingServices.GetEnvoyChainForProxy
- uid: System.Runtime.Remoting.RemotingServices.GetLifetimeService*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetLifetimeService
  nameWithType: RemotingServices.GetLifetimeService
- uid: System.Runtime.Remoting.RemotingServices.GetMethodBaseFromMethodMessage*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetMethodBaseFromMethodMessage
  nameWithType: RemotingServices.GetMethodBaseFromMethodMessage
- uid: System.Runtime.Remoting.RemotingServices.GetObjectData*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjectData
  nameWithType: RemotingServices.GetObjectData
- uid: System.Runtime.Remoting.RemotingServices.GetObjectUri*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjectUri
  nameWithType: RemotingServices.GetObjectUri
- uid: System.Runtime.Remoting.RemotingServices.GetObjRefForProxy*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetObjRefForProxy
  nameWithType: RemotingServices.GetObjRefForProxy
- uid: System.Runtime.Remoting.RemotingServices.GetRealProxy*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetRealProxy
  nameWithType: RemotingServices.GetRealProxy
- uid: System.Runtime.Remoting.RemotingServices.GetServerTypeForUri*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetServerTypeForUri
  nameWithType: RemotingServices.GetServerTypeForUri
- uid: System.Runtime.Remoting.RemotingServices.GetSessionIdForMethodMessage*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: GetSessionIdForMethodMessage
  nameWithType: RemotingServices.GetSessionIdForMethodMessage
- uid: System.Runtime.Remoting.RemotingServices.IsMethodOverloaded*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsMethodOverloaded
  nameWithType: RemotingServices.IsMethodOverloaded
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsObjectOutOfAppDomain
  nameWithType: RemotingServices.IsObjectOutOfAppDomain
- uid: System.Runtime.Remoting.RemotingServices.IsObjectOutOfContext*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsObjectOutOfContext
  nameWithType: RemotingServices.IsObjectOutOfContext
- uid: System.Runtime.Remoting.RemotingServices.IsOneWay*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsOneWay
  nameWithType: RemotingServices.IsOneWay
- uid: System.Runtime.Remoting.RemotingServices.IsTransparentProxy*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: IsTransparentProxy
  nameWithType: RemotingServices.IsTransparentProxy
- uid: System.Runtime.Remoting.RemotingServices.LogRemotingStage*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: LogRemotingStage
  nameWithType: RemotingServices.LogRemotingStage
- uid: System.Runtime.Remoting.RemotingServices.Marshal*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Marshal
  nameWithType: RemotingServices.Marshal
- uid: System.Runtime.Remoting.RemotingServices.SetObjectUriForMarshal*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: SetObjectUriForMarshal
  nameWithType: RemotingServices.SetObjectUriForMarshal
- uid: System.Runtime.Remoting.RemotingServices.Unmarshal*
  parent: System.Runtime.Remoting.RemotingServices
  isExternal: false
  name: Unmarshal
  nameWithType: RemotingServices.Unmarshal
