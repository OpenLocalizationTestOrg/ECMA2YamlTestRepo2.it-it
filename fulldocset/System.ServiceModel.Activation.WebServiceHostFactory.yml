### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activation.WebServiceHostFactory
  id: WebServiceHostFactory
  children:
  - System.ServiceModel.Activation.WebServiceHostFactory.#ctor
  - System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  langs:
  - csharp
  name: WebServiceHostFactory
  nameWithType: WebServiceHostFactory
  fullName: System.ServiceModel.Activation.WebServiceHostFactory
  type: Class
  summary: "Factory che fornisce istanze di <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> negli ambienti in cui l&quot;istanza dell&quot;host viene creata dinamicamente in risposta ai messaggi in ingresso host gestiti."
  remarks: "Gli ambienti host gestiti che supportano l&quot;attivazione dinamica sono Internet Information Services (IIS) e del servizio Attivazione processo Windows (WAS).       Se Ã¨ stato implementato un derivato personalizzato di <xref:System.ServiceModel.Web.WebServiceHost>, prendere in considerazione anche l&quot;implementazione di una factory che deriva dalla classe WebServiceHostFactory.</xref:System.ServiceModel.Web.WebServiceHost>"
  example:
  - "The following example shows how to derive a class from WebServiceHostFactory.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n To have your derived Web service host factory used, specify it in a .SVC file. The following example shows the syntax used in a .svc file.  \n  \n```  \n<%@ServiceHost language=c# Service=\"Microsoft.Samples.MyWCFService\" Factory=\"Microsoft.Samples.MyWebServiceHostFactory\" %>  \n```"
  syntax:
    content: 'public class WebServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory'
  inheritance:
  - System.ServiceModel.Activation.ServiceHostFactory
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WebServiceHostFactory.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activation.WebServiceHostFactory
  langs:
  - csharp
  name: WebServiceHostFactory()
  nameWithType: WebServiceHostFactory.WebServiceHostFactory()
  fullName: System.ServiceModel.Activation.WebServiceHostFactory.WebServiceHostFactory()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Activation
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Activation.WebServiceHostFactory&quot;> </xref> classe."
  remarks: "Questo metodo non viene chiamato direttamente. Viene chiamato durante l&quot;attivazione di un servizio in modo dinamico."
  syntax:
    content: public WebServiceHostFactory ();
    parameters: []
  overload: System.ServiceModel.Activation.WebServiceHostFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  id: CreateServiceHost(System.Type,System.Uri[])
  parent: System.ServiceModel.Activation.WebServiceHostFactory
  langs:
  - csharp
  name: CreateServiceHost(Type,Uri[])
  nameWithType: WebServiceHostFactory.CreateServiceHost(Type,Uri[])
  fullName: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(Type,Uri[])
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Activation
  summary: "Crea un&quot;istanza dell&quot;oggetto specificato <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> derivata con gli indirizzi di base specificati."
  remarks: "Eseguire l&quot;override di questo metodo per creare il tipo di host del servizio richiesto ed eseguire l&quot;elaborazione necessaria."
  example:
  - "The following example shows a basic implementation of this method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di host del servizio da creare."
    - id: baseAddresses
      type: System.Uri[]
      description: "Matrice di indirizzi di base per il servizio."
    return:
      type: System.ServiceModel.ServiceHost
      description: "Un&quot;istanza di un <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> classe derivata."
  overload: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Activation.ServiceHostFactory
  isExternal: false
  name: System.ServiceModel.Activation.ServiceHostFactory
- uid: System.ServiceModel.Activation.WebServiceHostFactory.#ctor
  parent: System.ServiceModel.Activation.WebServiceHostFactory
  isExternal: false
  name: WebServiceHostFactory()
  nameWithType: WebServiceHostFactory.WebServiceHostFactory()
  fullName: System.ServiceModel.Activation.WebServiceHostFactory.WebServiceHostFactory()
- uid: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  parent: System.ServiceModel.Activation.WebServiceHostFactory
  isExternal: false
  name: CreateServiceHost(Type,Uri[])
  nameWithType: WebServiceHostFactory.CreateServiceHost(Type,Uri[])
  fullName: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(Type,Uri[])
- uid: System.ServiceModel.ServiceHost
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHost
  nameWithType: ServiceHost
  fullName: System.ServiceModel.ServiceHost
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Activation.WebServiceHostFactory.#ctor*
  parent: System.ServiceModel.Activation.WebServiceHostFactory
  isExternal: false
  name: WebServiceHostFactory
  nameWithType: WebServiceHostFactory.WebServiceHostFactory
- uid: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost*
  parent: System.ServiceModel.Activation.WebServiceHostFactory
  isExternal: false
  name: CreateServiceHost
  nameWithType: WebServiceHostFactory.CreateServiceHost
