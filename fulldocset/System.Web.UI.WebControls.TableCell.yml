### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TableCell
  id: TableCell
  children:
  - System.Web.UI.WebControls.TableCell.#ctor
  - System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID
  - System.Web.UI.WebControls.TableCell.ColumnSpan
  - System.Web.UI.WebControls.TableCell.CreateControlStyle
  - System.Web.UI.WebControls.TableCell.HorizontalAlign
  - System.Web.UI.WebControls.TableCell.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TableCell.RowSpan
  - System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute
  - System.Web.UI.WebControls.TableCell.Text
  - System.Web.UI.WebControls.TableCell.VerticalAlign
  - System.Web.UI.WebControls.TableCell.Wrap
  langs:
  - csharp
  name: TableCell
  nameWithType: TableCell
  fullName: System.Web.UI.WebControls.TableCell
  type: Class
  summary: "Rappresenta una cella in un <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controllo."
  remarks: "In questo argomento:- [Introduzione](#introduction)      -   [sintassi dichiarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # introduzione cella di tabella la classe rappresenta una cella in un <xref:System.Web.UI.WebControls.Table>controllo.</xref:System.Web.UI.WebControls.Table>       È possibile utilizzare il <xref:System.Web.UI.WebControls.TableCell.Text%2A>proprietà per specificare o determinare il contenuto della cella.</xref:System.Web.UI.WebControls.TableCell.Text%2A>       La classe di cella di tabella consente di controllare la modalità di visualizzazione contenuto della cella. L&quot;allineamento del contenuto nella cella viene specificato impostando il <xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A>e <xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A>proprietà.</xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A> </xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A> È possibile utilizzare il <xref:System.Web.UI.WebControls.TableCell.Wrap%2A>proprietà per specificare se il contenuto della cella va a capo nella cella.</xref:System.Web.UI.WebControls.TableCell.Wrap%2A>       È inoltre possibile specificare il numero di righe o colonne nella tabella, rappresentata da un <xref:System.Web.UI.WebControls.Table>di controllo, sono occupate da una singola cella.</xref:System.Web.UI.WebControls.Table> Il <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>e <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>proprietà consentono di controllare il numero di righe e colonne vengono utilizzate, rispettivamente.</xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> </xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>      > [!CAUTION] > Questo controllo può essere utilizzato per visualizzare l&quot;input dell&quot;utente che può includere uno script client dannoso. Verificare tutte le informazioni inviate da un client per uno script eseguibile, istruzioni SQL o altro codice prima di visualizzarlo nell&quot;applicazione. ASP.NET fornisce una funzionalità di convalida richiesta di input per bloccare script e HTML nell&quot;input dell&quot;utente. Controlli server di convalida vengono inoltre forniti per valutare l&quot;input dell&quot;utente. Per ulteriori informazioni, vedere [protezione dei controlli Standard](~/add/includes/ajax-current-ext-md.md), [come: protezione dagli attacchi tramite Script in un&quot;applicazione Web da applicare la codifica HTML alle stringhe](~/add/includes/ajax-current-ext-md.md), e [convalida dell&quot;Input utente in ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;declarative_syntax&quot;></a># # Sintassi dichiarativa```   <asp:TableCell       AccessKey=&quot;string&quot;       AssociatedHeaderCellID=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       ColumnSpan=&quot;integer&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       RowSpan=&quot;integer&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Text=&quot;string&quot;       ToolTip=&quot;string&quot;       VerticalAlign=&quot;NotSet|Top|Middle|Bottom&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;       Wrap=&quot;True|False&quot;   /></asp:TableCell>   ```"
  example:
  - "The following code example demonstrates how to create a table, add elements to the table programmatically, and display the table on the Web page. Note how TableCell controls are instantiated and their property values are set.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[TableCell#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_46_1.aspx)]\n [!code-vb[TableCell#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_46_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(false)]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.TableCellControlBuilder))]

      [System.Web.UI.ParseChildren(false)]

      public class TableCell : System.Web.UI.WebControls.WebControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: TableCell()
  nameWithType: TableCell.TableCell()
  fullName: System.Web.UI.WebControls.TableCell.TableCell()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> classe."
  remarks: "Il <xref:System.Web.UI.WebControls.TableCell>viene creato utilizzando il <xref:System.Web.UI.HtmlTextWriterTag>tag.</xref:System.Web.UI.HtmlTextWriterTag> </xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following example demonstrates how to programmatically create a new instance of a <xref:System.Web.UI.WebControls.TableCell> control.  \n  \n [!code-cs[TableCell#5](~/add/codesnippet/csharp/m-system.web.ui.webcontr_66_1.aspx)]\n [!code-vb[TableCell#5](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_66_1.aspx)]"
  syntax:
    content: public TableCell ();
    parameters: []
  overload: System.Web.UI.WebControls.TableCell.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: TableCell.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TableCell.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Aggiunge le proprietà specifiche per la <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> controllo all&quot;elenco di attributi per il rendering."
  remarks: "Il metodo AddAttributesToRender esegue l&quot;override della classe di base <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A>del primo e del metodo chiama il metodo di base e quindi aggiunge il <xref:System.Web.UI.WebControls.TableCell>attributi corrispondenti al <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>proprietà, il <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>proprietà e <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>proprietà.</xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A> </xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> </xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> Se il <xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>proprietà fa riferimento a un <xref:System.Web.UI.WebControls.TableHeaderCell>che non può essere trovato, un <xref:System.Web.HttpException>viene generata un&quot;eccezione.</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.TableHeaderCell> </xref:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID%2A>       Il metodo AddAttributesToRender viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.WebControls.TableCell>controllo.</xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following code example demonstrates how to override the AddAttributesToRender method in a custom server control so that a custom title attribute is rendered for each cell.  \n  \n [!code-cs[CustomTableCellAddAttributesToRender#1](~/add/codesnippet/csharp/d7533fd7-c6ec-4fe0-8c31-_1.aspx)]\n [!code-vb[CustomTableCellAddAttributesToRender#1](~/add/codesnippet/visualbasic/d7533fd7-c6ec-4fe0-8c31-_1.aspx)]  \n  \n [!code-vb[CustomTableCellAddAttributesToRender#2](~/add/codesnippet/visualbasic/d7533fd7-c6ec-4fe0-8c31-_2.vb)]\n [!code-cs[CustomTableCellAddAttributesToRender#2](~/add/codesnippet/csharp/d7533fd7-c6ec-4fe0-8c31-_2.cs)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Flusso di output che esegue il rendering del contenuto HTML nel client."
  overload: System.Web.UI.WebControls.TableCell.AddAttributesToRender*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Una cella elencata come cella di intestazione associata non è stata trovata."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)
  id: AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: AddParsedSubObject(Object)
  nameWithType: TableCell.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.TableCell.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Aggiunge un controllo figlio analizzato il <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> controllo."
  remarks: "Se il <xref:System.Web.UI.WebControls.TableCell>controllo contiene controlli figlio metodo AddParsedSubObject della classe di base è chiamato; in caso contrario, il <xref:System.Web.UI.WebControls.TableCell> <xref:System.Web.UI.WebControls.TableCell.Text%2A>valore della proprietà viene aggiunta come un <xref:System.Web.UI.LiteralControl>oggetto per il <xref:System.Web.UI.WebControls.TableCell>controllo <xref:System.Web.UI.ControlCollection>.</xref:System.Web.UI.ControlCollection> del controllo</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.LiteralControl> </xref:System.Web.UI.WebControls.TableCell.Text%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.TableCell>       Il metodo AddParsedSubObject viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.WebControls.TableCell>controllo.</xref:System.Web.UI.WebControls.TableCell>"
  syntax:
    content: protected override void AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>Che rappresenta l&quot;elemento sottoposto ad analisi</xref:System.Object> un"
  overload: System.Web.UI.WebControls.TableCell.AddParsedSubObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID
  id: AssociatedHeaderCellID
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: AssociatedHeaderCellID
  nameWithType: TableCell.AssociatedHeaderCellID
  fullName: System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un elenco separato da spazi delle celle di intestazione di tabella associati il <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> controllo."
  remarks: "La proprietà AssociatedHeaderCellID contiene un elenco di intestazione cella identificatori a livello di codice che fornisce informazioni di intestazione del <xref:System.Web.UI.WebControls.TableCell>controllo.</xref:System.Web.UI.WebControls.TableCell> L&quot;elenco degli identificatori di cella di intestazione viene eseguito il rendering come elenco delimitato da virgole in HTML `<td>` dell&quot;elemento `header` attributo.       Quando si imposta la proprietà AssociatedHeaderCellID, utilizzare un elenco di stringhe delimitato da virgole. Se un elemento dell&quot;elenco non è riconosciuto come una cella di intestazione di tabella valido un <xref:System.Web.HttpException>viene generata quando il <xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A>viene richiamato.</xref:System.Web.UI.WebControls.TableCell.AddAttributesToRender%2A> </xref:System.Web.HttpException>"
  example:
  - "The following code example demonstrates how to declaratively specify the AssociatedHeaderCellID property of a <xref:System.Web.UI.WebControls.TableCell> control. In particular, note how the cell in the last row is associated to three header cells. For a complete, working code example, see the <xref:System.Web.UI.WebControls.TableHeaderCell> class overview topic.  \n  \n```c#  \n<asp:TableCell AssociatedHeaderCellID=\"Column1Header Column2Header Column3Header\"  \nColumnSpan=\"3\"  \nHorizontalAlign=\"Left\">(2,0)  \n</asp:TableCell>  \n```  \n  \n```vb#  \n<asp:TableCell AssociatedHeaderCellID=\"Column1Header Column2Header Column3Header\"  \nColumnSpan=\"3\"  \nHorizontalAlign=\"Left\">(2,0)  \n</asp:TableCell>  \n```"
  syntax:
    content: public virtual string[] AssociatedHeaderCellID { get; set; }
    return:
      type: System.String[]
      description: "Una matrice di stringhe contenente gli identificatori delle celle di intestazione della tabella associata."
  overload: System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.ColumnSpan
  id: ColumnSpan
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: ColumnSpan
  nameWithType: TableCell.ColumnSpan
  fullName: System.Web.UI.WebControls.TableCell.ColumnSpan
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il numero di colonne di <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controllo che si estende la cella."
  remarks: "Utilizzare la proprietà ColumnSpan per specificare o per determinare il numero di colonne della tabella viene eseguito il rendering che si estende la cella. Ad esempio, se si imposta questa proprietà su `2`, la cella include due colonne di <xref:System.Web.UI.WebControls.Table>controllo.</xref:System.Web.UI.WebControls.Table>"
  example:
  - "The following code example demonstrates how to declaratively specify the ColumnSpan of a <xref:System.Web.UI.WebControls.TableCell> control. In particular, note how the last row's single cell spans three columns. For a complete, working code example, see the <xref:System.Web.UI.WebControls.TableHeaderCell> class overview topic.  \n  \n```c#  \n<asp:TableCell AssociatedHeaderCellID=\"Column1Header Column2Header Column3Header\"  \nColumnSpan=\"3\"  \nHorizontalAlign=\"Left\">(2,0)  \n</asp:TableCell>  \n```  \n  \n```vb#  \n<asp:TableCell AssociatedHeaderCellID=\"Column1Header Column2Header Column3Header\"  \nColumnSpan=\"3\"  \nHorizontalAlign=\"Left\">(2,0)  \n</asp:TableCell>  \n```"
  syntax:
    content: public virtual int ColumnSpan { get; set; }
    return:
      type: System.Int32
      description: "Il numero di colonne della tabella viene eseguito il rendering che si estende la cella. Il valore predefinito è <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>, a indicare che questa proprietà non è impostata."
  overload: System.Web.UI.WebControls.TableCell.ColumnSpan*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore selezionato è minore di <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: TableCell.CreateControlStyle()
  fullName: System.Web.UI.WebControls.TableCell.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Crea un <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> per il <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> controllo."
  remarks: "Il <xref:System.Web.UI.WebControls.TableItemStyle>creati il CreateControlStyle metodo viene utilizzato con il <xref:System.Web.UI.WebControls.TableCell.Wrap%2A>, <xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A>, e <xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A>proprietà.</xref:System.Web.UI.WebControls.TableCell.VerticalAlign%2A> </xref:System.Web.UI.WebControls.TableCell.HorizontalAlign%2A> </xref:System.Web.UI.WebControls.TableCell.Wrap%2A> </xref:System.Web.UI.WebControls.TableItemStyle>       Il metodo CreateControlStyle viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.WebControls.TableCell>controllo.</xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following code example demonstrates how to override the CreateControlStyle method in a custom server control so that it always returns a new instance of the <xref:System.Web.UI.WebControls.TableStyle> class for the <xref:System.Web.UI.WebControls.TableCell>.  \n  \n [!code-cs[CustomTableCellCreateControlStyle#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_96_1.aspx)]\n [!code-vb[CustomTableCellCreateControlStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_96_1.aspx)]  \n  \n [!code-cs[CustomTableCellCreateControlStyle#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_96_2.cs)]\n [!code-vb[CustomTableCellCreateControlStyle#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_96_2.vb)]"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> che rappresenta il <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> per il <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> controllo."
  overload: System.Web.UI.WebControls.TableCell.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: TableCell.HorizontalAlign
  fullName: System.Web.UI.WebControls.TableCell.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta l&quot;allineamento orizzontale del contenuto della cella."
  remarks: "Utilizzare la proprietà HorizontalAlign per specificare l&quot;allineamento orizzontale del contenuto della cella. Vengono specificati i valori possibili per l&quot;utilizzo nel <xref:System.Web.UI.WebControls.HorizontalAlign>enumerazione.</xref:System.Web.UI.WebControls.HorizontalAlign>"
  example:
  - "The following code example demonstrates how to declaratively specify the HorizontalAlign property of a <xref:System.Web.UI.WebControls.TableCell> control. In particular, note how the cell in the last row is left justified. For a complete, working code example, see the <xref:System.Web.UI.WebControls.TableHeaderCell> class overview topic.  \n  \n```c#  \n<asp:TableCell AssociatedHeaderCellID=\"Column1Header,Column2Header,Column3Header\"  \nColumnSpan=\"3\"  \nHorizontalAlign=\"Left\">(2,0)  \n</asp:TableCell>  \n```  \n  \n```vb#  \n<asp:TableCell AssociatedHeaderCellID=\"Column1Header,Column2Header,Column3Header\"  \nColumnSpan=\"3\"  \nHorizontalAlign=\"Left\">(2,0)  \n</asp:TableCell>  \n```"
  syntax:
    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;> </xref> valori di enumerazione. Il valore predefinito è <xref uid=&quot;langword_csharp_NotSet&quot; name=&quot;NotSet&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TableCell.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: TableCell.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TableCell.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue il rendering di <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> contenuto specificata <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> oggetto."
  remarks: "Se il <xref:System.Web.UI.WebControls.TableCell>controllo dispone di controlli figlio o è sottoposto a override in una classe derivata della classe base <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>metodo è chiamato; in caso contrario, il valore della <xref:System.Web.UI.WebControls.TableCell.Text%2A>proprietà viene scritta nel <xref:System.Web.UI.HtmlTextWriter>oggetto.</xref:System.Web.UI.HtmlTextWriter> </xref:System.Web.UI.WebControls.TableCell.Text%2A> </xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> </xref:System.Web.UI.WebControls.TableCell>       Il metodo RenderContents viene usato principalmente dagli sviluppatori di controlli per estendere la funzionalità del <xref:System.Web.UI.WebControls.TableCell>controllo.</xref:System.Web.UI.WebControls.TableCell>"
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom <xref:System.Web.UI.WebControls.TableCell> control so that it custom text is inserted in the cell's contents.  \n  \n [!code-cs[CustomTableCellRenderContents#1](~/add/codesnippet/csharp/cba70dfb-1bcf-4903-828d-_1.aspx)]\n [!code-vb[CustomTableCellRenderContents#1](~/add/codesnippet/visualbasic/cba70dfb-1bcf-4903-828d-_1.aspx)]  \n  \n [!code-cs[CustomTableCellRenderContents#2](~/add/codesnippet/csharp/cba70dfb-1bcf-4903-828d-_2.cs)]\n [!code-vb[CustomTableCellRenderContents#2](~/add/codesnippet/visualbasic/cba70dfb-1bcf-4903-828d-_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Flusso di output che esegue il rendering del contenuto HTML nel client."
  overload: System.Web.UI.WebControls.TableCell.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.RowSpan
  id: RowSpan
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: RowSpan
  nameWithType: TableCell.RowSpan
  fullName: System.Web.UI.WebControls.TableCell.RowSpan
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il numero di righe di <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> controllo che si estende la cella."
  remarks: "Utilizzare la proprietà RowSpan per specificare o per determinare il numero di righe nella tabella viene eseguito il rendering che si estende la cella. Ad esempio, se si imposta questa proprietà su `2`, la cella occupa due righe di <xref:System.Web.UI.WebControls.Table>controllo.</xref:System.Web.UI.WebControls.Table>"
  syntax:
    content: public virtual int RowSpan { get; set; }
    return:
      type: System.Int32
      description: "Il numero di righe nella tabella viene eseguito il rendering che si estende la cella. Il valore predefinito è <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>, a indicare che questa proprietà non è impostata."
  overload: System.Web.UI.WebControls.TableCell.RowSpan*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore selezionato è minore di <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute
  id: SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: SupportsDisabledAttribute
  nameWithType: TableCell.SupportsDisabledAttribute
  fullName: System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il controllo deve impostare la <xref uid=&quot;langword_csharp_disabled&quot; name=&quot;disabled&quot; href=&quot;&quot;> </xref> attributo dell&quot;elemento HTML di cui è stato eseguito rendering per &quot;disabilitato&quot; quando il controllo <xref:System.Web.UI.WebControls.WebControl.IsEnabled*>proprietà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebControl.IsEnabled*>"
  remarks: "Questa proprietà indica come ASP.NET deve eseguire il rendering HTML per un controllo quando il controllo è disabilitato. Se questa proprietà è `true`, ASP.NET esegue il rendering un `disabled` attributo quando un controllo è disabilitato. Se questa proprietà è `false`, ASP.NET esegue il rendering un `class` attributo quando un controllo è disabilitato. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=fullName>"
  syntax:
    content: public override bool SupportsDisabledAttribute { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il &lt;xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=fullName&gt; proprietà indica una versione ASP.NET precedente alla `4.0`; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.Text
  id: Text
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: Text
  nameWithType: TableCell.Text
  fullName: System.Web.UI.WebControls.TableCell.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il contenuto di testo della cella."
  remarks: "Utilizzare la proprietà di testo per specificare o per determinare il contenuto di testo della cella. Questa proprietà viene comunemente utilizzata a livello di codice aggiornare il contenuto di una cella.      > [!NOTE] > Impostando la proprietà Text eliminerà gli altri controlli presenti in <xref:System.Web.UI.WebControls.TableCell>.</xref:System.Web.UI.WebControls.TableCell>      > [!CAUTION] > Testo il controllo può essere utilizzato per visualizzare l&quot;input dell&quot;utente che può includere uno script client dannoso. Verificare tutte le informazioni inviate da un client per uno script eseguibile, istruzioni SQL o altro codice prima di visualizzarlo nell&quot;applicazione. ASP.NET fornisce una funzionalità di convalida richiesta di input per bloccare script e HTML nell&quot;input dell&quot;utente. Controlli server di convalida vengono inoltre forniti per valutare l&quot;input dell&quot;utente. Per ulteriori informazioni, vedere [protezione dei controlli Standard](~/add/includes/ajax-current-ext-md.md), [come: protezione dagli attacchi tramite Script in un&quot;applicazione Web da applicare la codifica HTML alle stringhe](~/add/includes/ajax-current-ext-md.md), e [convalida dell&quot;Input utente in ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).       Il valore di questa proprietà, se impostato, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per ulteriori informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute>e [globalizzazione e localizzazione](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to create a new instance of a <xref:System.Web.UI.WebControls.TableCell> control programmatically. In particular, note how the Text property is used for setting the contents of the <xref:System.Web.UI.WebControls.TableCell> control.  \n  \n This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.TableCell> class.  \n  \n [!code-cs[TableCell#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_47_1.aspx)]\n [!code-vb[TableCell#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_47_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "Il contenuto di testo della cella. Il valore predefinito è &lt;xref:System.String?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.TableCell.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.VerticalAlign
  id: VerticalAlign
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: VerticalAlign
  nameWithType: TableCell.VerticalAlign
  fullName: System.Web.UI.WebControls.TableCell.VerticalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta l&quot;allineamento verticale del contenuto della cella."
  remarks: "Utilizzare la proprietà VerticalAlign per specificare l&quot;allineamento verticale del contenuto della cella. Vengono specificati i valori possibili per l&quot;utilizzo nel <xref:System.Web.UI.WebControls.VerticalAlign>enumerazione.</xref:System.Web.UI.WebControls.VerticalAlign>"
  syntax:
    content: public virtual System.Web.UI.WebControls.VerticalAlign VerticalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.VerticalAlign
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.VerticalAlign&quot;> </xref> valori di enumerazione. Il valore predefinito è <xref uid=&quot;langword_csharp_NotSet&quot; name=&quot;NotSet&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TableCell.VerticalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TableCell.Wrap
  id: Wrap
  parent: System.Web.UI.WebControls.TableCell
  langs:
  - csharp
  name: Wrap
  nameWithType: TableCell.Wrap
  fullName: System.Web.UI.WebControls.TableCell.Wrap
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il contenuto della cella va a capo."
  remarks: "Utilizzare la proprietà di incapsulamento per specificare o per determinare se il contenuto della cella va a capo nella cella."
  syntax:
    content: public virtual bool Wrap { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il contenuto della cella va a capo nella cella. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TableCell.Wrap*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.WebControls.WebControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.TableCell.#ctor
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: TableCell()
  nameWithType: TableCell.TableCell()
  fullName: System.Web.UI.WebControls.TableCell.TableCell()
- uid: System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: TableCell.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TableCell.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: TableCell.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.TableCell.AddParsedSubObject(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: AssociatedHeaderCellID
  nameWithType: TableCell.AssociatedHeaderCellID
  fullName: System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TableCell.ColumnSpan
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: ColumnSpan
  nameWithType: TableCell.ColumnSpan
  fullName: System.Web.UI.WebControls.TableCell.ColumnSpan
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TableCell.CreateControlStyle
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: CreateControlStyle()
  nameWithType: TableCell.CreateControlStyle()
  fullName: System.Web.UI.WebControls.TableCell.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.TableCell.HorizontalAlign
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: HorizontalAlign
  nameWithType: TableCell.HorizontalAlign
  fullName: System.Web.UI.WebControls.TableCell.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.TableCell.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: TableCell.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TableCell.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TableCell.RowSpan
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: RowSpan
  nameWithType: TableCell.RowSpan
  fullName: System.Web.UI.WebControls.TableCell.RowSpan
- uid: System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: TableCell.SupportsDisabledAttribute
  fullName: System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TableCell.Text
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: Text
  nameWithType: TableCell.Text
  fullName: System.Web.UI.WebControls.TableCell.Text
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TableCell.VerticalAlign
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: VerticalAlign
  nameWithType: TableCell.VerticalAlign
  fullName: System.Web.UI.WebControls.TableCell.VerticalAlign
- uid: System.Web.UI.WebControls.VerticalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: VerticalAlign
  nameWithType: VerticalAlign
  fullName: System.Web.UI.WebControls.VerticalAlign
- uid: System.Web.UI.WebControls.TableCell.Wrap
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: Wrap
  nameWithType: TableCell.Wrap
  fullName: System.Web.UI.WebControls.TableCell.Wrap
- uid: System.Web.UI.WebControls.TableCell.#ctor*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: TableCell
  nameWithType: TableCell.TableCell
- uid: System.Web.UI.WebControls.TableCell.AddAttributesToRender*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: AddAttributesToRender
  nameWithType: TableCell.AddAttributesToRender
- uid: System.Web.UI.WebControls.TableCell.AddParsedSubObject*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: AddParsedSubObject
  nameWithType: TableCell.AddParsedSubObject
- uid: System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: AssociatedHeaderCellID
  nameWithType: TableCell.AssociatedHeaderCellID
- uid: System.Web.UI.WebControls.TableCell.ColumnSpan*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: ColumnSpan
  nameWithType: TableCell.ColumnSpan
- uid: System.Web.UI.WebControls.TableCell.CreateControlStyle*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: CreateControlStyle
  nameWithType: TableCell.CreateControlStyle
- uid: System.Web.UI.WebControls.TableCell.HorizontalAlign*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: HorizontalAlign
  nameWithType: TableCell.HorizontalAlign
- uid: System.Web.UI.WebControls.TableCell.RenderContents*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: RenderContents
  nameWithType: TableCell.RenderContents
- uid: System.Web.UI.WebControls.TableCell.RowSpan*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: RowSpan
  nameWithType: TableCell.RowSpan
- uid: System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: TableCell.SupportsDisabledAttribute
- uid: System.Web.UI.WebControls.TableCell.Text*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: Text
  nameWithType: TableCell.Text
- uid: System.Web.UI.WebControls.TableCell.VerticalAlign*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: VerticalAlign
  nameWithType: TableCell.VerticalAlign
- uid: System.Web.UI.WebControls.TableCell.Wrap*
  parent: System.Web.UI.WebControls.TableCell
  isExternal: false
  name: Wrap
  nameWithType: TableCell.Wrap
