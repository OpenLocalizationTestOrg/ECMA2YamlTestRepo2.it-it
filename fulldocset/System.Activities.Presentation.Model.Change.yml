### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.Change
  id: Change
  children:
  - System.Activities.Presentation.Model.Change.#ctor
  - System.Activities.Presentation.Model.Change.Apply
  - System.Activities.Presentation.Model.Change.Description
  - System.Activities.Presentation.Model.Change.GetInverse
  langs:
  - csharp
  name: Change
  nameWithType: Change
  fullName: System.Activities.Presentation.Model.Change
  type: Class
  summary: "Classe astratta che, quando implementata, descrive una modifica all&quot;albero del modello."
  remarks: "Questa classe viene utilizzata dall&quot;infrastruttura di annullamento/ripristino per tenere traccia delle modifiche apportate durante un episodio di modifica."
  syntax:
    content: public abstract class Change
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.Change.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.Change
  langs:
  - csharp
  name: Change()
  nameWithType: Change.Change()
  fullName: System.Activities.Presentation.Model.Change.Change()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Crea una nuova istanza di <xref href=&quot;System.Activities.Presentation.Model.Change&quot;> </xref> classe."
  syntax:
    content: protected Change ();
    parameters: []
  overload: System.Activities.Presentation.Model.Change.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.Change.Apply
  id: Apply
  parent: System.Activities.Presentation.Model.Change
  langs:
  - csharp
  name: Apply()
  nameWithType: Change.Apply()
  fullName: System.Activities.Presentation.Model.Change.Apply()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Quando viene implementato in una classe derivata, applica la modifica all&quot;istanza corrente."
  syntax:
    content: public abstract bool Apply ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la modifica Ã¨ stata applicata per l&quot;istanza corrente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.Change.Apply*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.Change.Description
  id: Description
  parent: System.Activities.Presentation.Model.Change
  langs:
  - csharp
  name: Description
  nameWithType: Change.Description
  fullName: System.Activities.Presentation.Model.Change.Description
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Quando viene implementato in una classe derivata, ottiene una descrizione della modifica."
  syntax:
    content: public abstract string Description { get; }
    return:
      type: System.String
      description: "Restituisce un <xref:System.String>che contiene una descrizione della modifica.</xref:System.String>"
  overload: System.Activities.Presentation.Model.Change.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.Change.GetInverse
  id: GetInverse
  parent: System.Activities.Presentation.Model.Change
  langs:
  - csharp
  name: GetInverse()
  nameWithType: Change.GetInverse()
  fullName: System.Activities.Presentation.Model.Change.GetInverse()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Quando viene implementato in una classe derivata, recupera l&quot;inverso della modifica."
  syntax:
    content: public abstract System.Activities.Presentation.Model.Change GetInverse ();
    parameters: []
    return:
      type: System.Activities.Presentation.Model.Change
      description: "Restituisce un <xref href=&quot;System.Activities.Presentation.Model.Change&quot;> </xref> che contiene l&quot;operazione inversa dell&quot;istanza corrente."
  overload: System.Activities.Presentation.Model.Change.GetInverse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Model.Change.#ctor
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: Change()
  nameWithType: Change.Change()
  fullName: System.Activities.Presentation.Model.Change.Change()
- uid: System.Activities.Presentation.Model.Change.Apply
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: Apply()
  nameWithType: Change.Apply()
  fullName: System.Activities.Presentation.Model.Change.Apply()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.Change.Description
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: Description
  nameWithType: Change.Description
  fullName: System.Activities.Presentation.Model.Change.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Model.Change.GetInverse
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: GetInverse()
  nameWithType: Change.GetInverse()
  fullName: System.Activities.Presentation.Model.Change.GetInverse()
- uid: System.Activities.Presentation.Model.Change
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: Change
  nameWithType: Change
  fullName: System.Activities.Presentation.Model.Change
- uid: System.Activities.Presentation.Model.Change.#ctor*
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: Change
  nameWithType: Change.Change
- uid: System.Activities.Presentation.Model.Change.Apply*
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: Apply
  nameWithType: Change.Apply
- uid: System.Activities.Presentation.Model.Change.Description*
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: Description
  nameWithType: Change.Description
- uid: System.Activities.Presentation.Model.Change.GetInverse*
  parent: System.Activities.Presentation.Model.Change
  isExternal: false
  name: GetInverse
  nameWithType: Change.GetInverse
