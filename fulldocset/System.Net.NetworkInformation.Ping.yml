### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.Ping
  id: Ping
  children:
  - System.Net.NetworkInformation.Ping.#ctor
  - System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  - System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  - System.Net.NetworkInformation.Ping.PingCompleted
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.Send(System.String)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsyncCancel
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  langs:
  - csharp
  name: Ping
  nameWithType: Ping
  fullName: System.Net.NetworkInformation.Ping
  type: Class
  summary: "Consente a un&quot;applicazione determinare se un computer remoto sia accessibile in rete."
  remarks: "Applicazioni di utilizzano la classe di Ping per determinare se un computer remoto è raggiungibile.       Topologia di rete è possibile determinare se il comando Ping in grado di contattare un host remoto. Presenza e la configurazione del proxy, apparecchiature translation (NAT) indirizzo di rete o firewall può impedire i Ping di. Un comando Ping riuscito indica solo che l&quot;host remoto sia raggiungibile in rete. non è garantita la presenza di servizi di livello superiore (ad esempio un server Web) nell&quot;host remoto.       Questa classe fornisce funzionalità simili per lo strumento da riga di comando Ping.exe. Il <xref:System.Net.NetworkInformation.Ping.Send%2A>e <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodi inviano un messaggio di richiesta echo Internet controllo Message Protocol (ICMP) da un computer remoto e attende un messaggio di risposta echo ICMP da tale computer.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Per una descrizione dettagliata delle ICMP, vedere il documento RFC 792, disponibile all&quot;indirizzo [http://www.ietf.org](http://www.ietf.org/).       I tipi seguenti vengono utilizzati con la classe di Ping e sono descritte dettagliatamente di seguito.      | **Nome del tipo**|**descrizione**|   |-------------------|---------------------|   | <xref:System.Net.NetworkInformation.IPStatus>| Definisce i codici di stato che descrivono il risultato di un messaggio di richiesta echo ICMP. |   | <xref:System.Net.NetworkInformation.PingOptions>| Consente di configurare o recuperare le impostazioni che controllano il numero di volte possibile inoltrare il pacchetto di richiesta (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>), e se possono essere frammentati (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ). |   | <xref:System.Net.NetworkInformation.PingReply>| Contiene i risultati di una richiesta echo ICMP. |   | <xref:System.Net.NetworkInformation.PingException>| Generata quando si verifica un errore irreversibile. |   | <xref:System.Net.NetworkInformation.PingCompletedEventArgs>| Contiene i dati associati agli eventi <xref:System.Net.NetworkInformation.Ping.PingCompleted>, che vengono generati quando una chiamata <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>completata o annullata. |   | <xref:System.Net.NetworkInformation.PingCompletedEventHandler>| Il delegato che fornisce il metodo di callback richiamato quando una chiamata <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>completata o annullata. |       Il <xref:System.Net.NetworkInformation.Ping.Send%2A>e <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodi restituiscono la risposta in un <xref:System.Net.NetworkInformation.PingReply>oggetto.</xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingException> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.PingOptions> </xref:System.Net.NetworkInformation.IPStatus> La <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>proprietà restituisce un <xref:System.Net.NetworkInformation.IPStatus>valore per indicare il risultato della richiesta.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>       Quando si invia la richiesta, è necessario specificare il computer remoto. È possibile farlo, fornendo di stringa del nome di un indirizzo IP in formato stringa, un host o un <xref:System.Net.IPAddress>oggetto.</xref:System.Net.IPAddress>       È inoltre possibile specificare uno dei tipi di informazioni seguenti:-i dati da associare alla richiesta. Specifica di `buffer` , è possibile conoscere la quantità di tempo necessario per un pacchetto di una determinata dimensione di trasmessi da e verso l&quot;host remoto e l&quot;unità massima di trasmissione del percorso di rete. (Vedere il <xref:System.Net.NetworkInformation.Ping.Send%2A>o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>gli overload che accettano un `buffer` parametro.)      -Se il pacchetto Echo ICMP possa essere frammentato in transito.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> (Vedere la proprietà <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>e il <xref:System.Net.NetworkInformation.Ping.Send%2A>o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>gli overload che accettano un `options` parametro.)      -Il numero di volte nodi di routing, ad esempio router o un gateway per inoltrare il pacchetto prima che raggiunga il computer di destinazione o viene eliminato.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> (Vedere <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>e il <xref:System.Net.NetworkInformation.Ping.Send%2A>o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>gli overload che accettano un `options` parametro.)      -Il limite di tempo entro il quale deve essere ricevuta la risposta.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> (Vedere il <xref:System.Net.NetworkInformation.Ping.Send%2A>o <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overload che accettano un `timeout` parametro.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>       La classe Ping offre metodi sincroni e asincroni per l&quot;invio della richiesta. Se l&quot;applicazione si blocchi durante l&quot;attesa di una risposta, utilizzare il <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi; questi metodi sono sincroni.</xref:System.Net.NetworkInformation.Ping.Send%2A> Se l&quot;applicazione non deve bloccare, utilizzare asincrona <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodi.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>viene eseguita nel proprio thread allocato automaticamente dal pool di thread.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Al termine dell&quot;operazione asincrona, genera il <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Le applicazioni utilizzano un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per specificare il metodo che viene chiamato per <xref:System.Net.NetworkInformation.Ping.PingCompleted>eventi.</xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> È necessario aggiungere un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per l&quot;evento prima di chiamare <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Il metodo del delegato riceve un <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto che contiene un <xref:System.Net.NetworkInformation.PingReply>oggetto che descrive il risultato del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs>       È possibile utilizzare la stessa istanza della classe Ping per generare più richieste Echo ICMP contemporaneamente. Chiamata <xref:System.Net.NetworkInformation.Ping.Send%2A>durante una <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamata è in corso o chiamata <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>più volte prima di tutte le chiamate precedenti completamento comporta un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>"
  example:
  - "The following code example demonstrates using the Ping class synchronously.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_1.cpp)]  \n  \n The following code example demonstrates using the Ping class asynchronously.  \n  \n [!code-cpp[NCLPingASync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_2.cpp)]\n [!code-cs[NCLPingASync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_2.cs)]"
  syntax:
    content: 'public class Ping : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/m-system.net.networkinfo_4_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/m-system.net.networkinfo_4_1.cs)]"
  syntax:
    content: public Ping ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> dell&quot;oggetto e, facoltativamente, Elimina le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico `Dispose()` (metodo) e <xref:System.ComponentModel.Component.Finalize%2A>metodo.</xref:System.ComponentModel.Component.Finalize%2A> Pubblico `Dispose()` metodo richiama il metodo Dispose protetto con la `disposing` parametro impostato su `true`. <xref:System.ComponentModel.Component.Finalize%2A>richiama `Dispose` con `disposing` impostato su `false`.</xref:System.ComponentModel.Component.Finalize%2A>       Quando la `disposing` parametro `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.Net.NetworkInformation.Ping>i riferimenti all&quot;oggetto.</xref:System.Net.NetworkInformation.Ping> Questo metodo richiama il `Dispose()` metodo di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.Net.NetworkInformation.Ping.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  id: OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Genera il <xref href=&quot;System.Net.NetworkInformation.Ping.PingCompleted&quot;> </xref> evento."
  remarks: "Le classi che ereditano dal <xref:System.Net.NetworkInformation.Ping>può eseguire l&quot;override di questo metodo per eseguire attività aggiuntive, ad esempio la registrazione dei dati contenuti nella classe di `e` parametro.</xref:System.Net.NetworkInformation.Ping>       Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: generazione di un evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Il metodo OnPingCompleted consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.NetworkInformation.PingCompletedEventArgs
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingCompletedEventArgs&quot;> </xref> oggetto che contiene dati dell&quot;evento."
  overload: System.Net.NetworkInformation.Ping.OnPingCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  id: PingCompleted
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Si verifica quando un&quot;operazione asincrona per inviare un messaggio echo Internet controllo Message Protocol (ICMP) e ricevere il messaggio di risposta echo ICMP corrispondente è completata o annullata."
  remarks: "Le applicazioni utilizzano l&quot;evento PingCompleted per ottenere informazioni sullo stato di completamento e i dati raccolti da una chiamata a uno del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodi.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Il <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato fornisce il metodo di callback richiamato quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>generato l&quot;evento.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler>"
  example:
  - "The following code example demonstrates specifying a callback method for the PingCompleted event. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/e-system.net.networkinfo_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/e-system.net.networkinfo_1.cs)]"
  syntax:
    content: public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;
    return:
      type: System.Net.NetworkInformation.PingCompletedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  id: Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tenta di inviare un messaggio echo messaggio protocollo ICMP (Internet Control) al computer in cui è stato specificato <xref:System.Net.IPAddress>e riceve un messaggio di risposta echo ICMP corrispondente da quel computer.</xref:System.Net.IPAddress>"
  remarks: "Questo metodo invia all&quot;host specificato da `address` un 32 <xref:System.Byte>buffer dei dati con il messaggio echo ICMP.</xref:System.Byte> Il metodo attende cinque secondi per un messaggio di risposta echo ICMP. Se non riceve una risposta in quel momento, il metodo restituisce e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Questo overload utilizza le impostazioni predefinite per la frammentazione e l&quot;inoltro dei pacchetti. Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti. Per evitare la frammentazione, usare uno del <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato. Per modificare questa impostazione, utilizzare un <xref:System.Net.NetworkInformation.Ping.Send%2A>overload che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà sul valore desiderato.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#3](~/add/codesnippet/csharp/m-system.net.networkinfo_5_1.cs)]\n [!code-cpp[NCLPingSampler#3](~/add/codesnippet/cpp/m-system.net.networkinfo_5_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Un <xref:System.Net.IPAddress>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.Net.IPAddress>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> oggetto che fornisce informazioni sul messaggio di risposta echo ICMP, se è stato ricevuto o descrive il motivo dell&quot;errore, se è stato ricevuto alcun messaggio."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  id: Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tenta di inviare un messaggio di echo messaggio protocollo ICMP (Internet Control) per il computer specificato e ricevere ICMP corrispondente echo messaggio di risposta da tale computer."
  remarks: "Questo metodo invia un 32 <xref:System.Byte>buffer dei dati con il messaggio echo ICMP.</xref:System.Byte> Il metodo attende cinque secondi per un messaggio di risposta echo ICMP. Se non riceve una risposta in quel momento, il metodo restituisce e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Questo overload utilizza le impostazioni predefinite per la frammentazione e l&quot;inoltro dei pacchetti. Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti. Per evitare la frammentazione, usare uno del <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato. Per modificare questa impostazione, utilizzare un <xref:System.Net.NetworkInformation.Ping.Send%2A>overload che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà sul valore desiderato.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#2](~/add/codesnippet/csharp/m-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NCLPingSampler#2](~/add/codesnippet/cpp/m-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Oggetto <xref:System.String>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.String> Il valore specificato per questo parametro può essere un nome host o rappresentazione di stringa di un indirizzo IP."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> oggetto che fornisce informazioni sul messaggio di risposta echo ICMP, se è stato ricevuto o fornisce il motivo dell&quot;errore, se è stato ricevuto alcun messaggio."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o è una stringa vuota (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  id: Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tenta di inviare un messaggio echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer in cui è stato specificato <xref:System.Net.IPAddress>e riceve un messaggio di risposta echo ICMP corrispondente da quel computer.</xref:System.Net.IPAddress> Questo metodo consente di specificare un valore di timeout per l&quot;operazione."
  remarks: "Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato nel `timeout` parametro, l&quot;ha esito negativo echo ICMP e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Quando si specificano numeri molto piccoli per `timeout`, è possibile ricevere la risposta Ping anche se `timeout` millisecondi trascorsi.       Questo overload utilizza le impostazioni predefinite per la frammentazione e l&quot;inoltro dei pacchetti. Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti. Per evitare la frammentazione, usare uno del <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Il pacchetto o i frammenti di pacchetto possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato. Per modificare questa impostazione, utilizzare un <xref:System.Net.NetworkInformation.Ping.Send%2A>overload che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà sul valore desiderato.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Un <xref:System.Net.IPAddress>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> oggetto che fornisce informazioni sul messaggio di risposta echo ICMP, se è stato ricevuto o fornisce il motivo dell&quot;errore, se è stato ricevuto alcun messaggio."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  id: Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tenta di inviare un messaggio di echo messaggio protocollo ICMP (Internet Control) per il computer specificato e ricevere ICMP corrispondente echo messaggio di risposta da tale computer. Questo metodo consente di specificare un valore di timeout per l&quot;operazione."
  remarks: "Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato nel `timeout` parametro, l&quot;ha esito negativo echo ICMP e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Quando si specificano numeri molto piccoli per `timeout`, è possibile ricevere la risposta Ping anche se `timeout` millisecondi trascorsi.       Questo overload utilizza le impostazioni predefinite per la frammentazione e l&quot;inoltro dei pacchetti. Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti. Per evitare la frammentazione, usare uno del <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato. Per modificare questa impostazione, utilizzare un <xref:System.Net.NetworkInformation.Ping.Send%2A>overload che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà sul valore desiderato.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Oggetto <xref:System.String>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.String> Il valore specificato per questo parametro può essere un nome host o rappresentazione di stringa di un indirizzo IP."
    - id: timeout
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> oggetto che fornisce informazioni sul messaggio di risposta echo ICMP, se è stato ricevuto o fornisce il motivo dell&quot;errore, se è stato ricevuto alcun messaggio."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o è una stringa vuota (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tenta di inviare un messaggio echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer in cui è stato specificato <xref:System.Net.IPAddress>e riceve un messaggio di risposta echo ICMP corrispondente da quel computer.</xref:System.Net.IPAddress> Questo overload consente di specificare un valore di timeout per l&quot;operazione."
  remarks: "Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato nel `timeout` parametro, l&quot;ha esito negativo echo ICMP e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Quando si specificano numeri molto piccoli per `timeout`, è possibile ricevere la risposta Ping anche se `timeout` millisecondi trascorsi.       Questo overload utilizza le impostazioni predefinite per la frammentazione e l&quot;inoltro dei pacchetti. Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti. Per evitare la frammentazione, usare uno del <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Il pacchetto o i frammenti di pacchetto possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato. Per modificare questa impostazione, utilizzare un <xref:System.Net.NetworkInformation.Ping.Send%2A>overload che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà sul valore desiderato.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#6](~/add/codesnippet/csharp/b44ef8f6-ad7e-49c2-8af4-_1.cs)]\n [!code-cpp[NCLPingSampler#6](~/add/codesnippet/cpp/b44ef8f6-ad7e-49c2-8af4-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Un <xref:System.Net.IPAddress>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che contiene dati per essere inviato con il messaggio echo ICMP e restituito nel messaggio di risposta echo ICMP.</xref:System.Byte> La matrice non può contenere più di 65.500 byte."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> oggetto che fornisce informazioni sul messaggio di risposta echo ICMP, se è stato ricevuto o fornisce il motivo dell&quot;errore, se è stato ricevuto alcun messaggio. Il metodo restituirà <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> se il pacchetto supera l&quot;unità massima di trasmissione (MTU)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Le dimensioni di <code> buffer </code> supera i 65500 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - oppure - <code>buffer</code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o <code>buffer</code> dimensione è maggiore i 65500 byte."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  id: Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tenta di inviare un messaggio di echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer specificato e ricevere ICMP corrispondente echo messaggio di risposta da tale computer. Questo overload consente di specificare un valore di timeout per l&quot;operazione."
  remarks: "Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato nel `timeout` parametro, l&quot;ha esito negativo echo ICMP e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Quando si specificano numeri molto piccoli per `timeout`, è possibile ricevere la risposta Ping anche se `timeout` millisecondi trascorsi.       Questo overload utilizza le impostazioni predefinite per la frammentazione e l&quot;inoltro dei pacchetti. Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti. Per evitare la frammentazione, usare uno del <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Il pacchetto o i frammenti di pacchetto possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato. Per modificare questa impostazione, utilizzare un <xref:System.Net.NetworkInformation.Ping.Send%2A>overload che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà sul valore desiderato.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Oggetto <xref:System.String>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.String> Il valore specificato per questo parametro può essere un nome host o rappresentazione di stringa di un indirizzo IP."
    - id: timeout
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che contiene dati per essere inviato con il messaggio echo ICMP e restituito nel messaggio di risposta echo ICMP.</xref:System.Byte> La matrice non può contenere più di 65.500 byte."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> oggetto che fornisce informazioni sul messaggio di risposta echo ICMP, se è stato ricevuto o fornisce il motivo dell&quot;errore, se è stato ricevuto alcun messaggio."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Le dimensioni di <code> buffer </code> supera i 65500 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o è una stringa vuota (&quot;&quot;).       - oppure - <code>buffer</code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o <code>buffer</code> dimensione è maggiore i 65500 byte."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tenta di inviare un messaggio echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer in cui è stato specificato <xref:System.Net.IPAddress>e riceve un messaggio di risposta echo ICMP corrispondente da quel computer.</xref:System.Net.IPAddress> Questo overload consente di specificare un valore di timeout per l&quot;operazione e controllare la frammentazione e i valori Time-to-Live per il pacchetto del messaggio echo ICMP."
  remarks: "Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il `timeout` parametro, l&quot;ha esito negativo echo ICMP e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Quando si specificano numeri molto piccoli per `timeout`, è possibile ricevere la risposta Ping anche se `timeout` millisecondi trascorsi.       Se il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Utilizzare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà per specificare il numero massimo di volte in cui può essere inoltrato prima di raggiungere la destinazione del messaggio echo ICMP.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#5](~/add/codesnippet/csharp/81445dc1-adbd-44fc-b79c-_1.cs)]\n [!code-cpp[NCLPingSampler#5](~/add/codesnippet/cpp/81445dc1-adbd-44fc-b79c-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Un <xref:System.Net.IPAddress>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che contiene dati per essere inviato con il messaggio echo ICMP e restituito nel messaggio di risposta echo ICMP.</xref:System.Byte> La matrice non può contenere più di 65.500 byte."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> oggetto utilizzato per controllare la frammentazione e i valori Time-to-Live per il pacchetto del messaggio echo ICMP."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> oggetto che fornisce informazioni sul messaggio di risposta echo ICMP, se è stato ricevuto o fornisce il motivo dell&quot;errore, se è stato ricevuto alcun messaggio. Il metodo restituirà <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> se il pacchetto supera l&quot;unità massima di trasmissione (MTU)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Le dimensioni di <code> buffer </code> supera i 65500 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - oppure - <code>buffer</code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o <code>buffer</code> dimensione è maggiore i 65500 byte."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Tenta di inviare un messaggio di echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer specificato e ricevere ICMP corrispondente echo messaggio di risposta da tale computer. Questo overload consente di specificare un valore di timeout per l&quot;operazione e controllare la frammentazione e i valori Time-to-Live per il pacchetto ICMP."
  remarks: "Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il `timeout` parametro, l&quot;ha esito negativo echo ICMP e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Quando si specificano numeri molto piccoli per `timeout`, è possibile ricevere la risposta Ping anche se `timeout` millisecondi trascorsi.       Se il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Utilizzare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà per specificare il numero massimo di volte in cui può essere inoltrato prima di raggiungere la destinazione del messaggio echo ICMP.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#4](~/add/codesnippet/csharp/ce144ae4-a1a7-44f3-ac8a-_1.cs)]\n [!code-cpp[NCLPingSampler#4](~/add/codesnippet/cpp/ce144ae4-a1a7-44f3-ac8a-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Oggetto <xref:System.String>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.String> Il valore specificato per questo parametro può essere un nome host o rappresentazione di stringa di un indirizzo IP."
    - id: timeout
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che contiene dati per essere inviato con il messaggio echo ICMP e restituito nel messaggio di risposta echo ICMP.</xref:System.Byte> La matrice non può contenere più di 65.500 byte."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> oggetto utilizzato per controllare la frammentazione e i valori Time-to-Live per il pacchetto del messaggio echo ICMP."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> oggetto che fornisce informazioni sul messaggio di risposta echo ICMP, se è stato ricevuto o fornisce il motivo dell&quot;errore, se è stato ricevuto alcun messaggio."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Le dimensioni di <code> buffer </code> supera i 65500 byte."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o è una stringa di lunghezza zero.       - oppure - <code>buffer</code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o <code>buffer</code> dimensione è maggiore i 65500 byte."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "In modo asincrono tenta di inviare un messaggio echo messaggio protocollo ICMP (Internet Control) al computer in cui è stato specificato <xref:System.Net.IPAddress>e riceve un messaggio di risposta echo ICMP corrispondente da quel computer.</xref:System.Net.IPAddress>"
  remarks: "Il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo invia il messaggio echo in modo asincrono e, quando il completamento dell&quot;operazione (con esito positivo o negativo), restituisce lo stato dell&quot;applicazione.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Chiamare il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo quando l&quot;applicazione non deve bloccare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ogni chiamata a questo metodo viene eseguito in un thread separato viene allocato automaticamente dal pool di thread. Al termine dell&quot;operazione asincrona, genera il <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Per specificare il metodo da chiamata quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Genera l&quot;evento, è necessario aggiungere un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per l&quot;evento prima di chiamare <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Il metodo del delegato riceve un <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto che contiene un <xref:System.Net.NetworkInformation.PingReply>oggetto che descrive il risultato del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Il <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto eredita le <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>proprietà.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Questa proprietà contiene il `userToken` oggetto passato il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Se l&quot;applicazione si blocchi durante l&quot;attesa di una risposta, utilizzare uno del <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi; questi metodi sono sincroni.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Questo metodo invia un 32 <xref:System.Byte>buffer dei dati con il messaggio echo ICMP.</xref:System.Byte> Il metodo attende cinque secondi per un messaggio di risposta echo ICMP. Se non riceve una risposta in quel momento, il metodo restituisce e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Questo overload utilizza le impostazioni predefinite per la frammentazione e l&quot;inoltro dei pacchetti. Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti. Per evitare la frammentazione, usare uno del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodi che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Il pacchetto o i frammenti di pacchetto possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato. Per modificare questa impostazione, utilizzare un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overload che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà sul valore desiderato.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Un <xref:System.Net.IPAddress>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.Net.IPAddress>"
    - id: userToken
      type: System.Object
      description: "Oggetto che viene passato al metodo richiamato al completamento dell&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata alla <xref:System.Net.NetworkInformation.Ping.SendAsync*>metodo è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> non è un indirizzo IP valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  id: SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "In modo asincrono tenta di inviare un messaggio di echo messaggio protocollo ICMP (Internet Control) per il computer specificato e riceve un messaggio di risposta echo ICMP corrispondente da quel computer."
  remarks: "Il metodo SendAsync invia il messaggio echo in modo asincrono e, quando il completamento dell&quot;operazione (con esito positivo o negativo), restituisce lo stato dell&quot;applicazione. Chiamare il metodo SendAsync quando l&quot;applicazione non deve bloccare. Ogni chiamata a questo metodo viene eseguito in un thread separato viene allocato automaticamente dal pool di thread. Al termine dell&quot;operazione asincrona, genera il <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Per specificare il metodo da chiamata quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Genera l&quot;evento, è necessario aggiungere un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per l&quot;evento prima di chiamare <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Il metodo del delegato riceve un <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto che contiene un <xref:System.Net.NetworkInformation.PingReply>oggetto che descrive il risultato del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Il <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto eredita le <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>proprietà.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Questa proprietà contiene il `userToken` oggetto passato il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Se l&quot;applicazione si blocchi durante l&quot;attesa di una risposta, utilizzare il <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi; questi metodi sono sincroni.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Questo metodo invia un 32 <xref:System.Byte>buffer dei dati con il messaggio echo ICMP.</xref:System.Byte> Il metodo attende cinque secondi per un messaggio di risposta echo ICMP. Se non riceve una risposta che ora il metodo restituisce e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Questo overload utilizza le impostazioni predefinite per la frammentazione e l&quot;inoltro dei pacchetti. Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti. Per evitare la frammentazione, usare uno del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodi che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Il pacchetto o i frammenti di pacchetto possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato. Per modificare questa impostazione, utilizzare un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overload che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà sul valore desiderato.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Oggetto <xref:System.String>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.String> Il valore specificato per questo parametro può essere un nome host o rappresentazione di stringa di un indirizzo IP."
    - id: userToken
      type: System.Object
      description: "Oggetto che viene passato al metodo richiamato al completamento dell&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o è una stringa vuota (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata al metodo SendAsync è in corso."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>potrebbe non essere risolte in un indirizzo IP valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "In modo asincrono tenta di inviare un messaggio echo messaggio protocollo ICMP (Internet Control) al computer in cui è stato specificato <xref:System.Net.IPAddress>e riceve un messaggio di risposta echo ICMP corrispondente da quel computer.</xref:System.Net.IPAddress> Questo overload consente di specificare un valore di timeout per l&quot;operazione."
  remarks: "Il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo invia il messaggio Echo in modo asincrono e, quando il completamento dell&quot;operazione (con esito positivo o negativo), restituisce lo stato dell&quot;applicazione.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Chiamare il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo quando l&quot;applicazione non deve bloccare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ogni chiamata viene eseguita in un thread separato viene allocato automaticamente dal pool di thread. Al termine dell&quot;operazione asincrona, genera il <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Le applicazioni utilizzano un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per specificare il metodo da chiamata quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Genera l&quot;evento.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> È necessario aggiungere un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per l&quot;evento prima di chiamare <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Il metodo del delegato riceve un <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto che contiene un <xref:System.Net.NetworkInformation.PingReply>oggetto che descrive il risultato del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Il <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto eredita le <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>proprietà.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Questa proprietà contiene il `userToken` oggetto passato il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Se l&quot;applicazione si blocchi durante l&quot;attesa di una risposta, utilizzare il <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi; questi metodi sono sincroni.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il `timeout` parametro, l&quot;ha esito negativo echo ICMP e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Quando si specificano numeri molto piccoli per `timeout`, è possibile ricevere la risposta Ping anche se `timeout` millisecondi trascorsi.       Questo overload utilizza le impostazioni predefinite per la frammentazione e l&quot;inoltro dei pacchetti. Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti. Per evitare la frammentazione, usare uno del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodi che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato. Per modificare questa impostazione, utilizzare un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overload che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà sul valore desiderato.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Un <xref:System.Net.IPAddress>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "Oggetto che viene passato al metodo richiamato al completamento dell&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>metodo è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> non è un indirizzo IP valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  id: SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "In modo asincrono tenta di inviare un messaggio di echo messaggio protocollo ICMP (Internet Control) per il computer specificato e riceve un messaggio di risposta echo ICMP corrispondente da quel computer. Questo overload consente di specificare un valore di timeout per l&quot;operazione."
  remarks: "Il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo invia il messaggio Echo in modo asincrono e, quando il completamento dell&quot;operazione (con esito positivo o negativo), restituisce lo stato dell&quot;applicazione.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Chiamare il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo quando l&quot;applicazione non deve bloccare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ogni chiamata viene eseguita in un thread separato viene allocato automaticamente dal pool di thread. Al termine dell&quot;operazione asincrona, genera il <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Le applicazioni utilizzano un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per specificare il metodo da chiamata quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Genera l&quot;evento.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> È necessario aggiungere un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per l&quot;evento prima di chiamare <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Il metodo del delegato riceve un <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto che contiene un <xref:System.Net.NetworkInformation.PingReply>oggetto che descrive il risultato del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Il <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto eredita le <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>proprietà.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Questa proprietà contiene il `userToken` oggetto passato il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Se l&quot;applicazione si blocchi durante l&quot;attesa di una risposta, utilizzare il <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi; questi metodi sono sincroni.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il `timeout` parametro, l&quot;ha esito negativo echo ICMP e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Quando si specificano numeri molto piccoli per `timeout`, è possibile ricevere la risposta Ping anche se `timeout` millisecondi trascorsi.       Questo overload utilizza le impostazioni predefinite per la frammentazione e l&quot;inoltro dei pacchetti. Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti. Per evitare la frammentazione, usare uno del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodi che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato. Per modificare questa impostazione, utilizzare un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overload che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà sul valore desiderato.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Oggetto <xref:System.String>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.String> Il valore specificato per questo parametro può essere un nome host o rappresentazione di stringa di un indirizzo IP."
    - id: timeout
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "Oggetto che viene passato al metodo richiamato al completamento dell&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o è una stringa vuota (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>potrebbe non essere risolte in un indirizzo IP valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "In modo asincrono tenta di inviare un messaggio echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer in cui è stato specificato <xref:System.Net.IPAddress>e riceve un messaggio di risposta echo ICMP corrispondente da quel computer.</xref:System.Net.IPAddress> Questo overload consente di specificare un valore di timeout per l&quot;operazione."
  remarks: "Questo metodo invia il messaggio echo in modo asincrono e, quando il completamento dell&quot;operazione (con esito positivo o negativo), restituisce lo stato dell&quot;applicazione. Chiamare il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo quando l&quot;applicazione non deve bloccare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ogni chiamata viene eseguita in un thread separato viene allocato automaticamente dal pool di thread. Al termine dell&quot;operazione asincrona, genera il <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Per specificare il metodo da chiamata quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Genera l&quot;evento, è necessario aggiungere un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per l&quot;evento prima di chiamare <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Il metodo del delegato riceve un <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto che contiene un <xref:System.Net.NetworkInformation.PingReply>oggetto che descrive il risultato del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Il <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto eredita le <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>proprietà.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Questa proprietà contiene il `userToken` oggetto passato il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Se l&quot;applicazione si blocca durante l&quot;attesa di una risposta, utilizzare il <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi; questi metodi sono sincroni.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il `timeout` parametro, l&quot;ha esito negativo echo ICMP e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Quando si specificano numeri molto piccoli per `timeout`, è possibile ricevere la risposta Ping anche se `timeout` millisecondi trascorsi.       Questo overload utilizza le impostazioni predefinite per la frammentazione e l&quot;inoltro dei pacchetti. Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti. Per evitare la frammentazione, usare uno del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodi che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato. Per modificare questa impostazione, utilizzare un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overload che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà sul valore desiderato.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Un <xref:System.Net.IPAddress>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che contiene dati per essere inviato con il messaggio echo ICMP e restituito nel messaggio di risposta echo ICMP.</xref:System.Byte> La matrice non può contenere più di 65.500 byte."
    - id: userToken
      type: System.Object
      description: "Oggetto che viene passato al metodo richiamato al completamento dell&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> non è un indirizzo IP valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Le dimensioni di <code> buffer </code> supera i 65500 byte."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "In modo asincrono tenta di inviare un messaggio di echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer specificato e riceve un messaggio di risposta echo ICMP corrispondente da quel computer. Questo overload consente di specificare un valore di timeout per l&quot;operazione."
  remarks: "Il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo invia il messaggio Echo in modo asincrono e, quando il completamento dell&quot;operazione (con esito positivo o negativo), restituisce lo stato dell&quot;applicazione.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Chiamare il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo quando l&quot;applicazione non deve bloccare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ogni chiamata viene eseguita in un thread separato viene allocato automaticamente dal pool di thread. Al termine dell&quot;operazione asincrona, genera il <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Le applicazioni utilizzano un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per specificare il metodo da chiamata quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Genera l&quot;evento.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> È necessario aggiungere un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per l&quot;evento prima di chiamare <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Il metodo del delegato riceve un <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto che contiene un <xref:System.Net.NetworkInformation.PingReply>oggetto che descrive il risultato del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Il <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto eredita le <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>proprietà.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Questa proprietà contiene il `userToken` oggetto passato il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Se l&quot;applicazione si blocchi durante l&quot;attesa di una risposta, utilizzare il <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi; questi metodi sono sincroni.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il `timeout` parametro, l&quot;ha esito negativo echo ICMP e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Quando si specificano numeri molto piccoli per `timeout`, è possibile ricevere la risposta Ping anche se `timeout` millisecondi trascorsi.       Questo overload utilizza le impostazioni predefinite per la frammentazione e l&quot;inoltro dei pacchetti. Il pacchetto che contiene il messaggio echo ICMP possa essere frammentato in transito se le dimensioni del pacchetto totale superano le dimensioni massime che possono essere trasmessi da uno dei nodi di routing tra i computer locali e remoti. Per evitare la frammentazione, usare uno del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodi che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Quando <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Il pacchetto o i frammenti di pacchetto (se frammentato) possono essere inoltrati dai nodi di routing 128 volte prima di essere eliminato. Per modificare questa impostazione, utilizzare un <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overload che accetta un `options` parametro, quindi impostare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà sul valore desiderato.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Oggetto <xref:System.String>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.String> Il valore specificato per questo parametro può essere un nome host o rappresentazione di stringa di un indirizzo IP."
    - id: timeout
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che contiene dati per essere inviato con il messaggio echo ICMP e restituito nel messaggio di risposta echo ICMP.</xref:System.Byte> La matrice non può contenere più di 65.500 byte."
    - id: userToken
      type: System.Object
      description: "Oggetto che viene passato al metodo richiamato al completamento dell&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o è una stringa vuota (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>potrebbe non essere risolte in un indirizzo IP valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Le dimensioni di <code> buffer </code> supera i 65500 byte."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "In modo asincrono tenta di inviare un messaggio echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer in cui è stato specificato <xref:System.Net.IPAddress>e riceve un messaggio di risposta echo ICMP corrispondente da quel computer.</xref:System.Net.IPAddress> Questo overload consente di specificare un valore di timeout per l&quot;operazione e controllare la frammentazione e i valori Time-to-Live per il pacchetto del messaggio echo ICMP."
  remarks: "Il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo invia il messaggio Echo in modo asincrono e, quando il completamento dell&quot;operazione (con esito positivo o negativo), restituisce lo stato dell&quot;applicazione.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Chiamare il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo quando l&quot;applicazione non è necessario bloccare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ogni chiamata viene eseguita in un thread separato viene allocato automaticamente dal pool di thread. Al termine dell&quot;operazione asincrona, genera il <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Le applicazioni utilizzano un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per specificare il metodo da chiamata quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Genera l&quot;evento.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> È necessario aggiungere un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per l&quot;evento prima di chiamare <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Il metodo del delegato riceve un <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto che contiene un <xref:System.Net.NetworkInformation.PingReply>oggetto che descrive il risultato del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Il <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto eredita le <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>proprietà.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Questa proprietà contiene il `userToken` oggetto passato il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Se l&quot;applicazione si blocca durante l&quot;attesa di una risposta, utilizzare il <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi; questi metodi sono sincroni.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il `timeout` parametro, l&quot;ha esito negativo echo ICMP e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Quando si specificano numeri molto piccoli per `timeout`, è possibile ricevere la risposta Ping anche se `timeout` millisecondi trascorsi.       Se il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Utilizzare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà per specificare il numero massimo di volte in cui può essere inoltrato prima di raggiungere la destinazione del messaggio echo ICMP.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method. For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.  \n  \n The following code example requires the following namespaces:  \n  \n [!code-cs[NCLPingSampler#0](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_1.cs)]\n [!code-cpp[NCLPingSampler#0](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_1.cpp)]  \n  \n The following code example sends an ICMP echo message asynchronously.  \n  \n [!code-cs[NCLPingSampler#7](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_2.cs)]\n [!code-cpp[NCLPingSampler#7](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_2.cpp)]"
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Un <xref:System.Net.IPAddress>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che contiene dati per essere inviato con il messaggio echo ICMP e restituito nel messaggio di risposta echo ICMP.</xref:System.Byte> La matrice non può contenere più di 65.500 byte."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> oggetto utilizzato per controllare la frammentazione e i valori Time-to-Live per il pacchetto del messaggio echo ICMP."
    - id: userToken
      type: System.Object
      description: "Oggetto che viene passato al metodo richiamato al completamento dell&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> non è un indirizzo IP valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Le dimensioni di <code> buffer </code> supera i 65500 byte."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "In modo asincrono tenta di inviare un messaggio di echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer specificato e riceve un messaggio di risposta echo ICMP corrispondente da quel computer. Questo overload consente di specificare un valore di timeout per l&quot;operazione e controllare la frammentazione e i valori Time-to-Live per il pacchetto ICMP."
  remarks: "Il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo invia il messaggio Echo in modo asincrono e, quando il completamento dell&quot;operazione (con esito positivo o negativo), restituisce lo stato dell&quot;applicazione.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Chiamare il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metodo quando l&quot;applicazione non è necessario bloccare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ogni chiamata viene eseguita in un thread separato viene allocato automaticamente dal pool di thread. Al termine dell&quot;operazione asincrona, genera il <xref:System.Net.NetworkInformation.Ping.PingCompleted>evento.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Le applicazioni utilizzano un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per specificare il metodo da chiamata quando <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Genera l&quot;evento.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> È necessario aggiungere un <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegato per l&quot;evento prima di chiamare <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Il metodo del delegato riceve un <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto che contiene un <xref:System.Net.NetworkInformation.PingReply>oggetto che descrive il risultato del <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Il <xref:System.Net.NetworkInformation.PingCompletedEventArgs>oggetto eredita le <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>proprietà.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Questa proprietà contiene il `userToken` oggetto passato il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>chiamare.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Se l&quot;applicazione si blocchi durante l&quot;attesa di una risposta, utilizzare il <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi; questi metodi sono sincroni.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Se il messaggio di risposta echo ICMP non viene ricevuto entro il tempo specificato per il `timeout` parametro, l&quot;ha esito negativo echo ICMP e la <xref:System.Net.NetworkInformation.PingReply.Status%2A>proprietà è impostata su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Quando si specificano numeri molto piccoli per `timeout`, è possibile ricevere la risposta Ping anche se `timeout` millisecondi trascorsi.       Se il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>proprietà `true` e le dimensioni totali del pacchetto superano le dimensioni massime che possono essere trasmessi tramite uno dei nodi di routing tra i computer locali e remoti, la richiesta echo ICMP non riesce.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Utilizzare il <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>proprietà per specificare il numero massimo di volte in cui può essere inoltrato prima di raggiungere la destinazione del messaggio echo ICMP.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Se il pacchetto non raggiunge la destinazione dopo essere stato inoltrato il numero di volte specificato, questo viene scartato e si verifica un errore di richiesta echo ICMP. In questo caso, <xref:System.Net.NetworkInformation.PingReply.Status%2A>è impostato su <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cpp[NCLPingAsync#1](~/add/codesnippet/cpp/56cfcaea-d9d5-4c26-9eea-_1.cpp)]\n [!code-cs[NCLPingAsync#1](~/add/codesnippet/csharp/56cfcaea-d9d5-4c26-9eea-_1.cs)]"
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Oggetto <xref:System.String>che identifica il computer che rappresenta la destinazione del messaggio echo ICMP.</xref:System.String> Il valore specificato per questo parametro può essere un nome host o rappresentazione di stringa di un indirizzo IP."
    - id: timeout
      type: System.Int32
      description: "Oggetto <xref:System.Byte>matrice che contiene dati per essere inviato con il messaggio echo ICMP e restituito nel messaggio di risposta echo ICMP.</xref:System.Byte> La matrice non può contenere più di 65.500 byte."
    - id: buffer
      type: System.Byte[]
      description: "Un <xref:System.Int32>valore che specifica il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP.</xref:System.Int32>"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> oggetto utilizzato per controllare la frammentazione e i valori Time-to-Live per il pacchetto del messaggio echo ICMP."
    - id: userToken
      type: System.Object
      description: "Oggetto che viene passato al metodo richiamato al completamento dell&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o è una stringa vuota (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> è un indirizzo IPv6 e il computer locale è in esecuzione un sistema operativo precedente a Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>potrebbe non essere risolte in un indirizzo IP valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Le dimensioni di <code> buffer </code> supera i 65500 byte."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Annulla tutte le richieste asincrone in sospeso per inviare un messaggio echo Internet controllo Message Protocol (ICMP) e riceve un messaggio di risposta echo ICMP corrispondente."
  remarks: "Chiamare questo metodo per interrompere tutte le chiamate a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>che non sono state completate.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  id: SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Inviare un messaggio di echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer in cui è stato specificato <xref:System.Net.IPAddress>e riceve un messaggio di risposta echo ICMP corrispondente da quel computer come un&quot;operazione asincrona.</xref:System.Net.IPAddress>"
  remarks: "Questa operazione non verrà bloccata. L&quot;oggetto restituito <xref:System.Threading.Tasks.Task%601>> oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Un indirizzo IP che identifica il computer che rappresenta la destinazione del messaggio echo ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Restituisce &lt;xref:System.Threading.Tasks.Task%601&gt;.       Oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> non è un indirizzo IP valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  id: SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Invia un messaggio di protocollo ICMP (Internet Control) messaggio echo con i dati specificati nel computer specificato nel buffer e riceve un messaggio di risposta echo ICMP corrispondente da quel computer come un&quot;operazione asincrona."
  remarks: "Questa operazione non verrà bloccata. L&quot;oggetto restituito <xref:System.Threading.Tasks.Task%601>> oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Il computer che rappresenta la destinazione del messaggio echo ICMP. Il valore specificato per questo parametro può essere un nome host o rappresentazione di stringa di un indirizzo IP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Restituisce &lt;xref:System.Threading.Tasks.Task%601&gt;.       Oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  id: SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Inviare un messaggio di echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer in cui è stato specificato <xref:System.Net.IPAddress>e riceve un messaggio di risposta echo ICMP corrispondente da quel computer come un&quot;operazione asincrona.</xref:System.Net.IPAddress> Questo overload consente di specificare un valore di timeout per l&quot;operazione."
  remarks: "Questa operazione non verrà bloccata. L&quot;oggetto restituito <xref:System.Threading.Tasks.Task%601>> oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Un indirizzo IP che identifica il computer che rappresenta la destinazione del messaggio echo ICMP."
    - id: timeout
      type: System.Int32
      description: "Il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Restituisce &lt;xref:System.Threading.Tasks.Task%601&gt;.       Oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  id: SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Invia un messaggio di protocollo ICMP (Internet Control) messaggio echo con i dati specificati nel computer specificato nel buffer e riceve un messaggio di risposta echo ICMP corrispondente da quel computer come un&quot;operazione asincrona. Questo overload consente di specificare un valore di timeout per l&quot;operazione."
  remarks: "Questa operazione non verrà bloccata. L&quot;oggetto restituito <xref:System.Threading.Tasks.Task%601>> oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Il computer che rappresenta la destinazione del messaggio echo ICMP. Il valore specificato per questo parametro può essere un nome host o rappresentazione di stringa di un indirizzo IP."
    - id: timeout
      type: System.Int32
      description: "Il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Restituisce &lt;xref:System.Threading.Tasks.Task%601&gt;.       Oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Inviare un messaggio di echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer in cui è stato specificato <xref:System.Net.IPAddress>e riceve un messaggio di risposta echo ICMP corrispondente da quel computer come un&quot;operazione asincrona.</xref:System.Net.IPAddress> Questo overload consente di specificare un valore di timeout per l&quot;operazione e un buffer da utilizzare per l&quot;invio e ricezione."
  remarks: "Questa operazione non verrà bloccata. L&quot;oggetto restituito <xref:System.Threading.Tasks.Task%601>> oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Un indirizzo IP che identifica il computer che rappresenta la destinazione del messaggio echo ICMP."
    - id: timeout
      type: System.Int32
      description: "Il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP."
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che contiene dati per essere inviato con il messaggio echo ICMP e restituito nel messaggio di risposta echo ICMP.</xref:System.Byte> La matrice non può contenere più di 65.500 byte."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Restituisce &lt;xref:System.Threading.Tasks.Task%601&gt;.       Oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> non è un indirizzo IP valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Le dimensioni di <code> buffer </code> supera 65.500 byte."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  id: SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Invia un messaggio di protocollo ICMP (Internet Control) messaggio echo con i dati specificati nel computer specificato nel buffer e riceve un messaggio di risposta echo ICMP corrispondente da quel computer come un&quot;operazione asincrona. Questo overload consente di specificare un valore di timeout per l&quot;operazione e un buffer da utilizzare per l&quot;invio e ricezione."
  remarks: "Questa operazione non verrà bloccata. L&quot;oggetto restituito <xref:System.Threading.Tasks.Task%601>> oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Il computer che rappresenta la destinazione del messaggio echo ICMP. Il valore specificato per questo parametro può essere un nome host o rappresentazione di stringa di un indirizzo IP."
    - id: timeout
      type: System.Int32
      description: "Il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP."
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che contiene dati per essere inviato con il messaggio echo ICMP e restituito nel messaggio di risposta echo ICMP.</xref:System.Byte> La matrice non può contenere più di 65.500 byte."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Restituisce &lt;xref:System.Threading.Tasks.Task%601&gt;.       Oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Inviare un messaggio di echo messaggio protocollo ICMP (Internet Control) con il buffer di dati specificato per il computer in cui è stato specificato <xref:System.Net.IPAddress>e riceve un messaggio di risposta echo ICMP corrispondente da quel computer come un&quot;operazione asincrona.</xref:System.Net.IPAddress> Questo overload consente di specificare un valore di timeout per l&quot;operazione, un buffer da utilizzare per l&quot;invio e ricezione e controllare la frammentazione e i valori Time-to-Live per il pacchetto del messaggio echo ICMP."
  remarks: "Questa operazione non verrà bloccata. L&quot;oggetto restituito <xref:System.Threading.Tasks.Task%601>> oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Un indirizzo IP che identifica il computer che rappresenta la destinazione del messaggio echo ICMP."
    - id: timeout
      type: System.Int32
      description: "Il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP."
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che contiene dati per essere inviato con il messaggio echo ICMP e restituito nel messaggio di risposta echo ICMP.</xref:System.Byte> La matrice non può contenere più di 65.500 byte."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> oggetto utilizzato per controllare la frammentazione e i valori Time-to-Live per il pacchetto del messaggio echo ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Restituisce &lt;xref:System.Threading.Tasks.Task%601&gt;.       Oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>è minore di zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>è in corso.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "È stata generata un&quot;eccezione durante l&quot;invio o ricezione dei messaggi ICMP. Vedere l&quot;eccezione interna per l&quot;esatta eccezione generata."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> non è un indirizzo IP valido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato eliminato."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Le dimensioni di <code> buffer </code> supera 65.500 byte."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Invia un messaggio di protocollo ICMP (Internet Control) messaggio echo con i dati specificati nel computer specificato nel buffer e riceve un messaggio di risposta echo ICMP corrispondente da quel computer come un&quot;operazione asincrona. Questo overload consente di specificare un valore di timeout per l&quot;operazione, un buffer da utilizzare per l&quot;invio e ricezione e controllare la frammentazione e i valori Time-to-Live per il pacchetto del messaggio echo ICMP."
  remarks: "Questa operazione non verrà bloccata. L&quot;oggetto restituito <xref:System.Threading.Tasks.Task%601>> oggetto verrà completato dopo che il pacchetto ICMP è stato inviato e la risposta è stata ricevuta.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Il computer che rappresenta la destinazione del messaggio echo ICMP. Il valore specificato per questo parametro può essere un nome host o rappresentazione di stringa di un indirizzo IP."
    - id: timeout
      type: System.Int32
      description: "Il numero massimo di millisecondi (dopo l&quot;invio del messaggio echo) di attesa per il messaggio di risposta echo ICMP."
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che contiene dati per essere inviato con il messaggio echo ICMP e restituito nel messaggio di risposta echo ICMP.</xref:System.Byte> La matrice non può contenere più di 65.500 byte."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> oggetto utilizzato per controllare la frammentazione e i valori Time-to-Live per il pacchetto del messaggio echo ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Restituisce &lt;xref:System.Threading.Tasks.Task%601&gt;.       Oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.NetworkInformation.Ping.#ctor
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
- uid: System.Net.NetworkInformation.PingCompletedEventArgs
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventArgs
  nameWithType: PingCompletedEventArgs
  fullName: System.Net.NetworkInformation.PingCompletedEventArgs
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
- uid: System.Net.NetworkInformation.PingCompletedEventHandler
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventHandler
  nameWithType: PingCompletedEventHandler
  fullName: System.Net.NetworkInformation.PingCompletedEventHandler
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
- uid: System.Net.NetworkInformation.PingReply
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<PingReply>
  nameWithType: Task<PingReply>
  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.NetworkInformation.PingReply>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.NetworkInformation.PingReply
    name: PingReply
    nameWithType: PingReply
    fullName: PingReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.#ctor*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping
  nameWithType: Ping.Ping
- uid: System.Net.NetworkInformation.Ping.Dispose*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose
  nameWithType: Ping.Dispose
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted
  nameWithType: Ping.OnPingCompleted
- uid: System.Net.NetworkInformation.Ping.Send*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send
  nameWithType: Ping.Send
- uid: System.Net.NetworkInformation.Ping.SendAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync
  nameWithType: Ping.SendAsync
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel
  nameWithType: Ping.SendAsyncCancel
- uid: System.Net.NetworkInformation.Ping.SendPingAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync
  nameWithType: Ping.SendPingAsync
