### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataResolver
  id: MetadataResolver
  children:
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  langs:
  - csharp
  name: MetadataResolver
  nameWithType: MetadataResolver
  fullName: System.ServiceModel.Description.MetadataResolver
  type: Class
  summary: "Recupera e Importa i metadati come <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Utilizzare la classe MetadataResolver per importare rapidamente endpoint per un servizio dai metadati. Questa classe Scarica e converte metadati in <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti.</xref:System.ServiceModel.Description.ServiceEndpoint> Per scaricare metadati ed elaborare tali informazioni come <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>vedere <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>"
  example:
  - "The following code example shows the use of the MetadataResolver class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]  \n  \n The following code example shows the use of the MetadataResolver to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static class MetadataResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Avvia una chiamata asincrona che risolve un indirizzo di metadati nel <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per i contratti specificati, con l&quot;indirizzo specificato e lo stato asincrono e il delegato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Le impostazioni predefinite <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>vengono utilizzati per recuperare i metadati e il valore predefinito <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>è <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Per scaricare i metadati senza risolvere le informazioni contenute negli <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti, utilizzare il <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direttamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Viene restituita una raccolta vuota se non sono stati importati endpoint o se non corrisponde un endpoint del contratto. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "I contratti per cui si desidera scaricare e risolvere metadati."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "L&quot;indirizzo dei metadati."
    - id: callback
      type: System.AsyncCallback
      description: "Delegato di callback asincrono richiamato quando la chiamata è stata completata."
    - id: asyncState
      type: System.Object
      description: "Lo stato associato alla chiamata asincrona."
    return:
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>che fa riferimento all&quot;operazione di risoluzione asincrona.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;indirizzo, un contratto o un callback è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>è vuoto, almeno un membro di <code>contracts</code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o <code>contracts</code> contiene più di un contratto con lo stesso nome e spazio dei nomi."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Avvia una chiamata asincrona che risolve un indirizzo di metadati nel <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per il contratto specificato con l&quot;indirizzo specificato e lo stato asincrono e il delegato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Le impostazioni predefinite <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>vengono utilizzati per recuperare i metadati e il valore predefinito <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>è <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Per scaricare i metadati senza risolvere le informazioni contenute negli <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti, utilizzare il <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direttamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Viene restituita una raccolta vuota se non sono stati importati endpoint o se non corrisponde un endpoint del contratto. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.       Questo metodo richiede che venga specificato un tipo di contratto. È possibile specificare il contratto dichiarando l&quot;interfaccia del servizio nel codice client o tramite un [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client generato da Svcutil.exe. Se l&quot;interfaccia viene modificata (aggiungendo una nuova operazione, ad esempio) è necessario aggiornare l&quot;interfaccia nel codice client o generare un nuovo [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client. In caso contrario, viene generata un&quot;eccezione. Ad esempio, si dispone di un servizio che implementa un contratto di servizio denominato ICalculator che definisce Add (), Call Sub (), Mult e Div(). Creare un&quot;applicazione client e generare [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client. È quindi possibile aggiungere un metodo a ICalculator denominato echo (). Se si scrive un&quot;applicazione che chiama <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>senza generare un nuovo [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client è generata l&quot;eccezione seguente.</xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "Il contratto per cui si desidera scaricare e risolvere metadati."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "L&quot;indirizzo dei metadati."
    - id: callback
      type: System.AsyncCallback
      description: "Delegato di callback asincrono richiamato quando la chiamata è stata completata."
    - id: asyncState
      type: System.Object
      description: "Lo stato associato alla chiamata asincrona."
    return:
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>che fa riferimento all&quot;operazione di risoluzione asincrona.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;indirizzo, un contratto o un callback è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Avvia una chiamata asincrona che risolve un indirizzo di metadati nel <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per i contratti specificati, utilizzando l&quot;indirizzo specificato, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, lo stato asincrono e il delegato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Il valore predefinito <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>è <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       Per scaricare i metadati senza risolvere le informazioni contenute negli <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti, utilizzare il <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direttamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Viene restituita una raccolta vuota se non sono stati importati endpoint o se non corrisponde un endpoint del contratto. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "I contratti per cui si desidera scaricare e risolvere metadati."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "L&quot;indirizzo dei metadati."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "Il <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> utilizzato per recuperare i metadati."
    - id: callback
      type: System.AsyncCallback
      description: "Delegato di callback asincrono richiamato quando la chiamata è stata completata."
    - id: asyncState
      type: System.Object
      description: "Lo stato associato alla chiamata asincrona."
    return:
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>che fa riferimento all&quot;operazione di risoluzione asincrona.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;indirizzo, contratto, client o callback <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>è vuoto, almeno un membro di <code>contracts</code> è null, o <code>contracts</code> contiene più di un contratto con lo stesso nome e spazio dei nomi."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Avvia una chiamata asincrona che risolve un indirizzo di metadati nel <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per i contratti specificati, utilizzando l&quot;indirizzo specificato, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref> valore, lo stato asincrono e il delegato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Le impostazioni predefinite di <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>vengono utilizzati per recuperare i metadati.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Per scaricare i metadati senza risolvere le informazioni contenute negli <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti, utilizzare il <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direttamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Viene restituita una raccolta vuota se non sono stati importati endpoint o se non corrisponde un endpoint del contratto. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "I contratti per cui si desidera scaricare e risolvere metadati."
    - id: address
      type: System.Uri
      description: "L&quot;indirizzo dei metadati."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Modalità di recupero."
    - id: callback
      type: System.AsyncCallback
      description: "Delegato di callback asincrono richiamato quando la chiamata è stata completata."
    - id: asyncState
      type: System.Object
      description: "Lo stato associato alla chiamata asincrona."
    return:
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>che fa riferimento all&quot;operazione di risoluzione asincrona.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;indirizzo, un contratto o un callback è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>è vuoto, almeno un membro di <code>contracts</code> è null, o <code>contracts</code> contiene più di un contratto con lo stesso nome e spazio dei nomi."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Avvia una chiamata asincrona che risolve un indirizzo di metadati nel <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per il contratto specificato, utilizzando l&quot;indirizzo specificato, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, lo stato asincrono e il delegato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Le impostazioni predefinite di <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>vengono utilizzati per recuperare i metadati.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Per scaricare i metadati senza risolvere le informazioni contenute negli <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti, utilizzare il <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direttamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Viene restituita una raccolta vuota se non sono stati importati endpoint o se non corrisponde un endpoint del contratto. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "Il contratto per cui si desidera scaricare e risolvere metadati."
    - id: address
      type: System.Uri
      description: "L&quot;indirizzo dei metadati."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Modalità di recupero."
    - id: callback
      type: System.AsyncCallback
      description: "Delegato di callback asincrono richiamato quando la chiamata è stata completata."
    - id: asyncState
      type: System.Object
      description: "Lo stato associato alla chiamata asincrona."
    return:
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>che fa riferimento all&quot;operazione di risoluzione asincrona.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;indirizzo, un contratto o un callback è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Avvia una chiamata asincrona che risolve un indirizzo di metadati nel <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per i contratti specificati, utilizzando l&quot;indirizzo specificato, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, lo stato asincrono e delegato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Per scaricare i metadati senza risolvere le informazioni contenute negli <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti, utilizzare il <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direttamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Viene restituita una raccolta vuota se non sono stati importati endpoint o se non corrisponde un endpoint del contratto. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "I contratti per cui si desidera scaricare e risolvere metadati."
    - id: address
      type: System.Uri
      description: "L&quot;indirizzo dei metadati."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Modalità di recupero."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "Il <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> utilizzato per recuperare i metadati."
    - id: callback
      type: System.AsyncCallback
      description: "Delegato di callback asincrono richiamato quando la chiamata è stata completata."
    - id: asyncState
      type: System.Object
      description: "Lo stato associato alla chiamata asincrona."
    return:
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>che fa riferimento all&quot;operazione di risoluzione asincrona.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;indirizzo, un contratto o un callback è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>è vuoto, almeno un membro di <code>contracts</code> è null, o <code>contracts</code> contiene più di un contratto con lo stesso nome e spazio dei nomi."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  id: EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Completa una chiamata asincrona per risolvere i metadati in una raccolta di endpoint."
  remarks: "Termina una chiamata asincrona a uno del <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>metodi.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>oggetto che è stata ricevuta una chiamata al <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*>metodo.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*> </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Una raccolta di <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per gli endpoint contenuti nei metadati.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.EndResolve*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Risolve un indirizzo di metadati nel <xref:System.ServiceModel.Description.ServiceEndpoint>gli oggetti per i contratti specificati utilizzando l&quot;indirizzo di metadati specificato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Le impostazioni predefinite <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>vengono utilizzati per recuperare i metadati e il valore predefinito <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>è <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Per scaricare i metadati senza risolvere le informazioni contenute negli <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti, utilizzare il <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direttamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Viene restituita una raccolta vuota se non sono stati importati endpoint o se non corrisponde un endpoint del contratto. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "I contratti per cui si desidera scaricare e risolvere metadati."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "L&quot;indirizzo dei metadati."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Una raccolta di <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per il contratto specificato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La raccolta di contratti o l&quot;indirizzo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>è vuoto, almeno un membro di <code>contracts</code> è null, o <code>contracts</code> contiene più di un contratto con lo stesso nome e spazio dei nomi."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  id: Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Scarica e risolve un indirizzo di metadati in una raccolta di <xref:System.ServiceModel.Description.ServiceEndpoint>gli oggetti per un contratto specificato a un indirizzo specificato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Utilizzare il metodo di risoluzione per specificare il contratto e l&quot;indirizzo dei metadati da utilizzare quando si scaricano e la risoluzione dei metadati.       Le impostazioni predefinite <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>vengono utilizzati per recuperare i metadati e il valore predefinito <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>è <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Per scaricare i metadati senza risolvere le informazioni contenute negli <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti, utilizzare il <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direttamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Viene restituita una raccolta vuota se non sono stati importati endpoint o se non corrisponde un endpoint del contratto. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso.       Questo metodo richiede che venga specificato un tipo di contratto. È possibile specificare il contratto dichiarando l&quot;interfaccia del servizio nel codice client o tramite un [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client generato da Svcutil.exe. Se l&quot;interfaccia viene modificata (aggiungendo una nuova operazione, ad esempio) è necessario aggiornare l&quot;interfaccia nel codice client o generare un nuovo [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client. In caso contrario, viene generata un&quot;eccezione. Ad esempio, si dispone di un servizio che implementa un contratto di servizio denominato ICalculator che definisce Add (), Call Sub (), Mult e Div(). Creare un&quot;applicazione client e generare [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client. È quindi possibile aggiungere un metodo a ICalculator denominato echo (). Se si scrive un&quot;applicazione che chiama risoluzione senza generare un nuovo [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client è generata l&quot;eccezione seguente.       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contract
      type: System.Type
      description: "I contratti per cui si desidera scaricare e risolvere metadati."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "L&quot;indirizzo dei metadati."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Una raccolta di <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per il contratto specificato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;indirizzo o il contratto è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Risolve un indirizzo di metadati nel <xref:System.ServiceModel.Description.ServiceEndpoint>gli oggetti per i contratti specificati utilizzando l&quot;indirizzo di metadati specificati e <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Il valore predefinito <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>è <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       Per scaricare i metadati senza risolvere le informazioni contenute negli <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti, utilizzare il <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direttamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Viene restituita una raccolta vuota se non sono stati importati endpoint o se non corrisponde un endpoint del contratto. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "I contratti per cui si desidera scaricare e risolvere metadati."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "L&quot;indirizzo dei metadati."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "Il <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> utilizzato per recuperare i metadati."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Una raccolta di <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per il contratto specificato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;indirizzo, la raccolta di contratti o il client è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>è vuoto, almeno un membro di <code>contracts</code> è null, o <code>contracts</code> contiene più di un contratto con lo stesso nome e spazio dei nomi."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Risolve un indirizzo di metadati nel <xref:System.ServiceModel.Description.ServiceEndpoint>gli oggetti per i contratti specificati utilizzando la modalità di trasferimento e l&quot;indirizzo specificata.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Le impostazioni predefinite di <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>vengono utilizzati per recuperare i metadati.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Per scaricare i metadati senza risolvere le informazioni contenute negli <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti, utilizzare il <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direttamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Viene restituita una raccolta vuota se non sono stati importati endpoint o se non corrisponde un endpoint del contratto. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "I contratti per cui si desidera scaricare e risolvere metadati."
    - id: address
      type: System.Uri
      description: "L&quot;indirizzo dei metadati."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Modalità di recupero."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Una raccolta di <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per il contratto specificato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La raccolta di contratti o l&quot;indirizzo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>è vuoto, almeno un membro di <code>contracts</code> è null, o <code>contracts</code> contiene più di un contratto con lo stesso nome e spazio dei nomi."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Risolve un indirizzo di metadati nel <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per il contratto specificato usando la modalità di trasferimento e l&quot;indirizzo specificata.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Utilizzare il metodo di risoluzione per specificare un contratto e l&quot;indirizzo e il meccanismo di download da utilizzare.       Le impostazioni predefinite di <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>vengono utilizzati per recuperare i metadati.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Per scaricare i metadati senza risolvere le informazioni contenute negli <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti, utilizzare il <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direttamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Viene restituita una raccolta vuota se non sono stati importati endpoint o se non corrisponde un endpoint del contratto. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contract
      type: System.Type
      description: "Il contratto per cui si desidera scaricare e risolvere metadati."
    - id: address
      type: System.Uri
      description: "L&quot;indirizzo dei metadati."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Modalità di recupero."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Una raccolta di <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per il contratto specificato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;indirizzo o il contratto è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Risolve un indirizzo di metadati nel <xref:System.ServiceModel.Description.ServiceEndpoint>gli oggetti per i contratti specificati utilizzando l&quot;indirizzo specificato, la modalità di trasferimento e client di trasferimento.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Per scaricare i metadati senza risolvere le informazioni contenute negli <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti, utilizzare il <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>direttamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Viene restituita una raccolta vuota se non sono stati importati endpoint o se non corrisponde un endpoint del contratto. Se viene restituita una raccolta vuota, viene scritta una traccia di avviso."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "I contratti per cui si desidera scaricare e risolvere metadati."
    - id: address
      type: System.Uri
      description: "L&quot;indirizzo dei metadati."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Modalità di recupero."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "Il <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> utilizzato per recuperare i metadati."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Una raccolta di <xref:System.ServiceModel.Description.ServiceEndpoint>oggetti per il contratto specificato.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;indirizzo, la raccolta di contratti o il client è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>è vuoto, almeno un membro di <code>contracts</code> è null, o <code>contracts</code> contiene più di un contratto con lo stesso nome e spazio dei nomi."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ContractDescription>
  nameWithType: IEnumerable<ContractDescription>
  fullName: System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataExchangeClient
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClient
  nameWithType: MetadataExchangeClient
  fullName: System.ServiceModel.Description.MetadataExchangeClient
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Description.MetadataExchangeClientMode
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClientMode
  nameWithType: MetadataExchangeClientMode
  fullName: System.ServiceModel.Description.MetadataExchangeClientMode
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
- uid: System.ServiceModel.Description.ServiceEndpointCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpointCollection
  nameWithType: ServiceEndpointCollection
  fullName: System.ServiceModel.Description.ServiceEndpointCollection
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve
  nameWithType: MetadataResolver.BeginResolve
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve
  nameWithType: MetadataResolver.EndResolve
- uid: System.ServiceModel.Description.MetadataResolver.Resolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve
  nameWithType: MetadataResolver.Resolve
