### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection
  id: UsingTaskCollection
  children:
  - Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)
  - Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)
  - Microsoft.Build.BuildEngine.UsingTaskCollection.Count
  - Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator
  - Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized
  - Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot
  langs:
  - csharp
  name: UsingTaskCollection
  nameWithType: UsingTaskCollection
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection
  type: Class
  summary: "Rappresenta una raccolta di tutti [UsingTask](~/add/includes/ajax-current-ext-md.md) elementi in un progetto."
  syntax:
    content: 'public class UsingTaskCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)
  id: CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  langs:
  - csharp
  name: CopyTo(UsingTask[],Int32)
  nameWithType: UsingTaskCollection.CopyTo(UsingTask[],Int32)
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(UsingTask[],Int32)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Copia l&quot;intero <xref href=&quot;Microsoft.Build.BuildEngine.UsingTaskCollection&quot;> </xref> in una matrice unidimensionale compatibile <xref:System.Array>di <xref href=&quot;Microsoft.Build.BuildEngine.UsingTask&quot;> </xref> oggetti, a partire dall&quot;indice specificato della matrice di destinazione.</xref:System.Array>"
  syntax:
    content: public void CopyTo (Microsoft.Build.BuildEngine.UsingTask[] array, int index);
    parameters:
    - id: array
      type: Microsoft.Build.BuildEngine.UsingTask[]
      description: "Oggetto unidimensionale <xref:System.Array>di <xref href=&quot;Microsoft.Build.BuildEngine.UsingTask&quot;> </xref> gli oggetti che rappresenta la destinazione degli elementi copiati da <xref href=&quot;Microsoft.Build.BuildEngine.UsingTaskCollection&quot;> </xref>.</xref:System.Array> Il <xref:System.Array>deve avere un&quot;indicizzazione in base zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Indice in base zero `array` in corrispondenza del quale inizia la copia."
  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: UsingTaskCollection.CopyTo(Array,Int32)
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Copia l&quot;intero <xref href=&quot;Microsoft.Build.BuildEngine.UsingTaskCollection&quot;> </xref> in una matrice unidimensionale compatibile <xref:System.Array>, a partire dall&quot;indice specificato della matrice di destinazione.</xref:System.Array>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Oggetto unidimensionale <xref:System.Array>che rappresenta la destinazione degli elementi copiati da <xref href=&quot;Microsoft.Build.BuildEngine.UsingTaskCollection&quot;> </xref>.</xref:System.Array> Il <xref:System.Array>deve avere un&quot;indicizzazione in base zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Indice in base zero `array` in corrispondenza del quale inizia la copia."
  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.Count
  id: Count
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  langs:
  - csharp
  name: Count
  nameWithType: UsingTaskCollection.Count
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.Count
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Ottiene un valore che indica il numero di <xref href=&quot;Microsoft.Build.BuildEngine.UsingTask&quot;> </xref> gli oggetti di <xref href=&quot;Microsoft.Build.BuildEngine.UsingTaskCollection&quot;> </xref>."
  remarks: "Ogni <xref:Microsoft.Build.BuildEngine.UsingTask>oggetto nella raccolta rappresenta un elemento nel progetto.</xref:Microsoft.Build.BuildEngine.UsingTask>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Valore intero che rappresenta il numero di <xref href=&quot;Microsoft.Build.BuildEngine.UsingTask&quot;> </xref> oggetti nella raccolta."
  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: UsingTaskCollection.GetEnumerator()
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Ottiene un enumeratore che scorre la <xref href=&quot;Microsoft.Build.BuildEngine.UsingTaskCollection&quot;> </xref>."
  remarks: "Questo metodo consente al chiamante di usare il `foreach` istruzione del linguaggio c# (`for each` in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]) per scorrere i singoli <xref:Microsoft.Build.BuildEngine.UsingTask>oggetti <xref:Microsoft.Build.BuildEngine.UsingTaskCollection>.</xref:Microsoft.Build.BuildEngine.UsingTaskCollection> </xref:Microsoft.Build.BuildEngine.UsingTask>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un <xref:System.Collections.IEnumerator>per l&quot;intero <xref href=&quot;Microsoft.Build.BuildEngine.UsingTaskCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized
  id: IsSynchronized
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: UsingTaskCollection.IsSynchronized
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Ottiene un valore che indica se l&quot;accesso per il <xref href=&quot;Microsoft.Build.BuildEngine.UsingTaskCollection&quot;> </xref> è sincronizzato (thread-safe)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;accesso alla <xref href=&quot;Microsoft.Build.BuildEngine.UsingTaskCollection&quot;> </xref> è sincronizzato (thread-safe); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot
  id: SyncRoot
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: UsingTaskCollection.SyncRoot
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Ottiene un oggetto che può essere utilizzato per sincronizzare l&quot;accesso alla <xref href=&quot;Microsoft.Build.BuildEngine.UsingTaskCollection&quot;> </xref>."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Oggetto che può essere utilizzato per sincronizzare l&quot;accesso alla <xref href=&quot;Microsoft.Build.BuildEngine.UsingTaskCollection&quot;> </xref>."
  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: CopyTo(UsingTask[],Int32)
  nameWithType: UsingTaskCollection.CopyTo(UsingTask[],Int32)
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(UsingTask[],Int32)
- uid: Microsoft.Build.BuildEngine.UsingTask[]
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: UsingTask
  nameWithType: UsingTask
  fullName: Microsoft.Build.BuildEngine.UsingTask[]
  spec.csharp:
  - uid: Microsoft.Build.BuildEngine.UsingTask
    name: UsingTask
    nameWithType: UsingTask
    fullName: UsingTask[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: UsingTaskCollection.CopyTo(Array,Int32)
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.Count
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: Count
  nameWithType: UsingTaskCollection.Count
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.Count
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: UsingTaskCollection.GetEnumerator()
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: UsingTaskCollection.IsSynchronized
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: SyncRoot
  nameWithType: UsingTaskCollection.SyncRoot
  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo*
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: CopyTo
  nameWithType: UsingTaskCollection.CopyTo
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.Count*
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: Count
  nameWithType: UsingTaskCollection.Count
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator*
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: UsingTaskCollection.GetEnumerator
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized*
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: UsingTaskCollection.IsSynchronized
- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot*
  parent: Microsoft.Build.BuildEngine.UsingTaskCollection
  isExternal: false
  name: SyncRoot
  nameWithType: UsingTaskCollection.SyncRoot
